{"version":3,"sources":["webpack:///../es2015/.internal/fabric/fabric.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/base64-js/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/ieee754/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/isarray/index.js"],"names":["Buffer","global","sqrt","atan2","pow","abs","PiBy180","PiBy2","min","max","supportQuality","degreesToRadians","originXOffset","originYOffset","clone","toFixed","multipleSpacesRegex","setObjectScaleOverridden","fabric","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","this","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","exports","document","window","__webpack_require__","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","defaultView","DOMParser","isTouchSupported","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","getObjects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","type","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","get","toggle","Math","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","floor","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","a","r","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","concat","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","prototype","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","fn","String","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","arcToSegmentsCache","segmentToBezierCache","boundsOfCurveCache","_join","Array","join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","argsString2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","toLowerCase","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","uid","getUniqueId","element","__uniqueID","createListener","wrappedHandler","e","event","createWrappedHandler","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","touchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","makeXHR","factories","ActiveXObject","XMLHttpRequest","emptyFn","request","onComplete","xhr","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","map","n","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","m","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","firstChild","parseSVGDocument","parsingOptions","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","el3","nodeValue","removeAttribute","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","idsToXlinkMap","parseAttributes","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","Image","_removeTransformMatrix","instanceFillValue","gradientId","lastIndex","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","proto","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","ignoreZoom","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","_setCursorFromEvent","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","which","button","cursorMap","_bindEvents","_onResize","_onMouseDown","_onDoubleClick","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","eventsBound","_onMouseUp","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_handleEvent","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","__corner","eventType","subTargets","targetObj","_scaling","hasStateChanged","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","_beforeTransform","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","_cacheProperties","_cacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","zoomX","capped","zoomY","_getCacheCanvasDimensions","objectScale","getObjectScaling","retina","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","cacheTranslationX","cacheTranslationY","_transformDone","calcOwnMatrix","_removeDefaultValues","scaling","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","shouldCache","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","ownCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","skipCanvas","_removeShadow","decl","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","w","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgId","getSvgTransform","translatePart","anglePart","scalePart","skewXPart","skewYPart","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","addTransform","chunks","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","objsToObject","originalDefaults","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","backend","filterBackend","evictCachesForKey","_originalElement","_initConfig","resizeFilter","applyResizeFilters","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","clipPath","clipPathId","imageMarkup","getSvgSrc","origFill","filtered","setSrc","retinaScaling","minimumScale","elementToFilter","sourceWidth","sourceHeight","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","ret","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","aPostion","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","isNeutralState","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","mainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","_class","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","sX","sY","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","clearContextTop","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseUpHandler","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","tw","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","checked","val","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","eval","module","b64","placeHoldersCount","tmp","placeHolders","Arr","L","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2"],"mappings":"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","file":"deps/fabric.js","sourcesContent":["var fabric = fabric || {\n    version: \"2.2.3\"\n};\n\nif (typeof exports !== \"undefined\") {\n    exports.fabric = fabric;\n} else if (typeof define === \"function\" && define.amd) {\n    define([], function() {\n        return fabric;\n    });\n}\n\nif (typeof document !== \"undefined\" && typeof window !== \"undefined\") {\n    fabric.document = document;\n    fabric.window = window;\n} else {\n    fabric.document = require(\"jsdom\").jsdom(decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\"), {\n        features: {\n            FetchExternalResources: [ \"img\" ]\n        }\n    });\n    fabric.jsdomImplForWrapper = require(\"jsdom/lib/jsdom/living/generated/utils\").implForWrapper;\n    fabric.nodeCanvas = require(\"jsdom/lib/jsdom/utils\").Canvas;\n    fabric.window = fabric.document.defaultView;\n    DOMParser = require(\"xmldom\").DOMParser;\n}\n\nfabric.isTouchSupported = \"ontouchstart\" in fabric.window;\n\nfabric.isLikelyNode = typeof Buffer !== \"undefined\" && typeof window === \"undefined\";\n\nfabric.SHARED_ATTRIBUTES = [ \"display\", \"transform\", \"fill\", \"fill-opacity\", \"fill-rule\", \"opacity\", \"stroke\", \"stroke-dasharray\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"id\", \"paint-order\", \"instantiated_by_use\" ];\n\nfabric.DPI = 96;\n\nfabric.reNum = \"(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)\";\n\nfabric.fontPaths = {};\n\nfabric.iMatrix = [ 1, 0, 0, 1, 0, 0 ];\n\nfabric.canvasModule = \"canvas\";\n\nfabric.perfLimitSizeTotal = 2097152;\n\nfabric.maxCacheSideLimit = 4096;\n\nfabric.minCacheSideLimit = 256;\n\nfabric.charWidthsCache = {};\n\nfabric.textureSize = 2048;\n\nfabric.enableGLFiltering = true;\n\nfabric.devicePixelRatio = fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1;\n\nfabric.browserShadowBlurConstant = 1;\n\nfabric.initFilterBackend = function() {\n    if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n        console.log(\"max texture size: \" + fabric.maxTextureSize);\n        return new fabric.WebglFilterBackend({\n            tileSize: fabric.textureSize\n        });\n    } else if (fabric.Canvas2dFilterBackend) {\n        return new fabric.Canvas2dFilterBackend();\n    }\n};\n\nif (typeof document !== \"undefined\" && typeof window !== \"undefined\") {\n    window.fabric = fabric;\n}\n\n(function() {\n    function _removeEventListener(eventName, handler) {\n        if (!this.__eventListeners[eventName]) {\n            return;\n        }\n        var eventListener = this.__eventListeners[eventName];\n        if (handler) {\n            eventListener[eventListener.indexOf(handler)] = false;\n        } else {\n            fabric.util.array.fill(eventListener, false);\n        }\n    }\n    function observe(eventName, handler) {\n        if (!this.__eventListeners) {\n            this.__eventListeners = {};\n        }\n        if (arguments.length === 1) {\n            for (var prop in eventName) {\n                this.on(prop, eventName[prop]);\n            }\n        } else {\n            if (!this.__eventListeners[eventName]) {\n                this.__eventListeners[eventName] = [];\n            }\n            this.__eventListeners[eventName].push(handler);\n        }\n        return this;\n    }\n    function stopObserving(eventName, handler) {\n        if (!this.__eventListeners) {\n            return;\n        }\n        if (arguments.length === 0) {\n            for (eventName in this.__eventListeners) {\n                _removeEventListener.call(this, eventName);\n            }\n        } else if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            for (var prop in eventName) {\n                _removeEventListener.call(this, prop, eventName[prop]);\n            }\n        } else {\n            _removeEventListener.call(this, eventName, handler);\n        }\n        return this;\n    }\n    function fire(eventName, options) {\n        if (!this.__eventListeners) {\n            return;\n        }\n        var listenersForEvent = this.__eventListeners[eventName];\n        if (!listenersForEvent) {\n            return;\n        }\n        for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n            listenersForEvent[i] && listenersForEvent[i].call(this, options || {});\n        }\n        this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n            return value !== false;\n        });\n        return this;\n    }\n    fabric.Observable = {\n        observe: observe,\n        stopObserving: stopObserving,\n        fire: fire,\n        on: observe,\n        off: stopObserving,\n        trigger: fire\n    };\n})();\n\nfabric.Collection = {\n    _objects: [],\n    add: function() {\n        this._objects.push.apply(this._objects, arguments);\n        if (this._onObjectAdded) {\n            for (var i = 0, length = arguments.length; i < length; i++) {\n                this._onObjectAdded(arguments[i]);\n            }\n        }\n        this.renderOnAddRemove && this.requestRenderAll();\n        return this;\n    },\n    insertAt: function(object, index, nonSplicing) {\n        var objects = this.getObjects();\n        if (nonSplicing) {\n            objects[index] = object;\n        } else {\n            objects.splice(index, 0, object);\n        }\n        this._onObjectAdded && this._onObjectAdded(object);\n        this.renderOnAddRemove && this.requestRenderAll();\n        return this;\n    },\n    remove: function() {\n        var objects = this.getObjects(), index, somethingRemoved = false;\n        for (var i = 0, length = arguments.length; i < length; i++) {\n            index = objects.indexOf(arguments[i]);\n            if (index !== -1) {\n                somethingRemoved = true;\n                objects.splice(index, 1);\n                this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n            }\n        }\n        this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n        return this;\n    },\n    forEachObject: function(callback, context) {\n        var objects = this.getObjects();\n        for (var i = 0, len = objects.length; i < len; i++) {\n            callback.call(context, objects[i], i, objects);\n        }\n        return this;\n    },\n    getObjects: function(type) {\n        if (typeof type === \"undefined\") {\n            return this._objects;\n        }\n        return this._objects.filter(function(o) {\n            return o.type === type;\n        });\n    },\n    item: function(index) {\n        return this.getObjects()[index];\n    },\n    isEmpty: function() {\n        return this.getObjects().length === 0;\n    },\n    size: function() {\n        return this.getObjects().length;\n    },\n    contains: function(object) {\n        return this.getObjects().indexOf(object) > -1;\n    },\n    complexity: function() {\n        return this.getObjects().reduce(function(memo, current) {\n            memo += current.complexity ? current.complexity() : 0;\n            return memo;\n        }, 0);\n    }\n};\n\nfabric.CommonMethods = {\n    _setOptions: function(options) {\n        for (var prop in options) {\n            this.set(prop, options[prop]);\n        }\n    },\n    _initGradient: function(filler, property) {\n        if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n            this.set(property, new fabric.Gradient(filler));\n        }\n    },\n    _initPattern: function(filler, property, callback) {\n        if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n            this.set(property, new fabric.Pattern(filler, callback));\n        } else {\n            callback && callback();\n        }\n    },\n    _initClipping: function(options) {\n        if (!options.clipTo || typeof options.clipTo !== \"string\") {\n            return;\n        }\n        var functionBody = fabric.util.getFunctionBody(options.clipTo);\n        if (typeof functionBody !== \"undefined\") {\n            this.clipTo = new Function(\"ctx\", functionBody);\n        }\n    },\n    _setObject: function(obj) {\n        for (var prop in obj) {\n            this._set(prop, obj[prop]);\n        }\n    },\n    set: function(key, value) {\n        if (typeof key === \"object\") {\n            this._setObject(key);\n        } else {\n            if (typeof value === \"function\" && key !== \"clipTo\") {\n                this._set(key, value(this.get(key)));\n            } else {\n                this._set(key, value);\n            }\n        }\n        return this;\n    },\n    _set: function(key, value) {\n        this[key] = value;\n    },\n    toggle: function(property) {\n        var value = this.get(property);\n        if (typeof value === \"boolean\") {\n            this.set(property, !value);\n        }\n        return this;\n    },\n    get: function(property) {\n        return this[property];\n    }\n};\n\n(function(global) {\n    var sqrt = Math.sqrt, atan2 = Math.atan2, pow = Math.pow, abs = Math.abs, PiBy180 = Math.PI / 180, PiBy2 = Math.PI / 2;\n    fabric.util = {\n        cos: function(angle) {\n            if (angle === 0) {\n                return 1;\n            }\n            if (angle < 0) {\n                angle = -angle;\n            }\n            var angleSlice = angle / PiBy2;\n            switch (angleSlice) {\n              case 1:\n              case 3:\n                return 0;\n\n              case 2:\n                return -1;\n            }\n            return Math.cos(angle);\n        },\n        sin: function(angle) {\n            if (angle === 0) {\n                return 0;\n            }\n            var angleSlice = angle / PiBy2, sign = 1;\n            if (angle < 0) {\n                sign = -1;\n            }\n            switch (angleSlice) {\n              case 1:\n                return sign;\n\n              case 2:\n                return 0;\n\n              case 3:\n                return -sign;\n            }\n            return Math.sin(angle);\n        },\n        removeFromArray: function(array, value) {\n            var idx = array.indexOf(value);\n            if (idx !== -1) {\n                array.splice(idx, 1);\n            }\n            return array;\n        },\n        getRandomInt: function(min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        },\n        degreesToRadians: function(degrees) {\n            return degrees * PiBy180;\n        },\n        radiansToDegrees: function(radians) {\n            return radians / PiBy180;\n        },\n        rotatePoint: function(point, origin, radians) {\n            point.subtractEquals(origin);\n            var v = fabric.util.rotateVector(point, radians);\n            return new fabric.Point(v.x, v.y).addEquals(origin);\n        },\n        rotateVector: function(vector, radians) {\n            var sin = fabric.util.sin(radians), cos = fabric.util.cos(radians), rx = vector.x * cos - vector.y * sin, ry = vector.x * sin + vector.y * cos;\n            return {\n                x: rx,\n                y: ry\n            };\n        },\n        transformPoint: function(p, t, ignoreOffset) {\n            if (ignoreOffset) {\n                return new fabric.Point(t[0] * p.x + t[2] * p.y, t[1] * p.x + t[3] * p.y);\n            }\n            return new fabric.Point(t[0] * p.x + t[2] * p.y + t[4], t[1] * p.x + t[3] * p.y + t[5]);\n        },\n        makeBoundingBoxFromPoints: function(points) {\n            var xPoints = [ points[0].x, points[1].x, points[2].x, points[3].x ], minX = fabric.util.array.min(xPoints), maxX = fabric.util.array.max(xPoints), width = maxX - minX, yPoints = [ points[0].y, points[1].y, points[2].y, points[3].y ], minY = fabric.util.array.min(yPoints), maxY = fabric.util.array.max(yPoints), height = maxY - minY;\n            return {\n                left: minX,\n                top: minY,\n                width: width,\n                height: height\n            };\n        },\n        invertTransform: function(t) {\n            var a = 1 / (t[0] * t[3] - t[1] * t[2]), r = [ a * t[3], -a * t[1], -a * t[2], a * t[0] ], o = fabric.util.transformPoint({\n                x: t[4],\n                y: t[5]\n            }, r, true);\n            r[4] = -o.x;\n            r[5] = -o.y;\n            return r;\n        },\n        toFixed: function(number, fractionDigits) {\n            return parseFloat(Number(number).toFixed(fractionDigits));\n        },\n        parseUnit: function(value, fontSize) {\n            var unit = /\\D{0,2}$/.exec(value), number = parseFloat(value);\n            if (!fontSize) {\n                fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n            }\n            switch (unit[0]) {\n              case \"mm\":\n                return number * fabric.DPI / 25.4;\n\n              case \"cm\":\n                return number * fabric.DPI / 2.54;\n\n              case \"in\":\n                return number * fabric.DPI;\n\n              case \"pt\":\n                return number * fabric.DPI / 72;\n\n              case \"pc\":\n                return number * fabric.DPI / 72 * 12;\n\n              case \"em\":\n                return number * fontSize;\n\n              default:\n                return number;\n            }\n        },\n        falseFunction: function() {\n            return false;\n        },\n        getKlass: function(type, namespace) {\n            type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n            return fabric.util.resolveNamespace(namespace)[type];\n        },\n        getSvgAttributes: function(type) {\n            var attributes = [ \"instantiated_by_use\", \"style\", \"id\", \"class\" ];\n            switch (type) {\n              case \"linearGradient\":\n                attributes = attributes.concat([ \"x1\", \"y1\", \"x2\", \"y2\", \"gradientUnits\", \"gradientTransform\" ]);\n                break;\n\n              case \"radialGradient\":\n                attributes = attributes.concat([ \"gradientUnits\", \"gradientTransform\", \"cx\", \"cy\", \"r\", \"fx\", \"fy\", \"fr\" ]);\n                break;\n\n              case \"stop\":\n                attributes = attributes.concat([ \"offset\", \"stop-color\", \"stop-opacity\" ]);\n                break;\n            }\n            return attributes;\n        },\n        resolveNamespace: function(namespace) {\n            if (!namespace) {\n                return fabric;\n            }\n            var parts = namespace.split(\".\"), len = parts.length, i, obj = global || fabric.window;\n            for (i = 0; i < len; ++i) {\n                obj = obj[parts[i]];\n            }\n            return obj;\n        },\n        loadImage: function(url, callback, context, crossOrigin) {\n            if (!url) {\n                callback && callback.call(context, url);\n                return;\n            }\n            var img = fabric.util.createImage();\n            var onLoadCallback = function() {\n                callback && callback.call(context, img);\n                img = img.onload = img.onerror = null;\n            };\n            img.onload = onLoadCallback;\n            img.onerror = function() {\n                fabric.log(\"Error loading \" + img.src);\n                callback && callback.call(context, null, true);\n                img = img.onload = img.onerror = null;\n            };\n            if (url.indexOf(\"data\") !== 0 && crossOrigin) {\n                img.crossOrigin = crossOrigin;\n            }\n            if (url.substring(0, 14) === \"data:image/svg\") {\n                img.onload = null;\n                fabric.util.loadImageInDom(img, onLoadCallback);\n            }\n            img.src = url;\n        },\n        loadImageInDom: function(img, onLoadCallback) {\n            var div = fabric.document.createElement(\"div\");\n            div.style.width = div.style.height = \"1px\";\n            div.style.left = div.style.top = \"-100%\";\n            div.style.position = \"absolute\";\n            div.appendChild(img);\n            fabric.document.querySelector(\"body\").appendChild(div);\n            img.onload = function() {\n                onLoadCallback();\n                div.parentNode.removeChild(div);\n                div = null;\n            };\n        },\n        enlivenObjects: function(objects, callback, namespace, reviver) {\n            objects = objects || [];\n            function onLoaded() {\n                if (++numLoadedObjects === numTotalObjects) {\n                    callback && callback(enlivenedObjects);\n                }\n            }\n            var enlivenedObjects = [], numLoadedObjects = 0, numTotalObjects = objects.length;\n            if (!numTotalObjects) {\n                callback && callback(enlivenedObjects);\n                return;\n            }\n            objects.forEach(function(o, index) {\n                if (!o || !o.type) {\n                    onLoaded();\n                    return;\n                }\n                var klass = fabric.util.getKlass(o.type, namespace);\n                klass.fromObject(o, function(obj, error) {\n                    error || (enlivenedObjects[index] = obj);\n                    reviver && reviver(o, obj, error);\n                    onLoaded();\n                });\n            });\n        },\n        enlivenPatterns: function(patterns, callback) {\n            patterns = patterns || [];\n            function onLoaded() {\n                if (++numLoadedPatterns === numPatterns) {\n                    callback && callback(enlivenedPatterns);\n                }\n            }\n            var enlivenedPatterns = [], numLoadedPatterns = 0, numPatterns = patterns.length;\n            if (!numPatterns) {\n                callback && callback(enlivenedPatterns);\n                return;\n            }\n            patterns.forEach(function(p, index) {\n                if (p && p.source) {\n                    new fabric.Pattern(p, function(pattern) {\n                        enlivenedPatterns[index] = pattern;\n                        onLoaded();\n                    });\n                } else {\n                    enlivenedPatterns[index] = p;\n                    onLoaded();\n                }\n            });\n        },\n        groupSVGElements: function(elements, options, path) {\n            var object;\n            if (elements.length === 1) {\n                return elements[0];\n            }\n            if (options) {\n                if (options.width && options.height) {\n                    options.centerPoint = {\n                        x: options.width / 2,\n                        y: options.height / 2\n                    };\n                } else {\n                    delete options.width;\n                    delete options.height;\n                }\n            }\n            object = new fabric.Group(elements, options);\n            if (typeof path !== \"undefined\") {\n                object.sourcePath = path;\n            }\n            return object;\n        },\n        populateWithProperties: function(source, destination, properties) {\n            if (properties && Object.prototype.toString.call(properties) === \"[object Array]\") {\n                for (var i = 0, len = properties.length; i < len; i++) {\n                    if (properties[i] in source) {\n                        destination[properties[i]] = source[properties[i]];\n                    }\n                }\n            }\n        },\n        drawDashedLine: function(ctx, x, y, x2, y2, da) {\n            var dx = x2 - x, dy = y2 - y, len = sqrt(dx * dx + dy * dy), rot = atan2(dy, dx), dc = da.length, di = 0, draw = true;\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.moveTo(0, 0);\n            ctx.rotate(rot);\n            x = 0;\n            while (len > x) {\n                x += da[di++ % dc];\n                if (x > len) {\n                    x = len;\n                }\n                ctx[draw ? \"lineTo\" : \"moveTo\"](x, 0);\n                draw = !draw;\n            }\n            ctx.restore();\n        },\n        createCanvasElement: function() {\n            return fabric.document.createElement(\"canvas\");\n        },\n        createImage: function() {\n            return fabric.document.createElement(\"img\");\n        },\n        clipContext: function(receiver, ctx) {\n            ctx.save();\n            ctx.beginPath();\n            receiver.clipTo(ctx);\n            ctx.clip();\n        },\n        multiplyTransformMatrices: function(a, b, is2x2) {\n            return [ a[0] * b[0] + a[2] * b[1], a[1] * b[0] + a[3] * b[1], a[0] * b[2] + a[2] * b[3], a[1] * b[2] + a[3] * b[3], is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4], is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5] ];\n        },\n        qrDecompose: function(a) {\n            var angle = atan2(a[1], a[0]), denom = pow(a[0], 2) + pow(a[1], 2), scaleX = sqrt(denom), scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX, skewX = atan2(a[0] * a[2] + a[1] * a[3], denom);\n            return {\n                angle: angle / PiBy180,\n                scaleX: scaleX,\n                scaleY: scaleY,\n                skewX: skewX / PiBy180,\n                skewY: 0,\n                translateX: a[4],\n                translateY: a[5]\n            };\n        },\n        customTransformMatrix: function(scaleX, scaleY, skewX) {\n            var skewMatrixX = [ 1, 0, abs(Math.tan(skewX * PiBy180)), 1 ], scaleMatrix = [ abs(scaleX), 0, 0, abs(scaleY) ];\n            return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n        },\n        resetObjectTransform: function(target) {\n            target.scaleX = 1;\n            target.scaleY = 1;\n            target.skewX = 0;\n            target.skewY = 0;\n            target.flipX = false;\n            target.flipY = false;\n            target.rotate(0);\n        },\n        getFunctionBody: function(fn) {\n            return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n        },\n        isTransparent: function(ctx, x, y, tolerance) {\n            if (tolerance > 0) {\n                if (x > tolerance) {\n                    x -= tolerance;\n                } else {\n                    x = 0;\n                }\n                if (y > tolerance) {\n                    y -= tolerance;\n                } else {\n                    y = 0;\n                }\n            }\n            var _isTransparent = true, i, temp, imageData = ctx.getImageData(x, y, tolerance * 2 || 1, tolerance * 2 || 1), l = imageData.data.length;\n            for (i = 3; i < l; i += 4) {\n                temp = imageData.data[i];\n                _isTransparent = temp <= 0;\n                if (_isTransparent === false) {\n                    break;\n                }\n            }\n            imageData = null;\n            return _isTransparent;\n        },\n        parsePreserveAspectRatioAttribute: function(attribute) {\n            var meetOrSlice = \"meet\", alignX = \"Mid\", alignY = \"Mid\", aspectRatioAttrs = attribute.split(\" \"), align;\n            if (aspectRatioAttrs && aspectRatioAttrs.length) {\n                meetOrSlice = aspectRatioAttrs.pop();\n                if (meetOrSlice !== \"meet\" && meetOrSlice !== \"slice\") {\n                    align = meetOrSlice;\n                    meetOrSlice = \"meet\";\n                } else if (aspectRatioAttrs.length) {\n                    align = aspectRatioAttrs.pop();\n                }\n            }\n            alignX = align !== \"none\" ? align.slice(1, 4) : \"none\";\n            alignY = align !== \"none\" ? align.slice(5, 8) : \"none\";\n            return {\n                meetOrSlice: meetOrSlice,\n                alignX: alignX,\n                alignY: alignY\n            };\n        },\n        clearFabricFontCache: function(fontFamily) {\n            if (!fontFamily) {\n                fabric.charWidthsCache = {};\n            } else if (fabric.charWidthsCache[fontFamily]) {\n                delete fabric.charWidthsCache[fontFamily];\n            }\n        },\n        limitDimsByArea: function(ar, maximumArea) {\n            var roughWidth = Math.sqrt(maximumArea * ar), perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n            return {\n                x: Math.floor(roughWidth),\n                y: perfLimitSizeY\n            };\n        },\n        capValue: function(min, value, max) {\n            return Math.max(min, Math.min(value, max));\n        },\n        findScaleToFit: function(source, destination) {\n            return Math.min(destination.width / source.width, destination.height / source.height);\n        },\n        findScaleToCover: function(source, destination) {\n            return Math.max(destination.width / source.width, destination.height / source.height);\n        }\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    var arcToSegmentsCache = {}, segmentToBezierCache = {}, boundsOfCurveCache = {}, _join = Array.prototype.join;\n    function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n        var argsString = _join.call(arguments);\n        if (arcToSegmentsCache[argsString]) {\n            return arcToSegmentsCache[argsString];\n        }\n        var PI = Math.PI, th = rotateX * PI / 180, sinTh = fabric.util.sin(th), cosTh = fabric.util.cos(th), fromX = 0, fromY = 0;\n        rx = Math.abs(rx);\n        ry = Math.abs(ry);\n        var px = -cosTh * toX * .5 - sinTh * toY * .5, py = -cosTh * toY * .5 + sinTh * toX * .5, rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px, pl = rx2 * ry2 - rx2 * py2 - ry2 * px2, root = 0;\n        if (pl < 0) {\n            var s = Math.sqrt(1 - pl / (rx2 * ry2));\n            rx *= s;\n            ry *= s;\n        } else {\n            root = (large === sweep ? -1 : 1) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n        }\n        var cx = root * rx * py / ry, cy = -root * ry * px / rx, cx1 = cosTh * cx - sinTh * cy + toX * .5, cy1 = sinTh * cx + cosTh * cy + toY * .5, mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry), dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n        if (sweep === 0 && dtheta > 0) {\n            dtheta -= 2 * PI;\n        } else if (sweep === 1 && dtheta < 0) {\n            dtheta += 2 * PI;\n        }\n        var segments = Math.ceil(Math.abs(dtheta / PI * 2)), result = [], mDelta = dtheta / segments, mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2), th3 = mTheta + mDelta;\n        for (var i = 0; i < segments; i++) {\n            result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n            fromX = result[i][4];\n            fromY = result[i][5];\n            mTheta = th3;\n            th3 += mDelta;\n        }\n        arcToSegmentsCache[argsString] = result;\n        return result;\n    }\n    function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n        var argsString2 = _join.call(arguments);\n        if (segmentToBezierCache[argsString2]) {\n            return segmentToBezierCache[argsString2];\n        }\n        var costh2 = fabric.util.cos(th2), sinth2 = fabric.util.sin(th2), costh3 = fabric.util.cos(th3), sinth3 = fabric.util.sin(th3), toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1, toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1, cp1X = fromX + mT * (-cosTh * rx * sinth2 - sinTh * ry * costh2), cp1Y = fromY + mT * (-sinTh * rx * sinth2 + cosTh * ry * costh2), cp2X = toX + mT * (cosTh * rx * sinth3 + sinTh * ry * costh3), cp2Y = toY + mT * (sinTh * rx * sinth3 - cosTh * ry * costh3);\n        segmentToBezierCache[argsString2] = [ cp1X, cp1Y, cp2X, cp2Y, toX, toY ];\n        return segmentToBezierCache[argsString2];\n    }\n    function calcVectorAngle(ux, uy, vx, vy) {\n        var ta = Math.atan2(uy, ux), tb = Math.atan2(vy, vx);\n        if (tb >= ta) {\n            return tb - ta;\n        } else {\n            return 2 * Math.PI - (ta - tb);\n        }\n    }\n    fabric.util.drawArc = function(ctx, fx, fy, coords) {\n        var rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], tx = coords[5], ty = coords[6], segs = [ [], [], [], [] ], segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n        for (var i = 0, len = segsNorm.length; i < len; i++) {\n            segs[i][0] = segsNorm[i][0] + fx;\n            segs[i][1] = segsNorm[i][1] + fy;\n            segs[i][2] = segsNorm[i][2] + fx;\n            segs[i][3] = segsNorm[i][3] + fy;\n            segs[i][4] = segsNorm[i][4] + fx;\n            segs[i][5] = segsNorm[i][5] + fy;\n            ctx.bezierCurveTo.apply(ctx, segs[i]);\n        }\n    };\n    fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n        var fromX = 0, fromY = 0, bound, bounds = [], segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n        for (var i = 0, len = segs.length; i < len; i++) {\n            bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n            bounds.push({\n                x: bound[0].x + fx,\n                y: bound[0].y + fy\n            });\n            bounds.push({\n                x: bound[1].x + fx,\n                y: bound[1].y + fy\n            });\n            fromX = segs[i][4];\n            fromY = segs[i][5];\n        }\n        return bounds;\n    };\n    function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var argsString = _join.call(arguments);\n        if (boundsOfCurveCache[argsString]) {\n            return boundsOfCurveCache[argsString];\n        }\n        var sqrt = Math.sqrt, min = Math.min, max = Math.max, abs = Math.abs, tvalues = [], bounds = [ [], [] ], a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n        for (var i = 0; i < 2; ++i) {\n            if (i > 0) {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            if (b2ac < 0) {\n                continue;\n            }\n            sqrtb2ac = sqrt(b2ac);\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n        var x, y, j = tvalues.length, jlen = j, mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[0][j] = x;\n            y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            bounds[1][j] = y;\n        }\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        var result = [ {\n            x: min.apply(null, bounds[0]),\n            y: min.apply(null, bounds[1])\n        }, {\n            x: max.apply(null, bounds[0]),\n            y: max.apply(null, bounds[1])\n        } ];\n        boundsOfCurveCache[argsString] = result;\n        return result;\n    }\n    fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n})();\n\n(function() {\n    var slice = Array.prototype.slice;\n    function invoke(array, method) {\n        var args = slice.call(arguments, 2), result = [];\n        for (var i = 0, len = array.length; i < len; i++) {\n            result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n        }\n        return result;\n    }\n    function max(array, byProperty) {\n        return find(array, byProperty, function(value1, value2) {\n            return value1 >= value2;\n        });\n    }\n    function min(array, byProperty) {\n        return find(array, byProperty, function(value1, value2) {\n            return value1 < value2;\n        });\n    }\n    function fill(array, value) {\n        var k = array.length;\n        while (k--) {\n            array[k] = value;\n        }\n        return array;\n    }\n    function find(array, byProperty, condition) {\n        if (!array || array.length === 0) {\n            return;\n        }\n        var i = array.length - 1, result = byProperty ? array[i][byProperty] : array[i];\n        if (byProperty) {\n            while (i--) {\n                if (condition(array[i][byProperty], result)) {\n                    result = array[i][byProperty];\n                }\n            }\n        } else {\n            while (i--) {\n                if (condition(array[i], result)) {\n                    result = array[i];\n                }\n            }\n        }\n        return result;\n    }\n    fabric.util.array = {\n        fill: fill,\n        invoke: invoke,\n        min: min,\n        max: max\n    };\n})();\n\n(function() {\n    function extend(destination, source, deep) {\n        if (deep) {\n            if (!fabric.isLikelyNode && source instanceof Element) {\n                destination = source;\n            } else if (source instanceof Array) {\n                destination = [];\n                for (var i = 0, len = source.length; i < len; i++) {\n                    destination[i] = extend({}, source[i], deep);\n                }\n            } else if (source && typeof source === \"object\") {\n                for (var property in source) {\n                    if (source.hasOwnProperty(property)) {\n                        destination[property] = extend({}, source[property], deep);\n                    }\n                }\n            } else {\n                destination = source;\n            }\n        } else {\n            for (var property in source) {\n                destination[property] = source[property];\n            }\n        }\n        return destination;\n    }\n    function clone(object, deep) {\n        return extend({}, object, deep);\n    }\n    fabric.util.object = {\n        extend: extend,\n        clone: clone\n    };\n    fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n(function() {\n    function camelize(string) {\n        return string.replace(/-+(.)?/g, function(match, character) {\n            return character ? character.toUpperCase() : \"\";\n        });\n    }\n    function capitalize(string, firstLetterOnly) {\n        return string.charAt(0).toUpperCase() + (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n    }\n    function escapeXml(string) {\n        return string.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    function graphemeSplit(textstring) {\n        var i = 0, chr, graphemes = [];\n        for (i = 0, chr; i < textstring.length; i++) {\n            if ((chr = getWholeChar(textstring, i)) === false) {\n                continue;\n            }\n            graphemes.push(chr);\n        }\n        return graphemes;\n    }\n    function getWholeChar(str, i) {\n        var code = str.charCodeAt(i);\n        if (isNaN(code)) {\n            return \"\";\n        }\n        if (code < 55296 || code > 57343) {\n            return str.charAt(i);\n        }\n        if (55296 <= code && code <= 56319) {\n            if (str.length <= i + 1) {\n                throw \"High surrogate without following low surrogate\";\n            }\n            var next = str.charCodeAt(i + 1);\n            if (56320 > next || next > 57343) {\n                throw \"High surrogate without following low surrogate\";\n            }\n            return str.charAt(i) + str.charAt(i + 1);\n        }\n        if (i === 0) {\n            throw \"Low surrogate without preceding high surrogate\";\n        }\n        var prev = str.charCodeAt(i - 1);\n        if (55296 > prev || prev > 56319) {\n            throw \"Low surrogate without preceding high surrogate\";\n        }\n        return false;\n    }\n    fabric.util.string = {\n        camelize: camelize,\n        capitalize: capitalize,\n        escapeXml: escapeXml,\n        graphemeSplit: graphemeSplit\n    };\n})();\n\n(function() {\n    var slice = Array.prototype.slice, emptyFunction = function() {}, IS_DONTENUM_BUGGY = function() {\n        for (var p in {\n            toString: 1\n        }) {\n            if (p === \"toString\") {\n                return false;\n            }\n        }\n        return true;\n    }(), addMethods = function(klass, source, parent) {\n        for (var property in source) {\n            if (property in klass.prototype && typeof klass.prototype[property] === \"function\" && (source[property] + \"\").indexOf(\"callSuper\") > -1) {\n                klass.prototype[property] = function(property) {\n                    return function() {\n                        var superclass = this.constructor.superclass;\n                        this.constructor.superclass = parent;\n                        var returnValue = source[property].apply(this, arguments);\n                        this.constructor.superclass = superclass;\n                        if (property !== \"initialize\") {\n                            return returnValue;\n                        }\n                    };\n                }(property);\n            } else {\n                klass.prototype[property] = source[property];\n            }\n            if (IS_DONTENUM_BUGGY) {\n                if (source.toString !== Object.prototype.toString) {\n                    klass.prototype.toString = source.toString;\n                }\n                if (source.valueOf !== Object.prototype.valueOf) {\n                    klass.prototype.valueOf = source.valueOf;\n                }\n            }\n        }\n    };\n    function Subclass() {}\n    function callSuper(methodName) {\n        var parentMethod = null, _this = this;\n        while (_this.constructor.superclass) {\n            var superClassMethod = _this.constructor.superclass.prototype[methodName];\n            if (_this[methodName] !== superClassMethod) {\n                parentMethod = superClassMethod;\n                break;\n            }\n            _this = _this.constructor.superclass.prototype;\n        }\n        if (!parentMethod) {\n            return console.log(\"tried to callSuper \" + methodName + \", method not found in prototype chain\", this);\n        }\n        return arguments.length > 1 ? parentMethod.apply(this, slice.call(arguments, 1)) : parentMethod.call(this);\n    }\n    function createClass() {\n        var parent = null, properties = slice.call(arguments, 0);\n        if (typeof properties[0] === \"function\") {\n            parent = properties.shift();\n        }\n        function klass() {\n            this.initialize.apply(this, arguments);\n        }\n        klass.superclass = parent;\n        klass.subclasses = [];\n        if (parent) {\n            Subclass.prototype = parent.prototype;\n            klass.prototype = new Subclass();\n            parent.subclasses.push(klass);\n        }\n        for (var i = 0, length = properties.length; i < length; i++) {\n            addMethods(klass, properties[i], parent);\n        }\n        if (!klass.prototype.initialize) {\n            klass.prototype.initialize = emptyFunction;\n        }\n        klass.prototype.constructor = klass;\n        klass.prototype.callSuper = callSuper;\n        return klass;\n    }\n    fabric.util.createClass = createClass;\n})();\n\n(function() {\n    var unknown = \"unknown\";\n    function areHostMethods(object) {\n        var methodNames = Array.prototype.slice.call(arguments, 1), t, i, len = methodNames.length;\n        for (i = 0; i < len; i++) {\n            t = typeof object[methodNames[i]];\n            if (!/^(?:function|object|unknown)$/.test(t)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    var getElement, setElement, getUniqueId = function() {\n        var uid = 0;\n        return function(element) {\n            return element.__uniqueID || (element.__uniqueID = \"uniqueID__\" + uid++);\n        };\n    }();\n    (function() {\n        var elements = {};\n        getElement = function(uid) {\n            return elements[uid];\n        };\n        setElement = function(uid, element) {\n            elements[uid] = element;\n        };\n    })();\n    function createListener(uid, handler) {\n        return {\n            handler: handler,\n            wrappedHandler: createWrappedHandler(uid, handler)\n        };\n    }\n    function createWrappedHandler(uid, handler) {\n        return function(e) {\n            handler.call(getElement(uid), e || fabric.window.event);\n        };\n    }\n    function createDispatcher(uid, eventName) {\n        return function(e) {\n            if (handlers[uid] && handlers[uid][eventName]) {\n                var handlersForEvent = handlers[uid][eventName];\n                for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n                    handlersForEvent[i].call(this, e || fabric.window.event);\n                }\n            }\n        };\n    }\n    var shouldUseAddListenerRemoveListener = areHostMethods(fabric.document.documentElement, \"addEventListener\", \"removeEventListener\") && areHostMethods(fabric.window, \"addEventListener\", \"removeEventListener\"), shouldUseAttachEventDetachEvent = areHostMethods(fabric.document.documentElement, \"attachEvent\", \"detachEvent\") && areHostMethods(fabric.window, \"attachEvent\", \"detachEvent\"), listeners = {}, handlers = {}, addListener, removeListener;\n    if (shouldUseAddListenerRemoveListener) {\n        addListener = function(element, eventName, handler, options) {\n            element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n        };\n        removeListener = function(element, eventName, handler, options) {\n            element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n        };\n    } else if (shouldUseAttachEventDetachEvent) {\n        addListener = function(element, eventName, handler) {\n            if (!element) {\n                return;\n            }\n            var uid = getUniqueId(element);\n            setElement(uid, element);\n            if (!listeners[uid]) {\n                listeners[uid] = {};\n            }\n            if (!listeners[uid][eventName]) {\n                listeners[uid][eventName] = [];\n            }\n            var listener = createListener(uid, handler);\n            listeners[uid][eventName].push(listener);\n            element.attachEvent(\"on\" + eventName, listener.wrappedHandler);\n        };\n        removeListener = function(element, eventName, handler) {\n            if (!element) {\n                return;\n            }\n            var uid = getUniqueId(element), listener;\n            if (listeners[uid] && listeners[uid][eventName]) {\n                for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n                    listener = listeners[uid][eventName][i];\n                    if (listener && listener.handler === handler) {\n                        element.detachEvent(\"on\" + eventName, listener.wrappedHandler);\n                        listeners[uid][eventName][i] = null;\n                    }\n                }\n            }\n        };\n    } else {\n        addListener = function(element, eventName, handler) {\n            if (!element) {\n                return;\n            }\n            var uid = getUniqueId(element);\n            if (!handlers[uid]) {\n                handlers[uid] = {};\n            }\n            if (!handlers[uid][eventName]) {\n                handlers[uid][eventName] = [];\n                var existingHandler = element[\"on\" + eventName];\n                if (existingHandler) {\n                    handlers[uid][eventName].push(existingHandler);\n                }\n                element[\"on\" + eventName] = createDispatcher(uid, eventName);\n            }\n            handlers[uid][eventName].push(handler);\n        };\n        removeListener = function(element, eventName, handler) {\n            if (!element) {\n                return;\n            }\n            var uid = getUniqueId(element);\n            if (handlers[uid] && handlers[uid][eventName]) {\n                var handlersForEvent = handlers[uid][eventName];\n                for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n                    if (handlersForEvent[i] === handler) {\n                        handlersForEvent.splice(i, 1);\n                    }\n                }\n            }\n        };\n    }\n    fabric.util.addListener = addListener;\n    fabric.util.removeListener = removeListener;\n    function getPointer(event) {\n        event || (event = fabric.window.event);\n        var element = event.target || (typeof event.srcElement !== unknown ? event.srcElement : null), scroll = fabric.util.getScrollLeftTop(element);\n        return {\n            x: pointerX(event) + scroll.left,\n            y: pointerY(event) + scroll.top\n        };\n    }\n    var pointerX = function(event) {\n        return event.clientX;\n    }, pointerY = function(event) {\n        return event.clientY;\n    };\n    function _getPointer(event, pageProp, clientProp) {\n        var touchProp = event.type === \"touchend\" ? \"changedTouches\" : \"touches\";\n        return event[touchProp] && event[touchProp][0] ? event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]) || event[clientProp] : event[clientProp];\n    }\n    if (fabric.isTouchSupported) {\n        pointerX = function(event) {\n            return _getPointer(event, \"pageX\", \"clientX\");\n        };\n        pointerY = function(event) {\n            return _getPointer(event, \"pageY\", \"clientY\");\n        };\n    }\n    fabric.util.getPointer = getPointer;\n})();\n\n(function() {\n    function setStyle(element, styles) {\n        var elementStyle = element.style;\n        if (!elementStyle) {\n            return element;\n        }\n        if (typeof styles === \"string\") {\n            element.style.cssText += \";\" + styles;\n            return styles.indexOf(\"opacity\") > -1 ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1]) : element;\n        }\n        for (var property in styles) {\n            if (property === \"opacity\") {\n                setOpacity(element, styles[property]);\n            } else {\n                var normalizedProperty = property === \"float\" || property === \"cssFloat\" ? typeof elementStyle.styleFloat === \"undefined\" ? \"cssFloat\" : \"styleFloat\" : property;\n                elementStyle[normalizedProperty] = styles[property];\n            }\n        }\n        return element;\n    }\n    var parseEl = fabric.document.createElement(\"div\"), supportsOpacity = typeof parseEl.style.opacity === \"string\", supportsFilters = typeof parseEl.style.filter === \"string\", reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/, setOpacity = function(element) {\n        return element;\n    };\n    if (supportsOpacity) {\n        setOpacity = function(element, value) {\n            element.style.opacity = value;\n            return element;\n        };\n    } else if (supportsFilters) {\n        setOpacity = function(element, value) {\n            var es = element.style;\n            if (element.currentStyle && !element.currentStyle.hasLayout) {\n                es.zoom = 1;\n            }\n            if (reOpacity.test(es.filter)) {\n                value = value >= .9999 ? \"\" : \"alpha(opacity=\" + value * 100 + \")\";\n                es.filter = es.filter.replace(reOpacity, value);\n            } else {\n                es.filter += \" alpha(opacity=\" + value * 100 + \")\";\n            }\n            return element;\n        };\n    }\n    fabric.util.setStyle = setStyle;\n})();\n\n(function() {\n    var _slice = Array.prototype.slice;\n    function getById(id) {\n        return typeof id === \"string\" ? fabric.document.getElementById(id) : id;\n    }\n    var sliceCanConvertNodelists, toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n    };\n    try {\n        sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n    } catch (err) {}\n    if (!sliceCanConvertNodelists) {\n        toArray = function(arrayLike) {\n            var arr = new Array(arrayLike.length), i = arrayLike.length;\n            while (i--) {\n                arr[i] = arrayLike[i];\n            }\n            return arr;\n        };\n    }\n    function makeElement(tagName, attributes) {\n        var el = fabric.document.createElement(tagName);\n        for (var prop in attributes) {\n            if (prop === \"class\") {\n                el.className = attributes[prop];\n            } else if (prop === \"for\") {\n                el.htmlFor = attributes[prop];\n            } else {\n                el.setAttribute(prop, attributes[prop]);\n            }\n        }\n        return el;\n    }\n    function addClass(element, className) {\n        if (element && (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") === -1) {\n            element.className += (element.className ? \" \" : \"\") + className;\n        }\n    }\n    function wrapElement(element, wrapper, attributes) {\n        if (typeof wrapper === \"string\") {\n            wrapper = makeElement(wrapper, attributes);\n        }\n        if (element.parentNode) {\n            element.parentNode.replaceChild(wrapper, element);\n        }\n        wrapper.appendChild(element);\n        return wrapper;\n    }\n    function getScrollLeftTop(element) {\n        var left = 0, top = 0, docElement = fabric.document.documentElement, body = fabric.document.body || {\n            scrollLeft: 0,\n            scrollTop: 0\n        };\n        while (element && (element.parentNode || element.host)) {\n            element = element.parentNode || element.host;\n            if (element === fabric.document) {\n                left = body.scrollLeft || docElement.scrollLeft || 0;\n                top = body.scrollTop || docElement.scrollTop || 0;\n            } else {\n                left += element.scrollLeft || 0;\n                top += element.scrollTop || 0;\n            }\n            if (element.nodeType === 1 && element.style.position === \"fixed\") {\n                break;\n            }\n        }\n        return {\n            left: left,\n            top: top\n        };\n    }\n    function getElementOffset(element) {\n        var docElem, doc = element && element.ownerDocument, box = {\n            left: 0,\n            top: 0\n        }, offset = {\n            left: 0,\n            top: 0\n        }, scrollLeftTop, offsetAttributes = {\n            borderLeftWidth: \"left\",\n            borderTopWidth: \"top\",\n            paddingLeft: \"left\",\n            paddingTop: \"top\"\n        };\n        if (!doc) {\n            return offset;\n        }\n        for (var attr in offsetAttributes) {\n            offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n        }\n        docElem = doc.documentElement;\n        if (typeof element.getBoundingClientRect !== \"undefined\") {\n            box = element.getBoundingClientRect();\n        }\n        scrollLeftTop = getScrollLeftTop(element);\n        return {\n            left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n            top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top\n        };\n    }\n    var getElementStyle;\n    if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n        getElementStyle = function(element, attr) {\n            var style = fabric.document.defaultView.getComputedStyle(element, null);\n            return style ? style[attr] : undefined;\n        };\n    } else {\n        getElementStyle = function(element, attr) {\n            var value = element.style[attr];\n            if (!value && element.currentStyle) {\n                value = element.currentStyle[attr];\n            }\n            return value;\n        };\n    }\n    (function() {\n        var style = fabric.document.documentElement.style, selectProp = \"userSelect\" in style ? \"userSelect\" : \"MozUserSelect\" in style ? \"MozUserSelect\" : \"WebkitUserSelect\" in style ? \"WebkitUserSelect\" : \"KhtmlUserSelect\" in style ? \"KhtmlUserSelect\" : \"\";\n        function makeElementUnselectable(element) {\n            if (typeof element.onselectstart !== \"undefined\") {\n                element.onselectstart = fabric.util.falseFunction;\n            }\n            if (selectProp) {\n                element.style[selectProp] = \"none\";\n            } else if (typeof element.unselectable === \"string\") {\n                element.unselectable = \"on\";\n            }\n            return element;\n        }\n        function makeElementSelectable(element) {\n            if (typeof element.onselectstart !== \"undefined\") {\n                element.onselectstart = null;\n            }\n            if (selectProp) {\n                element.style[selectProp] = \"\";\n            } else if (typeof element.unselectable === \"string\") {\n                element.unselectable = \"\";\n            }\n            return element;\n        }\n        fabric.util.makeElementUnselectable = makeElementUnselectable;\n        fabric.util.makeElementSelectable = makeElementSelectable;\n    })();\n    (function() {\n        function getScript(url, callback) {\n            var headEl = fabric.document.getElementsByTagName(\"head\")[0], scriptEl = fabric.document.createElement(\"script\"), loading = true;\n            scriptEl.onload = scriptEl.onreadystatechange = function(e) {\n                if (loading) {\n                    if (typeof this.readyState === \"string\" && this.readyState !== \"loaded\" && this.readyState !== \"complete\") {\n                        return;\n                    }\n                    loading = false;\n                    callback(e || fabric.window.event);\n                    scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n                }\n            };\n            scriptEl.src = url;\n            headEl.appendChild(scriptEl);\n        }\n        fabric.util.getScript = getScript;\n    })();\n    function getNodeCanvas(element) {\n        var impl = fabric.jsdomImplForWrapper(element);\n        return impl._canvas || impl._image;\n    }\n    fabric.util.getById = getById;\n    fabric.util.toArray = toArray;\n    fabric.util.makeElement = makeElement;\n    fabric.util.addClass = addClass;\n    fabric.util.wrapElement = wrapElement;\n    fabric.util.getScrollLeftTop = getScrollLeftTop;\n    fabric.util.getElementOffset = getElementOffset;\n    fabric.util.getElementStyle = getElementStyle;\n    fabric.util.getNodeCanvas = getNodeCanvas;\n})();\n\n(function() {\n    function addParamToUrl(url, param) {\n        return url + (/\\?/.test(url) ? \"&\" : \"?\") + param;\n    }\n    var makeXHR = function() {\n        var factories = [ function() {\n            return new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }, function() {\n            return new ActiveXObject(\"Msxml2.XMLHTTP\");\n        }, function() {\n            return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n        }, function() {\n            return new XMLHttpRequest();\n        } ];\n        for (var i = factories.length; i--; ) {\n            try {\n                var req = factories[i]();\n                if (req) {\n                    return factories[i];\n                }\n            } catch (err) {}\n        }\n    }();\n    function emptyFn() {}\n    function request(url, options) {\n        options || (options = {});\n        var method = options.method ? options.method.toUpperCase() : \"GET\", onComplete = options.onComplete || function() {}, xhr = makeXHR(), body = options.body || options.parameters;\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState === 4) {\n                onComplete(xhr);\n                xhr.onreadystatechange = emptyFn;\n            }\n        };\n        if (method === \"GET\") {\n            body = null;\n            if (typeof options.parameters === \"string\") {\n                url = addParamToUrl(url, options.parameters);\n            }\n        }\n        xhr.open(method, url, true);\n        if (method === \"POST\" || method === \"PUT\") {\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        }\n        xhr.send(body);\n        return xhr;\n    }\n    fabric.util.request = request;\n})();\n\nfabric.log = function() {};\n\nfabric.warn = function() {};\n\nif (typeof console !== \"undefined\") {\n    [ \"log\", \"warn\" ].forEach(function(methodName) {\n        if (typeof console[methodName] !== \"undefined\" && typeof console[methodName].apply === \"function\") {\n            fabric[methodName] = function() {\n                return console[methodName].apply(console, arguments);\n            };\n        }\n    });\n}\n\n(function() {\n    function noop() {\n        return false;\n    }\n    function animate(options) {\n        requestAnimFrame(function(timestamp) {\n            options || (options = {});\n            var start = timestamp || +new Date(), duration = options.duration || 500, finish = start + duration, time, onChange = options.onChange || noop, abort = options.abort || noop, onComplete = options.onComplete || noop, easing = options.easing || function(t, b, c, d) {\n                return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n            }, startValue = \"startValue\" in options ? options.startValue : 0, endValue = \"endValue\" in options ? options.endValue : 100, byValue = options.byValue || endValue - startValue;\n            options.onStart && options.onStart();\n            (function tick(ticktime) {\n                if (abort()) {\n                    onComplete(endValue, 1, 1);\n                    return;\n                }\n                time = ticktime || +new Date();\n                var currentTime = time > finish ? duration : time - start, timePerc = currentTime / duration, current = easing(currentTime, startValue, byValue, duration), valuePerc = Math.abs((current - startValue) / byValue);\n                onChange(current, valuePerc, timePerc);\n                if (time > finish) {\n                    options.onComplete && options.onComplete();\n                    return;\n                }\n                requestAnimFrame(tick);\n            })(start);\n        });\n    }\n    var _requestAnimFrame = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function(callback) {\n        return fabric.window.setTimeout(callback, 1e3 / 60);\n    };\n    var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n    function requestAnimFrame() {\n        return _requestAnimFrame.apply(fabric.window, arguments);\n    }\n    function cancelAnimFrame() {\n        return _cancelAnimFrame.apply(fabric.window, arguments);\n    }\n    fabric.util.animate = animate;\n    fabric.util.requestAnimFrame = requestAnimFrame;\n    fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n(function() {\n    function calculateColor(begin, end, pos) {\n        var color = \"rgba(\" + parseInt(begin[0] + pos * (end[0] - begin[0]), 10) + \",\" + parseInt(begin[1] + pos * (end[1] - begin[1]), 10) + \",\" + parseInt(begin[2] + pos * (end[2] - begin[2]), 10);\n        color += \",\" + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n        color += \")\";\n        return color;\n    }\n    function animateColor(fromColor, toColor, duration, options) {\n        var startColor = new fabric.Color(fromColor).getSource(), endColor = new fabric.Color(toColor).getSource();\n        options = options || {};\n        fabric.util.animate(fabric.util.object.extend(options, {\n            duration: duration || 500,\n            startValue: startColor,\n            endValue: endColor,\n            byValue: endColor,\n            easing: function(currentTime, startValue, byValue, duration) {\n                var posValue = options.colorEasing ? options.colorEasing(currentTime, duration) : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n                return calculateColor(startValue, byValue, posValue);\n            }\n        }));\n    }\n    fabric.util.animateColor = animateColor;\n})();\n\n(function() {\n    function normalize(a, c, p, s) {\n        if (a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        } else {\n            if (c === 0 && a === 0) {\n                s = p / (2 * Math.PI) * Math.asin(1);\n            } else {\n                s = p / (2 * Math.PI) * Math.asin(c / a);\n            }\n        }\n        return {\n            a: a,\n            c: c,\n            p: p,\n            s: s\n        };\n    }\n    function elastic(opts, t, d) {\n        return opts.a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p);\n    }\n    function easeOutCubic(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    }\n    function easeInOutCubic(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * t * t * t + b;\n        }\n        return c / 2 * ((t -= 2) * t * t + 2) + b;\n    }\n    function easeInQuart(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    }\n    function easeOutQuart(t, b, c, d) {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n    }\n    function easeInOutQuart(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * t * t * t * t + b;\n        }\n        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n    }\n    function easeInQuint(t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n    }\n    function easeOutQuint(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    }\n    function easeInOutQuint(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * t * t * t * t * t + b;\n        }\n        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n    function easeInSine(t, b, c, d) {\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n    }\n    function easeOutSine(t, b, c, d) {\n        return c * Math.sin(t / d * (Math.PI / 2)) + b;\n    }\n    function easeInOutSine(t, b, c, d) {\n        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n    }\n    function easeInExpo(t, b, c, d) {\n        return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n    }\n    function easeOutExpo(t, b, c, d) {\n        return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    }\n    function easeInOutExpo(t, b, c, d) {\n        if (t === 0) {\n            return b;\n        }\n        if (t === d) {\n            return b + c;\n        }\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n        }\n        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n    function easeInCirc(t, b, c, d) {\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n    }\n    function easeOutCirc(t, b, c, d) {\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n    }\n    function easeInOutCirc(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) {\n            return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n        }\n        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n    function easeInElastic(t, b, c, d) {\n        var s = 1.70158, p = 0, a = c;\n        if (t === 0) {\n            return b;\n        }\n        t /= d;\n        if (t === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * .3;\n        }\n        var opts = normalize(a, c, p, s);\n        return -elastic(opts, t, d) + b;\n    }\n    function easeOutElastic(t, b, c, d) {\n        var s = 1.70158, p = 0, a = c;\n        if (t === 0) {\n            return b;\n        }\n        t /= d;\n        if (t === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * .3;\n        }\n        var opts = normalize(a, c, p, s);\n        return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) + opts.c + b;\n    }\n    function easeInOutElastic(t, b, c, d) {\n        var s = 1.70158, p = 0, a = c;\n        if (t === 0) {\n            return b;\n        }\n        t /= d / 2;\n        if (t === 2) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * (.3 * 1.5);\n        }\n        var opts = normalize(a, c, p, s);\n        if (t < 1) {\n            return -.5 * elastic(opts, t, d) + b;\n        }\n        return opts.a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) * .5 + opts.c + b;\n    }\n    function easeInBack(t, b, c, d, s) {\n        if (s === undefined) {\n            s = 1.70158;\n        }\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    }\n    function easeOutBack(t, b, c, d, s) {\n        if (s === undefined) {\n            s = 1.70158;\n        }\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    }\n    function easeInOutBack(t, b, c, d, s) {\n        if (s === undefined) {\n            s = 1.70158;\n        }\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n        }\n        return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    }\n    function easeInBounce(t, b, c, d) {\n        return c - easeOutBounce(d - t, 0, c, d) + b;\n    }\n    function easeOutBounce(t, b, c, d) {\n        if ((t /= d) < 1 / 2.75) {\n            return c * (7.5625 * t * t) + b;\n        } else if (t < 2 / 2.75) {\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b;\n        } else if (t < 2.5 / 2.75) {\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b;\n        } else {\n            return c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;\n        }\n    }\n    function easeInOutBounce(t, b, c, d) {\n        if (t < d / 2) {\n            return easeInBounce(t * 2, 0, c, d) * .5 + b;\n        }\n        return easeOutBounce(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n    }\n    fabric.util.ease = {\n        easeInQuad: function(t, b, c, d) {\n            return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function(t, b, c, d) {\n            return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function(t, b, c, d) {\n            t /= d / 2;\n            if (t < 1) {\n                return c / 2 * t * t + b;\n            }\n            return -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function(t, b, c, d) {\n            return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: easeOutCubic,\n        easeInOutCubic: easeInOutCubic,\n        easeInQuart: easeInQuart,\n        easeOutQuart: easeOutQuart,\n        easeInOutQuart: easeInOutQuart,\n        easeInQuint: easeInQuint,\n        easeOutQuint: easeOutQuint,\n        easeInOutQuint: easeInOutQuint,\n        easeInSine: easeInSine,\n        easeOutSine: easeOutSine,\n        easeInOutSine: easeInOutSine,\n        easeInExpo: easeInExpo,\n        easeOutExpo: easeOutExpo,\n        easeInOutExpo: easeInOutExpo,\n        easeInCirc: easeInCirc,\n        easeOutCirc: easeOutCirc,\n        easeInOutCirc: easeInOutCirc,\n        easeInElastic: easeInElastic,\n        easeOutElastic: easeOutElastic,\n        easeInOutElastic: easeInOutElastic,\n        easeInBack: easeInBack,\n        easeOutBack: easeOutBack,\n        easeInOutBack: easeInOutBack,\n        easeInBounce: easeInBounce,\n        easeOutBounce: easeOutBounce,\n        easeInOutBounce: easeInOutBounce\n    };\n})();\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, clone = fabric.util.object.clone, toFixed = fabric.util.toFixed, parseUnit = fabric.util.parseUnit, multiplyTransformMatrices = fabric.util.multiplyTransformMatrices, svgValidTagNames = [ \"path\", \"circle\", \"polygon\", \"polyline\", \"ellipse\", \"rect\", \"line\", \"image\", \"text\", \"linearGradient\", \"radialGradient\", \"stop\" ], svgViewBoxElements = [ \"symbol\", \"image\", \"marker\", \"pattern\", \"view\", \"svg\" ], svgInvalidAncestors = [ \"pattern\", \"defs\", \"symbol\", \"metadata\", \"clipPath\", \"mask\", \"desc\" ], svgValidParents = [ \"symbol\", \"g\", \"a\", \"svg\" ], attributesMap = {\n        cx: \"left\",\n        x: \"left\",\n        r: \"radius\",\n        cy: \"top\",\n        y: \"top\",\n        display: \"visible\",\n        visibility: \"visible\",\n        transform: \"transformMatrix\",\n        \"fill-opacity\": \"fillOpacity\",\n        \"fill-rule\": \"fillRule\",\n        \"font-family\": \"fontFamily\",\n        \"font-size\": \"fontSize\",\n        \"font-style\": \"fontStyle\",\n        \"font-weight\": \"fontWeight\",\n        \"letter-spacing\": \"charSpacing\",\n        \"paint-order\": \"paintFirst\",\n        \"stroke-dasharray\": \"strokeDashArray\",\n        \"stroke-linecap\": \"strokeLineCap\",\n        \"stroke-linejoin\": \"strokeLineJoin\",\n        \"stroke-miterlimit\": \"strokeMiterLimit\",\n        \"stroke-opacity\": \"strokeOpacity\",\n        \"stroke-width\": \"strokeWidth\",\n        \"text-decoration\": \"textDecoration\",\n        \"text-anchor\": \"textAnchor\",\n        opacity: \"opacity\"\n    }, colorAttributes = {\n        stroke: \"strokeOpacity\",\n        fill: \"fillOpacity\"\n    };\n    fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n    fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n    fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n    fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n    fabric.cssRules = {};\n    fabric.gradientDefs = {};\n    function normalizeAttr(attr) {\n        if (attr in attributesMap) {\n            return attributesMap[attr];\n        }\n        return attr;\n    }\n    function normalizeValue(attr, value, parentAttributes, fontSize) {\n        var isArray = Object.prototype.toString.call(value) === \"[object Array]\", parsed;\n        if ((attr === \"fill\" || attr === \"stroke\") && value === \"none\") {\n            value = \"\";\n        } else if (attr === \"strokeDashArray\") {\n            if (value === \"none\") {\n                value = null;\n            } else {\n                value = value.replace(/,/g, \" \").split(/\\s+/).map(function(n) {\n                    return parseFloat(n);\n                });\n            }\n        } else if (attr === \"transformMatrix\") {\n            if (parentAttributes && parentAttributes.transformMatrix) {\n                value = multiplyTransformMatrices(parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n            } else {\n                value = fabric.parseTransformAttribute(value);\n            }\n        } else if (attr === \"visible\") {\n            value = value !== \"none\" && value !== \"hidden\";\n            if (parentAttributes && parentAttributes.visible === false) {\n                value = false;\n            }\n        } else if (attr === \"opacity\") {\n            value = parseFloat(value);\n            if (parentAttributes && typeof parentAttributes.opacity !== \"undefined\") {\n                value *= parentAttributes.opacity;\n            }\n        } else if (attr === \"textAnchor\") {\n            value = value === \"start\" ? \"left\" : value === \"end\" ? \"right\" : \"center\";\n        } else if (attr === \"charSpacing\") {\n            parsed = parseUnit(value, fontSize) / fontSize * 1e3;\n        } else if (attr === \"paintFirst\") {\n            var fillIndex = value.indexOf(\"fill\");\n            var strokeIndex = value.indexOf(\"stroke\");\n            var value = \"fill\";\n            if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n                value = \"stroke\";\n            } else if (fillIndex === -1 && strokeIndex > -1) {\n                value = \"stroke\";\n            }\n        } else {\n            parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n        }\n        return !isArray && isNaN(parsed) ? value : parsed;\n    }\n    function getSvgRegex(arr) {\n        return new RegExp(\"^(\" + arr.join(\"|\") + \")\\\\b\", \"i\");\n    }\n    function _setStrokeFillOpacity(attributes) {\n        for (var attr in colorAttributes) {\n            if (typeof attributes[colorAttributes[attr]] === \"undefined\" || attributes[attr] === \"\") {\n                continue;\n            }\n            if (typeof attributes[attr] === \"undefined\") {\n                if (!fabric.Object.prototype[attr]) {\n                    continue;\n                }\n                attributes[attr] = fabric.Object.prototype[attr];\n            }\n            if (attributes[attr].indexOf(\"url(\") === 0) {\n                continue;\n            }\n            var color = new fabric.Color(attributes[attr]);\n            attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n        }\n        return attributes;\n    }\n    function _getMultipleNodes(doc, nodeNames) {\n        var nodeName, nodeArray = [], nodeList, i, len;\n        for (i = 0, len = nodeNames.length; i < len; i++) {\n            nodeName = nodeNames[i];\n            nodeList = doc.getElementsByTagName(nodeName);\n            nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n        }\n        return nodeArray;\n    }\n    fabric.parseTransformAttribute = function() {\n        function rotateMatrix(matrix, args) {\n            var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]), x = 0, y = 0;\n            if (args.length === 3) {\n                x = args[1];\n                y = args[2];\n            }\n            matrix[0] = cos;\n            matrix[1] = sin;\n            matrix[2] = -sin;\n            matrix[3] = cos;\n            matrix[4] = x - (cos * x - sin * y);\n            matrix[5] = y - (sin * x + cos * y);\n        }\n        function scaleMatrix(matrix, args) {\n            var multiplierX = args[0], multiplierY = args.length === 2 ? args[1] : args[0];\n            matrix[0] = multiplierX;\n            matrix[3] = multiplierY;\n        }\n        function skewMatrix(matrix, args, pos) {\n            matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n        }\n        function translateMatrix(matrix, args) {\n            matrix[4] = args[0];\n            if (args.length === 2) {\n                matrix[5] = args[1];\n            }\n        }\n        var iMatrix = [ 1, 0, 0, 1, 0, 0 ], number = fabric.reNum, commaWsp = \"(?:\\\\s+,?\\\\s*|,\\\\s*)\", skewX = \"(?:(skewX)\\\\s*\\\\(\\\\s*(\" + number + \")\\\\s*\\\\))\", skewY = \"(?:(skewY)\\\\s*\\\\(\\\\s*(\" + number + \")\\\\s*\\\\))\", rotate = \"(?:(rotate)\\\\s*\\\\(\\\\s*(\" + number + \")(?:\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \"))?\\\\s*\\\\))\", scale = \"(?:(scale)\\\\s*\\\\(\\\\s*(\" + number + \")(?:\" + commaWsp + \"(\" + number + \"))?\\\\s*\\\\))\", translate = \"(?:(translate)\\\\s*\\\\(\\\\s*(\" + number + \")(?:\" + commaWsp + \"(\" + number + \"))?\\\\s*\\\\))\", matrix = \"(?:(matrix)\\\\s*\\\\(\\\\s*\" + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + \"\\\\s*\\\\))\", transform = \"(?:\" + matrix + \"|\" + translate + \"|\" + scale + \"|\" + rotate + \"|\" + skewX + \"|\" + skewY + \")\", transforms = \"(?:\" + transform + \"(?:\" + commaWsp + \"*\" + transform + \")*\" + \")\", transformList = \"^\\\\s*(?:\" + transforms + \"?)\\\\s*$\", reTransformList = new RegExp(transformList), reTransform = new RegExp(transform, \"g\");\n        return function(attributeValue) {\n            var matrix = iMatrix.concat(), matrices = [];\n            if (!attributeValue || attributeValue && !reTransformList.test(attributeValue)) {\n                return matrix;\n            }\n            attributeValue.replace(reTransform, function(match) {\n                var m = new RegExp(transform).exec(match).filter(function(match) {\n                    return !!match;\n                }), operation = m[1], args = m.slice(2).map(parseFloat);\n                switch (operation) {\n                  case \"translate\":\n                    translateMatrix(matrix, args);\n                    break;\n\n                  case \"rotate\":\n                    args[0] = fabric.util.degreesToRadians(args[0]);\n                    rotateMatrix(matrix, args);\n                    break;\n\n                  case \"scale\":\n                    scaleMatrix(matrix, args);\n                    break;\n\n                  case \"skewX\":\n                    skewMatrix(matrix, args, 2);\n                    break;\n\n                  case \"skewY\":\n                    skewMatrix(matrix, args, 1);\n                    break;\n\n                  case \"matrix\":\n                    matrix = args;\n                    break;\n                }\n                matrices.push(matrix.concat());\n                matrix = iMatrix.concat();\n            });\n            var combinedMatrix = matrices[0];\n            while (matrices.length > 1) {\n                matrices.shift();\n                combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n            }\n            return combinedMatrix;\n        };\n    }();\n    function parseStyleString(style, oStyle) {\n        var attr, value;\n        style.replace(/;\\s*$/, \"\").split(\";\").forEach(function(chunk) {\n            var pair = chunk.split(\":\");\n            attr = pair[0].trim().toLowerCase();\n            value = pair[1].trim();\n            oStyle[attr] = value;\n        });\n    }\n    function parseStyleObject(style, oStyle) {\n        var attr, value;\n        for (var prop in style) {\n            if (typeof style[prop] === \"undefined\") {\n                continue;\n            }\n            attr = prop.toLowerCase();\n            value = style[prop];\n            oStyle[attr] = value;\n        }\n    }\n    function getGlobalStylesForElement(element, svgUid) {\n        var styles = {};\n        for (var rule in fabric.cssRules[svgUid]) {\n            if (elementMatchesRule(element, rule.split(\" \"))) {\n                for (var property in fabric.cssRules[svgUid][rule]) {\n                    styles[property] = fabric.cssRules[svgUid][rule][property];\n                }\n            }\n        }\n        return styles;\n    }\n    function elementMatchesRule(element, selectors) {\n        var firstMatching, parentMatching = true;\n        firstMatching = selectorMatches(element, selectors.pop());\n        if (firstMatching && selectors.length) {\n            parentMatching = doesSomeParentMatch(element, selectors);\n        }\n        return firstMatching && parentMatching && selectors.length === 0;\n    }\n    function doesSomeParentMatch(element, selectors) {\n        var selector, parentMatching = true;\n        while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n            if (parentMatching) {\n                selector = selectors.pop();\n            }\n            element = element.parentNode;\n            parentMatching = selectorMatches(element, selector);\n        }\n        return selectors.length === 0;\n    }\n    function selectorMatches(element, selector) {\n        var nodeName = element.nodeName, classNames = element.getAttribute(\"class\"), id = element.getAttribute(\"id\"), matcher, i;\n        matcher = new RegExp(\"^\" + nodeName, \"i\");\n        selector = selector.replace(matcher, \"\");\n        if (id && selector.length) {\n            matcher = new RegExp(\"#\" + id + \"(?![a-zA-Z\\\\-]+)\", \"i\");\n            selector = selector.replace(matcher, \"\");\n        }\n        if (classNames && selector.length) {\n            classNames = classNames.split(\" \");\n            for (i = classNames.length; i--; ) {\n                matcher = new RegExp(\"\\\\.\" + classNames[i] + \"(?![a-zA-Z\\\\-]+)\", \"i\");\n                selector = selector.replace(matcher, \"\");\n            }\n        }\n        return selector.length === 0;\n    }\n    function elementById(doc, id) {\n        var el;\n        doc.getElementById && (el = doc.getElementById(id));\n        if (el) {\n            return el;\n        }\n        var node, i, len, nodelist = doc.getElementsByTagName(\"*\");\n        for (i = 0, len = nodelist.length; i < len; i++) {\n            node = nodelist[i];\n            if (id === node.getAttribute(\"id\")) {\n                return node;\n            }\n        }\n    }\n    function parseUseDirectives(doc) {\n        var nodelist = _getMultipleNodes(doc, [ \"use\", \"svg:use\" ]), i = 0;\n        while (nodelist.length && i < nodelist.length) {\n            var el = nodelist[i], xlink = el.getAttribute(\"xlink:href\").substr(1), x = el.getAttribute(\"x\") || 0, y = el.getAttribute(\"y\") || 0, el2 = elementById(doc, xlink).cloneNode(true), currentTrans = (el2.getAttribute(\"transform\") || \"\") + \" translate(\" + x + \", \" + y + \")\", parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n            applyViewboxTransform(el2);\n            if (/^svg$/i.test(el2.nodeName)) {\n                var el3 = el2.ownerDocument.createElement(\"g\");\n                for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n                    attr = attrs.item(j);\n                    el3.setAttribute(attr.nodeName, attr.nodeValue);\n                }\n                while (el2.firstChild) {\n                    el3.appendChild(el2.firstChild);\n                }\n                el2 = el3;\n            }\n            for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n                attr = attrs.item(j);\n                if (attr.nodeName === \"x\" || attr.nodeName === \"y\" || attr.nodeName === \"xlink:href\") {\n                    continue;\n                }\n                if (attr.nodeName === \"transform\") {\n                    currentTrans = attr.nodeValue + \" \" + currentTrans;\n                } else {\n                    el2.setAttribute(attr.nodeName, attr.nodeValue);\n                }\n            }\n            el2.setAttribute(\"transform\", currentTrans);\n            el2.setAttribute(\"instantiated_by_use\", \"1\");\n            el2.removeAttribute(\"id\");\n            parentNode = el.parentNode;\n            parentNode.replaceChild(el2, el);\n            if (nodelist.length === oldLength) {\n                i++;\n            }\n        }\n    }\n    var reViewBoxAttrValue = new RegExp(\"^\" + \"\\\\s*(\" + fabric.reNum + \"+)\\\\s*,?\" + \"\\\\s*(\" + fabric.reNum + \"+)\\\\s*,?\" + \"\\\\s*(\" + fabric.reNum + \"+)\\\\s*,?\" + \"\\\\s*(\" + fabric.reNum + \"+)\\\\s*\" + \"$\");\n    function applyViewboxTransform(element) {\n        var viewBoxAttr = element.getAttribute(\"viewBox\"), scaleX = 1, scaleY = 1, minX = 0, minY = 0, viewBoxWidth, viewBoxHeight, matrix, el, widthAttr = element.getAttribute(\"width\"), heightAttr = element.getAttribute(\"height\"), x = element.getAttribute(\"x\") || 0, y = element.getAttribute(\"y\") || 0, preserveAspectRatio = element.getAttribute(\"preserveAspectRatio\") || \"\", missingViewBox = !viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName) || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue)), missingDimAttr = !widthAttr || !heightAttr || widthAttr === \"100%\" || heightAttr === \"100%\", toBeParsed = missingViewBox && missingDimAttr, parsedDim = {}, translateMatrix = \"\";\n        parsedDim.width = 0;\n        parsedDim.height = 0;\n        parsedDim.toBeParsed = toBeParsed;\n        if (toBeParsed) {\n            return parsedDim;\n        }\n        if (missingViewBox) {\n            parsedDim.width = parseUnit(widthAttr);\n            parsedDim.height = parseUnit(heightAttr);\n            return parsedDim;\n        }\n        minX = -parseFloat(viewBoxAttr[1]);\n        minY = -parseFloat(viewBoxAttr[2]);\n        viewBoxWidth = parseFloat(viewBoxAttr[3]);\n        viewBoxHeight = parseFloat(viewBoxAttr[4]);\n        if (!missingDimAttr) {\n            parsedDim.width = parseUnit(widthAttr);\n            parsedDim.height = parseUnit(heightAttr);\n            scaleX = parsedDim.width / viewBoxWidth;\n            scaleY = parsedDim.height / viewBoxHeight;\n        } else {\n            parsedDim.width = viewBoxWidth;\n            parsedDim.height = viewBoxHeight;\n        }\n        preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n        if (preserveAspectRatio.alignX !== \"none\") {\n            scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\n        }\n        if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n            return parsedDim;\n        }\n        if (x || y) {\n            translateMatrix = \" translate(\" + parseUnit(x) + \" \" + parseUnit(y) + \") \";\n        }\n        matrix = translateMatrix + \" matrix(\" + scaleX + \" 0\" + \" 0 \" + scaleY + \" \" + minX * scaleX + \" \" + minY * scaleY + \") \";\n        if (element.nodeName === \"svg\") {\n            el = element.ownerDocument.createElement(\"g\");\n            while (element.firstChild) {\n                el.appendChild(element.firstChild);\n            }\n            element.appendChild(el);\n        } else {\n            el = element;\n            matrix = el.getAttribute(\"transform\") + matrix;\n        }\n        el.setAttribute(\"transform\", matrix);\n        return parsedDim;\n    }\n    function hasAncestorWithNodeName(element, nodeName) {\n        while (element && (element = element.parentNode)) {\n            if (element.nodeName && nodeName.test(element.nodeName.replace(\"svg:\", \"\")) && !element.getAttribute(\"instantiated_by_use\")) {\n                return true;\n            }\n        }\n        return false;\n    }\n    fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n        if (!doc) {\n            return;\n        }\n        parseUseDirectives(doc);\n        var svgUid = fabric.Object.__uid++, i, len, options = applyViewboxTransform(doc), descendants = fabric.util.toArray(doc.getElementsByTagName(\"*\"));\n        options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n        options.svgUid = svgUid;\n        if (descendants.length === 0 && fabric.isLikelyNode) {\n            descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n            var arr = [];\n            for (i = 0, len = descendants.length; i < len; i++) {\n                arr[i] = descendants[i];\n            }\n            descendants = arr;\n        }\n        var elements = descendants.filter(function(el) {\n            applyViewboxTransform(el);\n            return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace(\"svg:\", \"\")) && !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx);\n        });\n        if (!elements || elements && !elements.length) {\n            callback && callback([], {});\n            return;\n        }\n        fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n        fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n        fabric.parseElements(elements, function(instances, elements) {\n            if (callback) {\n                callback(instances, options, elements, descendants);\n            }\n        }, clone(options), reviver, parsingOptions);\n    };\n    var reFontDeclaration = new RegExp(\"(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*\" + \"(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(\" + fabric.reNum + \"(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|\" + fabric.reNum + \"))?\\\\s+(.*)\");\n    extend(fabric, {\n        parseFontDeclaration: function(value, oStyle) {\n            var match = value.match(reFontDeclaration);\n            if (!match) {\n                return;\n            }\n            var fontStyle = match[1], fontWeight = match[3], fontSize = match[4], lineHeight = match[5], fontFamily = match[6];\n            if (fontStyle) {\n                oStyle.fontStyle = fontStyle;\n            }\n            if (fontWeight) {\n                oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n            }\n            if (fontSize) {\n                oStyle.fontSize = parseUnit(fontSize);\n            }\n            if (fontFamily) {\n                oStyle.fontFamily = fontFamily;\n            }\n            if (lineHeight) {\n                oStyle.lineHeight = lineHeight === \"normal\" ? 1 : lineHeight;\n            }\n        },\n        getGradientDefs: function(doc) {\n            var tagArray = [ \"linearGradient\", \"radialGradient\", \"svg:linearGradient\", \"svg:radialGradient\" ], elList = _getMultipleNodes(doc, tagArray), el, j = 0, id, xlink, gradientDefs = {}, idsToXlinkMap = {};\n            j = elList.length;\n            while (j--) {\n                el = elList[j];\n                xlink = el.getAttribute(\"xlink:href\");\n                id = el.getAttribute(\"id\");\n                if (xlink) {\n                    idsToXlinkMap[id] = xlink.substr(1);\n                }\n                gradientDefs[id] = el;\n            }\n            for (id in idsToXlinkMap) {\n                var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n                el = gradientDefs[id];\n                while (el2.firstChild) {\n                    el.appendChild(el2.firstChild);\n                }\n            }\n            return gradientDefs;\n        },\n        parseAttributes: function(element, attributes, svgUid) {\n            if (!element) {\n                return;\n            }\n            var value, parentAttributes = {}, fontSize;\n            if (typeof svgUid === \"undefined\") {\n                svgUid = element.getAttribute(\"svgUid\");\n            }\n            if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n                parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n            }\n            fontSize = parentAttributes && parentAttributes.fontSize || element.getAttribute(\"font-size\") || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n            var ownAttributes = attributes.reduce(function(memo, attr) {\n                value = element.getAttribute(attr);\n                if (value) {\n                    memo[attr] = value;\n                }\n                return memo;\n            }, {});\n            ownAttributes = extend(ownAttributes, extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n            var normalizedAttr, normalizedValue, normalizedStyle = {};\n            for (var attr in ownAttributes) {\n                normalizedAttr = normalizeAttr(attr);\n                normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n                normalizedStyle[normalizedAttr] = normalizedValue;\n            }\n            if (normalizedStyle && normalizedStyle.font) {\n                fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n            }\n            var mergedAttrs = extend(parentAttributes, normalizedStyle);\n            return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n        },\n        parseElements: function(elements, callback, options, reviver, parsingOptions) {\n            new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n        },\n        parseStyleAttribute: function(element) {\n            var oStyle = {}, style = element.getAttribute(\"style\");\n            if (!style) {\n                return oStyle;\n            }\n            if (typeof style === \"string\") {\n                parseStyleString(style, oStyle);\n            } else {\n                parseStyleObject(style, oStyle);\n            }\n            return oStyle;\n        },\n        parsePointsAttribute: function(points) {\n            if (!points) {\n                return null;\n            }\n            points = points.replace(/,/g, \" \").trim();\n            points = points.split(/\\s+/);\n            var parsedPoints = [], i, len;\n            for (i = 0, len = points.length; i < len; i += 2) {\n                parsedPoints.push({\n                    x: parseFloat(points[i]),\n                    y: parseFloat(points[i + 1])\n                });\n            }\n            return parsedPoints;\n        },\n        getCSSRules: function(doc) {\n            var styles = doc.getElementsByTagName(\"style\"), i, len, allRules = {}, rules;\n            for (i = 0, len = styles.length; i < len; i++) {\n                var styleContents = styles[i].textContent || styles[i].text;\n                styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, \"\");\n                if (styleContents.trim() === \"\") {\n                    continue;\n                }\n                rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n                rules = rules.map(function(rule) {\n                    return rule.trim();\n                });\n                rules.forEach(function(rule) {\n                    var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/), ruleObj = {}, declaration = match[2].trim(), propertyValuePairs = declaration.replace(/;$/, \"\").split(/\\s*;\\s*/);\n                    for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n                        var pair = propertyValuePairs[i].split(/\\s*:\\s*/), property = pair[0], value = pair[1];\n                        ruleObj[property] = value;\n                    }\n                    rule = match[1];\n                    rule.split(\",\").forEach(function(_rule) {\n                        _rule = _rule.replace(/^svg/i, \"\").trim();\n                        if (_rule === \"\") {\n                            return;\n                        }\n                        if (allRules[_rule]) {\n                            fabric.util.object.extend(allRules[_rule], ruleObj);\n                        } else {\n                            allRules[_rule] = fabric.util.object.clone(ruleObj);\n                        }\n                    });\n                });\n            }\n            return allRules;\n        },\n        loadSVGFromURL: function(url, callback, reviver, options) {\n            url = url.replace(/^\\n\\s*/, \"\").trim();\n            new fabric.util.request(url, {\n                method: \"get\",\n                onComplete: onComplete\n            });\n            function onComplete(r) {\n                var xml = r.responseXML;\n                if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n                    xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n                    xml.async = \"false\";\n                    xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, \"\"));\n                }\n                if (!xml || !xml.documentElement) {\n                    callback && callback(null);\n                }\n                fabric.parseSVGDocument(xml.documentElement, function(results, _options, elements, allElements) {\n                    callback && callback(results, _options, elements, allElements);\n                }, reviver, options);\n            }\n        },\n        loadSVGFromString: function(string, callback, reviver, options) {\n            string = string.trim();\n            var doc;\n            if (typeof DOMParser !== \"undefined\") {\n                var parser = new DOMParser();\n                if (parser && parser.parseFromString) {\n                    doc = parser.parseFromString(string, \"text/xml\");\n                }\n            } else if (fabric.window.ActiveXObject) {\n                doc = new ActiveXObject(\"Microsoft.XMLDOM\");\n                doc.async = \"false\";\n                doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, \"\"));\n            }\n            fabric.parseSVGDocument(doc.documentElement, function(results, _options, elements, allElements) {\n                callback(results, _options, elements, allElements);\n            }, reviver, options);\n        }\n    });\n})(typeof exports !== \"undefined\" ? exports : this);\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n    this.elements = elements;\n    this.callback = callback;\n    this.options = options;\n    this.reviver = reviver;\n    this.svgUid = options && options.svgUid || 0;\n    this.parsingOptions = parsingOptions;\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n        this.elements[i].setAttribute(\"svgUid\", this.svgUid);\n        (function(_obj, i) {\n            setTimeout(function() {\n                _obj.createObject(_obj.elements[i], i);\n            }, 0);\n        })(this, i);\n    }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n    var klass = fabric[fabric.util.string.capitalize(el.tagName.replace(\"svg:\", \"\"))];\n    if (klass && klass.fromElement) {\n        try {\n            this._createObject(klass, el, index);\n        } catch (err) {\n            fabric.log(err);\n        }\n    } else {\n        this.checkIfDone();\n    }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n        var _options;\n        _this.resolveGradient(obj, \"fill\");\n        _this.resolveGradient(obj, \"stroke\");\n        if (obj instanceof fabric.Image) {\n            _options = obj.parsePreserveAspectRatioAttribute(el);\n        }\n        obj._removeTransformMatrix(_options);\n        _this.reviver && _this.reviver(el, obj);\n        _this.instances[index] = obj;\n        _this.checkIfDone();\n    };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n    var instanceFillValue = obj[property];\n    if (!/^url\\(/.test(instanceFillValue)) {\n        return;\n    }\n    var gradientId = this.regexUrl.exec(instanceFillValue)[1];\n    this.regexUrl.lastIndex = 0;\n    if (fabric.gradientDefs[this.svgUid][gradientId]) {\n        obj.set(property, fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n    }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n    if (--this.numElements === 0) {\n        this.instances = this.instances.filter(function(el) {\n            return el != null;\n        });\n        this.callback(this.instances, this.elements);\n    }\n};\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.Point) {\n        fabric.warn(\"fabric.Point is already defined\");\n        return;\n    }\n    fabric.Point = Point;\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    Point.prototype = {\n        type: \"point\",\n        constructor: Point,\n        add: function(that) {\n            return new Point(this.x + that.x, this.y + that.y);\n        },\n        addEquals: function(that) {\n            this.x += that.x;\n            this.y += that.y;\n            return this;\n        },\n        scalarAdd: function(scalar) {\n            return new Point(this.x + scalar, this.y + scalar);\n        },\n        scalarAddEquals: function(scalar) {\n            this.x += scalar;\n            this.y += scalar;\n            return this;\n        },\n        subtract: function(that) {\n            return new Point(this.x - that.x, this.y - that.y);\n        },\n        subtractEquals: function(that) {\n            this.x -= that.x;\n            this.y -= that.y;\n            return this;\n        },\n        scalarSubtract: function(scalar) {\n            return new Point(this.x - scalar, this.y - scalar);\n        },\n        scalarSubtractEquals: function(scalar) {\n            this.x -= scalar;\n            this.y -= scalar;\n            return this;\n        },\n        multiply: function(scalar) {\n            return new Point(this.x * scalar, this.y * scalar);\n        },\n        multiplyEquals: function(scalar) {\n            this.x *= scalar;\n            this.y *= scalar;\n            return this;\n        },\n        divide: function(scalar) {\n            return new Point(this.x / scalar, this.y / scalar);\n        },\n        divideEquals: function(scalar) {\n            this.x /= scalar;\n            this.y /= scalar;\n            return this;\n        },\n        eq: function(that) {\n            return this.x === that.x && this.y === that.y;\n        },\n        lt: function(that) {\n            return this.x < that.x && this.y < that.y;\n        },\n        lte: function(that) {\n            return this.x <= that.x && this.y <= that.y;\n        },\n        gt: function(that) {\n            return this.x > that.x && this.y > that.y;\n        },\n        gte: function(that) {\n            return this.x >= that.x && this.y >= that.y;\n        },\n        lerp: function(that, t) {\n            if (typeof t === \"undefined\") {\n                t = .5;\n            }\n            t = Math.max(Math.min(1, t), 0);\n            return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n        },\n        distanceFrom: function(that) {\n            var dx = this.x - that.x, dy = this.y - that.y;\n            return Math.sqrt(dx * dx + dy * dy);\n        },\n        midPointFrom: function(that) {\n            return this.lerp(that);\n        },\n        min: function(that) {\n            return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n        },\n        max: function(that) {\n            return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n        },\n        toString: function() {\n            return this.x + \",\" + this.y;\n        },\n        setXY: function(x, y) {\n            this.x = x;\n            this.y = y;\n            return this;\n        },\n        setX: function(x) {\n            this.x = x;\n            return this;\n        },\n        setY: function(y) {\n            this.y = y;\n            return this;\n        },\n        setFromPoint: function(that) {\n            this.x = that.x;\n            this.y = that.y;\n            return this;\n        },\n        swap: function(that) {\n            var x = this.x, y = this.y;\n            this.x = that.x;\n            this.y = that.y;\n            that.x = x;\n            that.y = y;\n        },\n        clone: function() {\n            return new Point(this.x, this.y);\n        }\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.Intersection) {\n        fabric.warn(\"fabric.Intersection is already defined\");\n        return;\n    }\n    function Intersection(status) {\n        this.status = status;\n        this.points = [];\n    }\n    fabric.Intersection = Intersection;\n    fabric.Intersection.prototype = {\n        constructor: Intersection,\n        appendPoint: function(point) {\n            this.points.push(point);\n            return this;\n        },\n        appendPoints: function(points) {\n            this.points = this.points.concat(points);\n            return this;\n        }\n    };\n    fabric.Intersection.intersectLineLine = function(a1, a2, b1, b2) {\n        var result, uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x), ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x), uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n        if (uB !== 0) {\n            var ua = uaT / uB, ub = ubT / uB;\n            if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n                result = new Intersection(\"Intersection\");\n                result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n            } else {\n                result = new Intersection();\n            }\n        } else {\n            if (uaT === 0 || ubT === 0) {\n                result = new Intersection(\"Coincident\");\n            } else {\n                result = new Intersection(\"Parallel\");\n            }\n        }\n        return result;\n    };\n    fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n        var result = new Intersection(), length = points.length, b1, b2, inter, i;\n        for (i = 0; i < length; i++) {\n            b1 = points[i];\n            b2 = points[(i + 1) % length];\n            inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n            result.appendPoints(inter.points);\n        }\n        if (result.points.length > 0) {\n            result.status = \"Intersection\";\n        }\n        return result;\n    };\n    fabric.Intersection.intersectPolygonPolygon = function(points1, points2) {\n        var result = new Intersection(), length = points1.length, i;\n        for (i = 0; i < length; i++) {\n            var a1 = points1[i], a2 = points1[(i + 1) % length], inter = Intersection.intersectLinePolygon(a1, a2, points2);\n            result.appendPoints(inter.points);\n        }\n        if (result.points.length > 0) {\n            result.status = \"Intersection\";\n        }\n        return result;\n    };\n    fabric.Intersection.intersectPolygonRectangle = function(points, r1, r2) {\n        var min = r1.min(r2), max = r1.max(r2), topRight = new fabric.Point(max.x, min.y), bottomLeft = new fabric.Point(min.x, max.y), inter1 = Intersection.intersectLinePolygon(min, topRight, points), inter2 = Intersection.intersectLinePolygon(topRight, max, points), inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points), inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points), result = new Intersection();\n        result.appendPoints(inter1.points);\n        result.appendPoints(inter2.points);\n        result.appendPoints(inter3.points);\n        result.appendPoints(inter4.points);\n        if (result.points.length > 0) {\n            result.status = \"Intersection\";\n        }\n        return result;\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.Color) {\n        fabric.warn(\"fabric.Color is already defined.\");\n        return;\n    }\n    function Color(color) {\n        if (!color) {\n            this.setSource([ 0, 0, 0, 1 ]);\n        } else {\n            this._tryParsingColor(color);\n        }\n    }\n    fabric.Color = Color;\n    fabric.Color.prototype = {\n        _tryParsingColor: function(color) {\n            var source;\n            if (color in Color.colorNameMap) {\n                color = Color.colorNameMap[color];\n            }\n            if (color === \"transparent\") {\n                source = [ 255, 255, 255, 0 ];\n            }\n            if (!source) {\n                source = Color.sourceFromHex(color);\n            }\n            if (!source) {\n                source = Color.sourceFromRgb(color);\n            }\n            if (!source) {\n                source = Color.sourceFromHsl(color);\n            }\n            if (!source) {\n                source = [ 0, 0, 0, 1 ];\n            }\n            if (source) {\n                this.setSource(source);\n            }\n        },\n        _rgbToHsl: function(r, g, b) {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n            var h, s, l, max = fabric.util.array.max([ r, g, b ]), min = fabric.util.array.min([ r, g, b ]);\n            l = (max + min) / 2;\n            if (max === min) {\n                h = s = 0;\n            } else {\n                var d = max - min;\n                s = l > .5 ? d / (2 - max - min) : d / (max + min);\n                switch (max) {\n                  case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n\n                  case g:\n                    h = (b - r) / d + 2;\n                    break;\n\n                  case b:\n                    h = (r - g) / d + 4;\n                    break;\n                }\n                h /= 6;\n            }\n            return [ Math.round(h * 360), Math.round(s * 100), Math.round(l * 100) ];\n        },\n        getSource: function() {\n            return this._source;\n        },\n        setSource: function(source) {\n            this._source = source;\n        },\n        toRgb: function() {\n            var source = this.getSource();\n            return \"rgb(\" + source[0] + \",\" + source[1] + \",\" + source[2] + \")\";\n        },\n        toRgba: function() {\n            var source = this.getSource();\n            return \"rgba(\" + source[0] + \",\" + source[1] + \",\" + source[2] + \",\" + source[3] + \")\";\n        },\n        toHsl: function() {\n            var source = this.getSource(), hsl = this._rgbToHsl(source[0], source[1], source[2]);\n            return \"hsl(\" + hsl[0] + \",\" + hsl[1] + \"%,\" + hsl[2] + \"%)\";\n        },\n        toHsla: function() {\n            var source = this.getSource(), hsl = this._rgbToHsl(source[0], source[1], source[2]);\n            return \"hsla(\" + hsl[0] + \",\" + hsl[1] + \"%,\" + hsl[2] + \"%,\" + source[3] + \")\";\n        },\n        toHex: function() {\n            var source = this.getSource(), r, g, b;\n            r = source[0].toString(16);\n            r = r.length === 1 ? \"0\" + r : r;\n            g = source[1].toString(16);\n            g = g.length === 1 ? \"0\" + g : g;\n            b = source[2].toString(16);\n            b = b.length === 1 ? \"0\" + b : b;\n            return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n        },\n        toHexa: function() {\n            var source = this.getSource(), a;\n            a = Math.round(source[3] * 255);\n            a = a.toString(16);\n            a = a.length === 1 ? \"0\" + a : a;\n            return this.toHex() + a.toUpperCase();\n        },\n        getAlpha: function() {\n            return this.getSource()[3];\n        },\n        setAlpha: function(alpha) {\n            var source = this.getSource();\n            source[3] = alpha;\n            this.setSource(source);\n            return this;\n        },\n        toGrayscale: function() {\n            var source = this.getSource(), average = parseInt((source[0] * .3 + source[1] * .59 + source[2] * .11).toFixed(0), 10), currentAlpha = source[3];\n            this.setSource([ average, average, average, currentAlpha ]);\n            return this;\n        },\n        toBlackWhite: function(threshold) {\n            var source = this.getSource(), average = (source[0] * .3 + source[1] * .59 + source[2] * .11).toFixed(0), currentAlpha = source[3];\n            threshold = threshold || 127;\n            average = Number(average) < Number(threshold) ? 0 : 255;\n            this.setSource([ average, average, average, currentAlpha ]);\n            return this;\n        },\n        overlayWith: function(otherColor) {\n            if (!(otherColor instanceof Color)) {\n                otherColor = new Color(otherColor);\n            }\n            var result = [], alpha = this.getAlpha(), otherAlpha = .5, source = this.getSource(), otherSource = otherColor.getSource(), i;\n            for (i = 0; i < 3; i++) {\n                result.push(Math.round(source[i] * (1 - otherAlpha) + otherSource[i] * otherAlpha));\n            }\n            result[3] = alpha;\n            this.setSource(result);\n            return this;\n        }\n    };\n    fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n    fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n    fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n    fabric.Color.colorNameMap = {\n        aliceblue: \"#F0F8FF\",\n        antiquewhite: \"#FAEBD7\",\n        aqua: \"#00FFFF\",\n        aquamarine: \"#7FFFD4\",\n        azure: \"#F0FFFF\",\n        beige: \"#F5F5DC\",\n        bisque: \"#FFE4C4\",\n        black: \"#000000\",\n        blanchedalmond: \"#FFEBCD\",\n        blue: \"#0000FF\",\n        blueviolet: \"#8A2BE2\",\n        brown: \"#A52A2A\",\n        burlywood: \"#DEB887\",\n        cadetblue: \"#5F9EA0\",\n        chartreuse: \"#7FFF00\",\n        chocolate: \"#D2691E\",\n        coral: \"#FF7F50\",\n        cornflowerblue: \"#6495ED\",\n        cornsilk: \"#FFF8DC\",\n        crimson: \"#DC143C\",\n        cyan: \"#00FFFF\",\n        darkblue: \"#00008B\",\n        darkcyan: \"#008B8B\",\n        darkgoldenrod: \"#B8860B\",\n        darkgray: \"#A9A9A9\",\n        darkgrey: \"#A9A9A9\",\n        darkgreen: \"#006400\",\n        darkkhaki: \"#BDB76B\",\n        darkmagenta: \"#8B008B\",\n        darkolivegreen: \"#556B2F\",\n        darkorange: \"#FF8C00\",\n        darkorchid: \"#9932CC\",\n        darkred: \"#8B0000\",\n        darksalmon: \"#E9967A\",\n        darkseagreen: \"#8FBC8F\",\n        darkslateblue: \"#483D8B\",\n        darkslategray: \"#2F4F4F\",\n        darkslategrey: \"#2F4F4F\",\n        darkturquoise: \"#00CED1\",\n        darkviolet: \"#9400D3\",\n        deeppink: \"#FF1493\",\n        deepskyblue: \"#00BFFF\",\n        dimgray: \"#696969\",\n        dimgrey: \"#696969\",\n        dodgerblue: \"#1E90FF\",\n        firebrick: \"#B22222\",\n        floralwhite: \"#FFFAF0\",\n        forestgreen: \"#228B22\",\n        fuchsia: \"#FF00FF\",\n        gainsboro: \"#DCDCDC\",\n        ghostwhite: \"#F8F8FF\",\n        gold: \"#FFD700\",\n        goldenrod: \"#DAA520\",\n        gray: \"#808080\",\n        grey: \"#808080\",\n        green: \"#008000\",\n        greenyellow: \"#ADFF2F\",\n        honeydew: \"#F0FFF0\",\n        hotpink: \"#FF69B4\",\n        indianred: \"#CD5C5C\",\n        indigo: \"#4B0082\",\n        ivory: \"#FFFFF0\",\n        khaki: \"#F0E68C\",\n        lavender: \"#E6E6FA\",\n        lavenderblush: \"#FFF0F5\",\n        lawngreen: \"#7CFC00\",\n        lemonchiffon: \"#FFFACD\",\n        lightblue: \"#ADD8E6\",\n        lightcoral: \"#F08080\",\n        lightcyan: \"#E0FFFF\",\n        lightgoldenrodyellow: \"#FAFAD2\",\n        lightgray: \"#D3D3D3\",\n        lightgrey: \"#D3D3D3\",\n        lightgreen: \"#90EE90\",\n        lightpink: \"#FFB6C1\",\n        lightsalmon: \"#FFA07A\",\n        lightseagreen: \"#20B2AA\",\n        lightskyblue: \"#87CEFA\",\n        lightslategray: \"#778899\",\n        lightslategrey: \"#778899\",\n        lightsteelblue: \"#B0C4DE\",\n        lightyellow: \"#FFFFE0\",\n        lime: \"#00FF00\",\n        limegreen: \"#32CD32\",\n        linen: \"#FAF0E6\",\n        magenta: \"#FF00FF\",\n        maroon: \"#800000\",\n        mediumaquamarine: \"#66CDAA\",\n        mediumblue: \"#0000CD\",\n        mediumorchid: \"#BA55D3\",\n        mediumpurple: \"#9370DB\",\n        mediumseagreen: \"#3CB371\",\n        mediumslateblue: \"#7B68EE\",\n        mediumspringgreen: \"#00FA9A\",\n        mediumturquoise: \"#48D1CC\",\n        mediumvioletred: \"#C71585\",\n        midnightblue: \"#191970\",\n        mintcream: \"#F5FFFA\",\n        mistyrose: \"#FFE4E1\",\n        moccasin: \"#FFE4B5\",\n        navajowhite: \"#FFDEAD\",\n        navy: \"#000080\",\n        oldlace: \"#FDF5E6\",\n        olive: \"#808000\",\n        olivedrab: \"#6B8E23\",\n        orange: \"#FFA500\",\n        orangered: \"#FF4500\",\n        orchid: \"#DA70D6\",\n        palegoldenrod: \"#EEE8AA\",\n        palegreen: \"#98FB98\",\n        paleturquoise: \"#AFEEEE\",\n        palevioletred: \"#DB7093\",\n        papayawhip: \"#FFEFD5\",\n        peachpuff: \"#FFDAB9\",\n        peru: \"#CD853F\",\n        pink: \"#FFC0CB\",\n        plum: \"#DDA0DD\",\n        powderblue: \"#B0E0E6\",\n        purple: \"#800080\",\n        rebeccapurple: \"#663399\",\n        red: \"#FF0000\",\n        rosybrown: \"#BC8F8F\",\n        royalblue: \"#4169E1\",\n        saddlebrown: \"#8B4513\",\n        salmon: \"#FA8072\",\n        sandybrown: \"#F4A460\",\n        seagreen: \"#2E8B57\",\n        seashell: \"#FFF5EE\",\n        sienna: \"#A0522D\",\n        silver: \"#C0C0C0\",\n        skyblue: \"#87CEEB\",\n        slateblue: \"#6A5ACD\",\n        slategray: \"#708090\",\n        slategrey: \"#708090\",\n        snow: \"#FFFAFA\",\n        springgreen: \"#00FF7F\",\n        steelblue: \"#4682B4\",\n        tan: \"#D2B48C\",\n        teal: \"#008080\",\n        thistle: \"#D8BFD8\",\n        tomato: \"#FF6347\",\n        turquoise: \"#40E0D0\",\n        violet: \"#EE82EE\",\n        wheat: \"#F5DEB3\",\n        white: \"#FFFFFF\",\n        whitesmoke: \"#F5F5F5\",\n        yellow: \"#FFFF00\",\n        yellowgreen: \"#9ACD32\"\n    };\n    function hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    fabric.Color.fromRgb = function(color) {\n        return Color.fromSource(Color.sourceFromRgb(color));\n    };\n    fabric.Color.sourceFromRgb = function(color) {\n        var match = color.match(Color.reRGBa);\n        if (match) {\n            var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1), g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1), b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n            return [ parseInt(r, 10), parseInt(g, 10), parseInt(b, 10), match[4] ? parseFloat(match[4]) : 1 ];\n        }\n    };\n    fabric.Color.fromRgba = Color.fromRgb;\n    fabric.Color.fromHsl = function(color) {\n        return Color.fromSource(Color.sourceFromHsl(color));\n    };\n    fabric.Color.sourceFromHsl = function(color) {\n        var match = color.match(Color.reHSLa);\n        if (!match) {\n            return;\n        }\n        var h = (parseFloat(match[1]) % 360 + 360) % 360 / 360, s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1), l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1), r, g, b;\n        if (s === 0) {\n            r = g = b = l;\n        } else {\n            var q = l <= .5 ? l * (s + 1) : l + s - l * s, p = l * 2 - q;\n            r = hue2rgb(p, q, h + 1 / 3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1 / 3);\n        }\n        return [ Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), match[4] ? parseFloat(match[4]) : 1 ];\n    };\n    fabric.Color.fromHsla = Color.fromHsl;\n    fabric.Color.fromHex = function(color) {\n        return Color.fromSource(Color.sourceFromHex(color));\n    };\n    fabric.Color.sourceFromHex = function(color) {\n        if (color.match(Color.reHex)) {\n            var value = color.slice(color.indexOf(\"#\") + 1), isShortNotation = value.length === 3 || value.length === 4, isRGBa = value.length === 8 || value.length === 4, r = isShortNotation ? value.charAt(0) + value.charAt(0) : value.substring(0, 2), g = isShortNotation ? value.charAt(1) + value.charAt(1) : value.substring(2, 4), b = isShortNotation ? value.charAt(2) + value.charAt(2) : value.substring(4, 6), a = isRGBa ? isShortNotation ? value.charAt(3) + value.charAt(3) : value.substring(6, 8) : \"FF\";\n            return [ parseInt(r, 16), parseInt(g, 16), parseInt(b, 16), parseFloat((parseInt(a, 16) / 255).toFixed(2)) ];\n        }\n    };\n    fabric.Color.fromSource = function(source) {\n        var oColor = new Color();\n        oColor.setSource(source);\n        return oColor;\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    function getColorStop(el) {\n        var style = el.getAttribute(\"style\"), offset = el.getAttribute(\"offset\") || 0, color, colorAlpha, opacity, i;\n        offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n        offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n        if (style) {\n            var keyValuePairs = style.split(/\\s*;\\s*/);\n            if (keyValuePairs[keyValuePairs.length - 1] === \"\") {\n                keyValuePairs.pop();\n            }\n            for (i = keyValuePairs.length; i--; ) {\n                var split = keyValuePairs[i].split(/\\s*:\\s*/), key = split[0].trim(), value = split[1].trim();\n                if (key === \"stop-color\") {\n                    color = value;\n                } else if (key === \"stop-opacity\") {\n                    opacity = value;\n                }\n            }\n        }\n        if (!color) {\n            color = el.getAttribute(\"stop-color\") || \"rgb(0,0,0)\";\n        }\n        if (!opacity) {\n            opacity = el.getAttribute(\"stop-opacity\");\n        }\n        color = new fabric.Color(color);\n        colorAlpha = color.getAlpha();\n        opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n        opacity *= colorAlpha;\n        return {\n            offset: offset,\n            color: color.toRgb(),\n            opacity: opacity\n        };\n    }\n    function getLinearCoords(el) {\n        return {\n            x1: el.getAttribute(\"x1\") || 0,\n            y1: el.getAttribute(\"y1\") || 0,\n            x2: el.getAttribute(\"x2\") || \"100%\",\n            y2: el.getAttribute(\"y2\") || 0\n        };\n    }\n    function getRadialCoords(el) {\n        return {\n            x1: el.getAttribute(\"fx\") || el.getAttribute(\"cx\") || \"50%\",\n            y1: el.getAttribute(\"fy\") || el.getAttribute(\"cy\") || \"50%\",\n            r1: 0,\n            x2: el.getAttribute(\"cx\") || \"50%\",\n            y2: el.getAttribute(\"cy\") || \"50%\",\n            r2: el.getAttribute(\"r\") || \"50%\"\n        };\n    }\n    var clone = fabric.util.object.clone;\n    fabric.Gradient = fabric.util.createClass({\n        offsetX: 0,\n        offsetY: 0,\n        initialize: function(options) {\n            options || (options = {});\n            var coords = {};\n            this.id = fabric.Object.__uid++;\n            this.type = options.type || \"linear\";\n            coords = {\n                x1: options.coords.x1 || 0,\n                y1: options.coords.y1 || 0,\n                x2: options.coords.x2 || 0,\n                y2: options.coords.y2 || 0\n            };\n            if (this.type === \"radial\") {\n                coords.r1 = options.coords.r1 || 0;\n                coords.r2 = options.coords.r2 || 0;\n            }\n            this.coords = coords;\n            this.colorStops = options.colorStops.slice();\n            if (options.gradientTransform) {\n                this.gradientTransform = options.gradientTransform;\n            }\n            this.offsetX = options.offsetX || this.offsetX;\n            this.offsetY = options.offsetY || this.offsetY;\n        },\n        addColorStop: function(colorStops) {\n            for (var position in colorStops) {\n                var color = new fabric.Color(colorStops[position]);\n                this.colorStops.push({\n                    offset: parseFloat(position),\n                    color: color.toRgb(),\n                    opacity: color.getAlpha()\n                });\n            }\n            return this;\n        },\n        toObject: function(propertiesToInclude) {\n            var object = {\n                type: this.type,\n                coords: this.coords,\n                colorStops: this.colorStops,\n                offsetX: this.offsetX,\n                offsetY: this.offsetY,\n                gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n            };\n            fabric.util.populateWithProperties(this, object, propertiesToInclude);\n            return object;\n        },\n        toSVG: function(object) {\n            var coords = clone(this.coords, true), i, len, markup, commonAttributes, colorStops = clone(this.colorStops, true), needsSwap = coords.r1 > coords.r2, offsetX = object.width / 2, offsetY = object.height / 2;\n            colorStops.sort(function(a, b) {\n                return a.offset - b.offset;\n            });\n            if (object.type === \"path\") {\n                offsetX -= object.pathOffset.x;\n                offsetY -= object.pathOffset.y;\n            }\n            for (var prop in coords) {\n                if (prop === \"x1\" || prop === \"x2\") {\n                    coords[prop] += this.offsetX - offsetX;\n                } else if (prop === \"y1\" || prop === \"y2\") {\n                    coords[prop] += this.offsetY - offsetY;\n                }\n            }\n            commonAttributes = 'id=\"SVGID_' + this.id + '\" gradientUnits=\"userSpaceOnUse\"';\n            if (this.gradientTransform) {\n                commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(\" \") + ')\" ';\n            }\n            if (this.type === \"linear\") {\n                markup = [ \"<linearGradient \", commonAttributes, ' x1=\"', coords.x1, '\" y1=\"', coords.y1, '\" x2=\"', coords.x2, '\" y2=\"', coords.y2, '\">\\n' ];\n            } else if (this.type === \"radial\") {\n                markup = [ \"<radialGradient \", commonAttributes, ' cx=\"', needsSwap ? coords.x1 : coords.x2, '\" cy=\"', needsSwap ? coords.y1 : coords.y2, '\" r=\"', needsSwap ? coords.r1 : coords.r2, '\" fx=\"', needsSwap ? coords.x2 : coords.x1, '\" fy=\"', needsSwap ? coords.y2 : coords.y1, '\">\\n' ];\n            }\n            if (this.type === \"radial\") {\n                if (needsSwap) {\n                    colorStops = colorStops.concat();\n                    colorStops.reverse();\n                    for (i = 0, len = colorStops.length; i < len; i++) {\n                        colorStops[i].offset = 1 - colorStops[i].offset;\n                    }\n                }\n                var minRadius = Math.min(coords.r1, coords.r2);\n                if (minRadius > 0) {\n                    var maxRadius = Math.max(coords.r1, coords.r2), percentageShift = minRadius / maxRadius;\n                    for (i = 0, len = colorStops.length; i < len; i++) {\n                        colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n                    }\n                }\n            }\n            for (i = 0, len = colorStops.length; i < len; i++) {\n                var colorStop = colorStops[i];\n                markup.push(\"<stop \", 'offset=\"', colorStop.offset * 100 + \"%\", '\" style=\"stop-color:', colorStop.color, typeof colorStop.opacity !== \"undefined\" ? \";stop-opacity: \" + colorStop.opacity : \";\", '\"/>\\n');\n            }\n            markup.push(this.type === \"linear\" ? \"</linearGradient>\\n\" : \"</radialGradient>\\n\");\n            return markup.join(\"\");\n        },\n        toLive: function(ctx) {\n            var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n            if (!this.type) {\n                return;\n            }\n            if (this.type === \"linear\") {\n                gradient = ctx.createLinearGradient(coords.x1, coords.y1, coords.x2, coords.y2);\n            } else if (this.type === \"radial\") {\n                gradient = ctx.createRadialGradient(coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n            }\n            for (i = 0, len = this.colorStops.length; i < len; i++) {\n                var color = this.colorStops[i].color, opacity = this.colorStops[i].opacity, offset = this.colorStops[i].offset;\n                if (typeof opacity !== \"undefined\") {\n                    color = new fabric.Color(color).setAlpha(opacity).toRgba();\n                }\n                gradient.addColorStop(offset, color);\n            }\n            return gradient;\n        }\n    });\n    fabric.util.object.extend(fabric.Gradient, {\n        fromElement: function(el, instance) {\n            var colorStopEls = el.getElementsByTagName(\"stop\"), type, gradientUnits = el.getAttribute(\"gradientUnits\") || \"objectBoundingBox\", gradientTransform = el.getAttribute(\"gradientTransform\"), colorStops = [], coords, ellipseMatrix, i;\n            if (el.nodeName === \"linearGradient\" || el.nodeName === \"LINEARGRADIENT\") {\n                type = \"linear\";\n            } else {\n                type = \"radial\";\n            }\n            if (type === \"linear\") {\n                coords = getLinearCoords(el);\n            } else if (type === \"radial\") {\n                coords = getRadialCoords(el);\n            }\n            for (i = colorStopEls.length; i--; ) {\n                colorStops.push(getColorStop(colorStopEls[i]));\n            }\n            ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n            var gradient = new fabric.Gradient({\n                type: type,\n                coords: coords,\n                colorStops: colorStops,\n                offsetX: -instance.left,\n                offsetY: -instance.top\n            });\n            if (gradientTransform || ellipseMatrix !== \"\") {\n                gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || \"\") + ellipseMatrix);\n            }\n            return gradient;\n        },\n        forObject: function(obj, options) {\n            options || (options = {});\n            _convertPercentUnitsToValues(obj, options.coords, \"userSpaceOnUse\");\n            return new fabric.Gradient(options);\n        }\n    });\n    function _convertPercentUnitsToValues(object, options, gradientUnits) {\n        var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = \"\";\n        for (var prop in options) {\n            if (options[prop] === \"Infinity\") {\n                options[prop] = 1;\n            } else if (options[prop] === \"-Infinity\") {\n                options[prop] = 0;\n            }\n            propValue = parseFloat(options[prop], 10);\n            if (typeof options[prop] === \"string\" && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n                multFactor = .01;\n            } else {\n                multFactor = 1;\n            }\n            if (prop === \"x1\" || prop === \"x2\" || prop === \"r2\") {\n                multFactor *= gradientUnits === \"objectBoundingBox\" ? object.width : 1;\n                addFactor = gradientUnits === \"objectBoundingBox\" ? object.left || 0 : 0;\n            } else if (prop === \"y1\" || prop === \"y2\") {\n                multFactor *= gradientUnits === \"objectBoundingBox\" ? object.height : 1;\n                addFactor = gradientUnits === \"objectBoundingBox\" ? object.top || 0 : 0;\n            }\n            options[prop] = propValue * multFactor + addFactor;\n        }\n        if (object.type === \"ellipse\" && options.r2 !== null && gradientUnits === \"objectBoundingBox\" && object.rx !== object.ry) {\n            var scaleFactor = object.ry / object.rx;\n            ellipseMatrix = \" scale(1, \" + scaleFactor + \")\";\n            if (options.y1) {\n                options.y1 /= scaleFactor;\n            }\n            if (options.y2) {\n                options.y2 /= scaleFactor;\n            }\n        }\n        return ellipseMatrix;\n    }\n})();\n\n(function() {\n    \"use strict\";\n    var toFixed = fabric.util.toFixed;\n    fabric.Pattern = fabric.util.createClass({\n        repeat: \"repeat\",\n        offsetX: 0,\n        offsetY: 0,\n        crossOrigin: \"\",\n        patternTransform: null,\n        initialize: function(options, callback) {\n            options || (options = {});\n            this.id = fabric.Object.__uid++;\n            this.setOptions(options);\n            if (!options.source || options.source && typeof options.source !== \"string\") {\n                callback && callback(this);\n                return;\n            }\n            if (typeof fabric.util.getFunctionBody(options.source) !== \"undefined\") {\n                this.source = new Function(fabric.util.getFunctionBody(options.source));\n                callback && callback(this);\n            } else {\n                var _this = this;\n                this.source = fabric.util.createImage();\n                fabric.util.loadImage(options.source, function(img) {\n                    _this.source = img;\n                    callback && callback(_this);\n                }, null, this.crossOrigin);\n            }\n        },\n        toObject: function(propertiesToInclude) {\n            var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS, source, object;\n            if (typeof this.source === \"function\") {\n                source = String(this.source);\n            } else if (typeof this.source.src === \"string\") {\n                source = this.source.src;\n            } else if (typeof this.source === \"object\" && this.source.toDataURL) {\n                source = this.source.toDataURL();\n            }\n            object = {\n                type: \"pattern\",\n                source: source,\n                repeat: this.repeat,\n                crossOrigin: this.crossOrigin,\n                offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n                offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n                patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n            };\n            fabric.util.populateWithProperties(this, object, propertiesToInclude);\n            return object;\n        },\n        toSVG: function(object) {\n            var patternSource = typeof this.source === \"function\" ? this.source() : this.source, patternWidth = patternSource.width / object.width, patternHeight = patternSource.height / object.height, patternOffsetX = this.offsetX / object.width, patternOffsetY = this.offsetY / object.height, patternImgSrc = \"\";\n            if (this.repeat === \"repeat-x\" || this.repeat === \"no-repeat\") {\n                patternHeight = 1;\n            }\n            if (this.repeat === \"repeat-y\" || this.repeat === \"no-repeat\") {\n                patternWidth = 1;\n            }\n            if (patternSource.src) {\n                patternImgSrc = patternSource.src;\n            } else if (patternSource.toDataURL) {\n                patternImgSrc = patternSource.toDataURL();\n            }\n            return '<pattern id=\"SVGID_' + this.id + '\" x=\"' + patternOffsetX + '\" y=\"' + patternOffsetY + '\" width=\"' + patternWidth + '\" height=\"' + patternHeight + '\">\\n' + '<image x=\"0\" y=\"0\"' + ' width=\"' + patternSource.width + '\" height=\"' + patternSource.height + '\" xlink:href=\"' + patternImgSrc + '\"></image>\\n' + \"</pattern>\\n\";\n        },\n        setOptions: function(options) {\n            for (var prop in options) {\n                this[prop] = options[prop];\n            }\n        },\n        toLive: function(ctx) {\n            var source = typeof this.source === \"function\" ? this.source() : this.source;\n            if (!source) {\n                return \"\";\n            }\n            if (typeof source.src !== \"undefined\") {\n                if (!source.complete) {\n                    return \"\";\n                }\n                if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n                    return \"\";\n                }\n            }\n            return ctx.createPattern(source, this.repeat);\n        }\n    });\n})();\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), toFixed = fabric.util.toFixed;\n    if (fabric.Shadow) {\n        fabric.warn(\"fabric.Shadow is already defined.\");\n        return;\n    }\n    fabric.Shadow = fabric.util.createClass({\n        color: \"rgb(0,0,0)\",\n        blur: 0,\n        offsetX: 0,\n        offsetY: 0,\n        affectStroke: false,\n        includeDefaultValues: true,\n        initialize: function(options) {\n            if (typeof options === \"string\") {\n                options = this._parseShadow(options);\n            }\n            for (var prop in options) {\n                this[prop] = options[prop];\n            }\n            this.id = fabric.Object.__uid++;\n        },\n        _parseShadow: function(shadow) {\n            var shadowStr = shadow.trim(), offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [], color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, \"\") || \"rgb(0,0,0)\";\n            return {\n                color: color.trim(),\n                offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n                offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n                blur: parseInt(offsetsAndBlur[3], 10) || 0\n            };\n        },\n        toString: function() {\n            return [ this.offsetX, this.offsetY, this.blur, this.color ].join(\"px \");\n        },\n        toSVG: function(object) {\n            var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS, offset = fabric.util.rotateVector({\n                x: this.offsetX,\n                y: this.offsetY\n            }, fabric.util.degreesToRadians(-object.angle)), BLUR_BOX = 20;\n            if (object.width && object.height) {\n                fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n                fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n            }\n            if (object.flipX) {\n                offset.x *= -1;\n            }\n            if (object.flipY) {\n                offset.y *= -1;\n            }\n            return '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' + 'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + \">\\n\" + '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' + toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' + '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) + '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' + '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' + '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' + \"\\t<feMerge>\\n\" + \"\\t\\t<feMergeNode></feMergeNode>\\n\" + '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' + \"\\t</feMerge>\\n\" + \"</filter>\\n\";\n        },\n        toObject: function() {\n            if (this.includeDefaultValues) {\n                return {\n                    color: this.color,\n                    blur: this.blur,\n                    offsetX: this.offsetX,\n                    offsetY: this.offsetY,\n                    affectStroke: this.affectStroke\n                };\n            }\n            var obj = {}, proto = fabric.Shadow.prototype;\n            [ \"color\", \"blur\", \"offsetX\", \"offsetY\", \"affectStroke\" ].forEach(function(prop) {\n                if (this[prop] !== proto[prop]) {\n                    obj[prop] = this[prop];\n                }\n            }, this);\n            return obj;\n        }\n    });\n    fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    \"use strict\";\n    if (fabric.StaticCanvas) {\n        fabric.warn(\"fabric.StaticCanvas is already defined.\");\n        return;\n    }\n    var extend = fabric.util.object.extend, getElementOffset = fabric.util.getElementOffset, removeFromArray = fabric.util.removeFromArray, toFixed = fabric.util.toFixed, transformPoint = fabric.util.transformPoint, invertTransform = fabric.util.invertTransform, CANVAS_INIT_ERROR = new Error(\"Could not initialize `canvas` element\");\n    fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, {\n        initialize: function(el, options) {\n            options || (options = {});\n            this.renderAndResetBound = this.renderAndReset.bind(this);\n            this.requestRenderAllBound = this.requestRenderAll.bind(this);\n            this._initStatic(el, options);\n        },\n        backgroundColor: \"\",\n        backgroundImage: null,\n        overlayColor: \"\",\n        overlayImage: null,\n        includeDefaultValues: true,\n        stateful: false,\n        renderOnAddRemove: true,\n        clipTo: null,\n        controlsAboveOverlay: false,\n        allowTouchScrolling: false,\n        imageSmoothingEnabled: true,\n        viewportTransform: fabric.iMatrix.concat(),\n        backgroundVpt: true,\n        overlayVpt: true,\n        onBeforeScaleRotate: function() {},\n        enableRetinaScaling: true,\n        vptCoords: {},\n        skipOffscreen: true,\n        _initStatic: function(el, options) {\n            var cb = this.requestRenderAllBound;\n            this._objects = [];\n            this._createLowerCanvas(el);\n            this._initOptions(options);\n            this._setImageSmoothing();\n            if (!this.interactive) {\n                this._initRetinaScaling();\n            }\n            if (options.overlayImage) {\n                this.setOverlayImage(options.overlayImage, cb);\n            }\n            if (options.backgroundImage) {\n                this.setBackgroundImage(options.backgroundImage, cb);\n            }\n            if (options.backgroundColor) {\n                this.setBackgroundColor(options.backgroundColor, cb);\n            }\n            if (options.overlayColor) {\n                this.setOverlayColor(options.overlayColor, cb);\n            }\n            this.calcOffset();\n        },\n        _isRetinaScaling: function() {\n            return fabric.devicePixelRatio !== 1 && this.enableRetinaScaling;\n        },\n        getRetinaScaling: function() {\n            return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n        },\n        _initRetinaScaling: function() {\n            if (!this._isRetinaScaling()) {\n                return;\n            }\n            this.lowerCanvasEl.setAttribute(\"width\", this.width * fabric.devicePixelRatio);\n            this.lowerCanvasEl.setAttribute(\"height\", this.height * fabric.devicePixelRatio);\n            this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n        },\n        calcOffset: function() {\n            this._offset = getElementOffset(this.lowerCanvasEl);\n            return this;\n        },\n        setOverlayImage: function(image, callback, options) {\n            return this.__setBgOverlayImage(\"overlayImage\", image, callback, options);\n        },\n        setBackgroundImage: function(image, callback, options) {\n            return this.__setBgOverlayImage(\"backgroundImage\", image, callback, options);\n        },\n        setOverlayColor: function(overlayColor, callback) {\n            return this.__setBgOverlayColor(\"overlayColor\", overlayColor, callback);\n        },\n        setBackgroundColor: function(backgroundColor, callback) {\n            return this.__setBgOverlayColor(\"backgroundColor\", backgroundColor, callback);\n        },\n        _setImageSmoothing: function() {\n            var ctx = this.getContext();\n            ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n            ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n        },\n        __setBgOverlayImage: function(property, image, callback, options) {\n            if (typeof image === \"string\") {\n                fabric.util.loadImage(image, function(img) {\n                    img && (this[property] = new fabric.Image(img, options));\n                    callback && callback(img);\n                }, this, options && options.crossOrigin);\n            } else {\n                options && image.setOptions(options);\n                this[property] = image;\n                callback && callback(image);\n            }\n            return this;\n        },\n        __setBgOverlayColor: function(property, color, callback) {\n            this[property] = color;\n            this._initGradient(color, property);\n            this._initPattern(color, property, callback);\n            return this;\n        },\n        _createCanvasElement: function() {\n            var element = fabric.util.createCanvasElement();\n            if (!element) {\n                throw CANVAS_INIT_ERROR;\n            }\n            if (!element.style) {\n                element.style = {};\n            }\n            if (typeof element.getContext === \"undefined\") {\n                throw CANVAS_INIT_ERROR;\n            }\n            return element;\n        },\n        _initOptions: function(options) {\n            this._setOptions(options);\n            this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n            this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n            if (!this.lowerCanvasEl.style) {\n                return;\n            }\n            this.lowerCanvasEl.width = this.width;\n            this.lowerCanvasEl.height = this.height;\n            this.lowerCanvasEl.style.width = this.width + \"px\";\n            this.lowerCanvasEl.style.height = this.height + \"px\";\n            this.viewportTransform = this.viewportTransform.slice();\n        },\n        _createLowerCanvas: function(canvasEl) {\n            if (canvasEl && canvasEl.getContext) {\n                this.lowerCanvasEl = canvasEl;\n            } else {\n                this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n            }\n            fabric.util.addClass(this.lowerCanvasEl, \"lower-canvas\");\n            if (this.interactive) {\n                this._applyCanvasStyle(this.lowerCanvasEl);\n            }\n            this.contextContainer = this.lowerCanvasEl.getContext(\"2d\");\n        },\n        getWidth: function() {\n            return this.width;\n        },\n        getHeight: function() {\n            return this.height;\n        },\n        setWidth: function(value, options) {\n            return this.setDimensions({\n                width: value\n            }, options);\n        },\n        setHeight: function(value, options) {\n            return this.setDimensions({\n                height: value\n            }, options);\n        },\n        setDimensions: function(dimensions, options) {\n            var cssValue;\n            options = options || {};\n            for (var prop in dimensions) {\n                cssValue = dimensions[prop];\n                if (!options.cssOnly) {\n                    this._setBackstoreDimension(prop, dimensions[prop]);\n                    cssValue += \"px\";\n                }\n                if (!options.backstoreOnly) {\n                    this._setCssDimension(prop, cssValue);\n                }\n            }\n            if (this._isCurrentlyDrawing) {\n                this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n            }\n            this._initRetinaScaling();\n            this._setImageSmoothing();\n            this.calcOffset();\n            if (!options.cssOnly) {\n                this.requestRenderAll();\n            }\n            return this;\n        },\n        _setBackstoreDimension: function(prop, value) {\n            this.lowerCanvasEl[prop] = value;\n            if (this.upperCanvasEl) {\n                this.upperCanvasEl[prop] = value;\n            }\n            if (this.cacheCanvasEl) {\n                this.cacheCanvasEl[prop] = value;\n            }\n            this[prop] = value;\n            return this;\n        },\n        _setCssDimension: function(prop, value) {\n            this.lowerCanvasEl.style[prop] = value;\n            if (this.upperCanvasEl) {\n                this.upperCanvasEl.style[prop] = value;\n            }\n            if (this.wrapperEl) {\n                this.wrapperEl.style[prop] = value;\n            }\n            return this;\n        },\n        getZoom: function() {\n            return this.viewportTransform[0];\n        },\n        setViewportTransform: function(vpt) {\n            var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n            this.viewportTransform = vpt;\n            for (i = 0, len = this._objects.length; i < len; i++) {\n                object = this._objects[i];\n                object.group || object.setCoords(ignoreVpt, skipAbsolute);\n            }\n            if (activeObject && activeObject.type === \"activeSelection\") {\n                activeObject.setCoords(ignoreVpt, skipAbsolute);\n            }\n            this.calcViewportBoundaries();\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        zoomToPoint: function(point, value) {\n            var before = point, vpt = this.viewportTransform.slice(0);\n            point = transformPoint(point, invertTransform(this.viewportTransform));\n            vpt[0] = value;\n            vpt[3] = value;\n            var after = transformPoint(point, vpt);\n            vpt[4] += before.x - after.x;\n            vpt[5] += before.y - after.y;\n            return this.setViewportTransform(vpt);\n        },\n        setZoom: function(value) {\n            this.zoomToPoint(new fabric.Point(0, 0), value);\n            return this;\n        },\n        absolutePan: function(point) {\n            var vpt = this.viewportTransform.slice(0);\n            vpt[4] = -point.x;\n            vpt[5] = -point.y;\n            return this.setViewportTransform(vpt);\n        },\n        relativePan: function(point) {\n            return this.absolutePan(new fabric.Point(-point.x - this.viewportTransform[4], -point.y - this.viewportTransform[5]));\n        },\n        getElement: function() {\n            return this.lowerCanvasEl;\n        },\n        _onObjectAdded: function(obj) {\n            this.stateful && obj.setupState();\n            obj._set(\"canvas\", this);\n            obj.setCoords();\n            this.fire(\"object:added\", {\n                target: obj\n            });\n            obj.fire(\"added\");\n        },\n        _onObjectRemoved: function(obj) {\n            this.fire(\"object:removed\", {\n                target: obj\n            });\n            obj.fire(\"removed\");\n            delete obj.canvas;\n        },\n        clearContext: function(ctx) {\n            ctx.clearRect(0, 0, this.width, this.height);\n            return this;\n        },\n        getContext: function() {\n            return this.contextContainer;\n        },\n        clear: function() {\n            this._objects.length = 0;\n            this.backgroundImage = null;\n            this.overlayImage = null;\n            this.backgroundColor = \"\";\n            this.overlayColor = \"\";\n            if (this._hasITextHandlers) {\n                this.off(\"mouse:up\", this._mouseUpITextHandler);\n                this._iTextInstances = null;\n                this._hasITextHandlers = false;\n            }\n            this.clearContext(this.contextContainer);\n            this.fire(\"canvas:cleared\");\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        renderAll: function() {\n            var canvasToDrawOn = this.contextContainer;\n            this.renderCanvas(canvasToDrawOn, this._objects);\n            return this;\n        },\n        renderAndReset: function() {\n            this.isRendering = 0;\n            this.renderAll();\n        },\n        requestRenderAll: function() {\n            if (!this.isRendering) {\n                this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n            }\n            return this;\n        },\n        calcViewportBoundaries: function() {\n            var points = {}, width = this.width, height = this.height, iVpt = invertTransform(this.viewportTransform);\n            points.tl = transformPoint({\n                x: 0,\n                y: 0\n            }, iVpt);\n            points.br = transformPoint({\n                x: width,\n                y: height\n            }, iVpt);\n            points.tr = new fabric.Point(points.br.x, points.tl.y);\n            points.bl = new fabric.Point(points.tl.x, points.br.y);\n            this.vptCoords = points;\n            return points;\n        },\n        renderCanvas: function(ctx, objects) {\n            var v = this.viewportTransform;\n            if (this.isRendering) {\n                fabric.util.cancelAnimFrame(this.isRendering);\n                this.isRendering = 0;\n            }\n            this.calcViewportBoundaries();\n            this.clearContext(ctx);\n            this.fire(\"before:render\");\n            if (this.clipTo) {\n                fabric.util.clipContext(this, ctx);\n            }\n            this._renderBackground(ctx);\n            ctx.save();\n            ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n            this._renderObjects(ctx, objects);\n            ctx.restore();\n            if (!this.controlsAboveOverlay && this.interactive) {\n                this.drawControls(ctx);\n            }\n            if (this.clipTo) {\n                ctx.restore();\n            }\n            this._renderOverlay(ctx);\n            if (this.controlsAboveOverlay && this.interactive) {\n                this.drawControls(ctx);\n            }\n            this.fire(\"after:render\");\n        },\n        _renderObjects: function(ctx, objects) {\n            var i, len;\n            for (i = 0, len = objects.length; i < len; ++i) {\n                objects[i] && objects[i].render(ctx);\n            }\n        },\n        _renderBackgroundOrOverlay: function(ctx, property) {\n            var object = this[property + \"Color\"], v;\n            if (object) {\n                ctx.fillStyle = object.toLive ? object.toLive(ctx, this) : object;\n                ctx.fillRect(object.offsetX || 0, object.offsetY || 0, this.width, this.height);\n            }\n            object = this[property + \"Image\"];\n            if (object) {\n                if (this[property + \"Vpt\"]) {\n                    v = this.viewportTransform;\n                    ctx.save();\n                    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n                }\n                object.render(ctx);\n                this[property + \"Vpt\"] && ctx.restore();\n            }\n        },\n        _renderBackground: function(ctx) {\n            this._renderBackgroundOrOverlay(ctx, \"background\");\n        },\n        _renderOverlay: function(ctx) {\n            this._renderBackgroundOrOverlay(ctx, \"overlay\");\n        },\n        getCenter: function() {\n            return {\n                top: this.height / 2,\n                left: this.width / 2\n            };\n        },\n        centerObjectH: function(object) {\n            return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n        },\n        centerObjectV: function(object) {\n            return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n        },\n        centerObject: function(object) {\n            var center = this.getCenter();\n            return this._centerObject(object, new fabric.Point(center.left, center.top));\n        },\n        viewportCenterObject: function(object) {\n            var vpCenter = this.getVpCenter();\n            return this._centerObject(object, vpCenter);\n        },\n        viewportCenterObjectH: function(object) {\n            var vpCenter = this.getVpCenter();\n            this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n            return this;\n        },\n        viewportCenterObjectV: function(object) {\n            var vpCenter = this.getVpCenter();\n            return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n        },\n        getVpCenter: function() {\n            var center = this.getCenter(), iVpt = invertTransform(this.viewportTransform);\n            return transformPoint({\n                x: center.left,\n                y: center.top\n            }, iVpt);\n        },\n        _centerObject: function(object, center) {\n            object.setPositionByOrigin(center, \"center\", \"center\");\n            object.setCoords();\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        toDatalessJSON: function(propertiesToInclude) {\n            return this.toDatalessObject(propertiesToInclude);\n        },\n        toObject: function(propertiesToInclude) {\n            return this._toObjectMethod(\"toObject\", propertiesToInclude);\n        },\n        toDatalessObject: function(propertiesToInclude) {\n            return this._toObjectMethod(\"toDatalessObject\", propertiesToInclude);\n        },\n        _toObjectMethod: function(methodName, propertiesToInclude) {\n            var data = {\n                version: fabric.version,\n                objects: this._toObjects(methodName, propertiesToInclude)\n            };\n            extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n            fabric.util.populateWithProperties(this, data, propertiesToInclude);\n            return data;\n        },\n        _toObjects: function(methodName, propertiesToInclude) {\n            return this.getObjects().filter(function(object) {\n                return !object.excludeFromExport;\n            }).map(function(instance) {\n                return this._toObject(instance, methodName, propertiesToInclude);\n            }, this);\n        },\n        _toObject: function(instance, methodName, propertiesToInclude) {\n            var originalValue;\n            if (!this.includeDefaultValues) {\n                originalValue = instance.includeDefaultValues;\n                instance.includeDefaultValues = false;\n            }\n            var object = instance[methodName](propertiesToInclude);\n            if (!this.includeDefaultValues) {\n                instance.includeDefaultValues = originalValue;\n            }\n            return object;\n        },\n        __serializeBgOverlay: function(methodName, propertiesToInclude) {\n            var data = {}, bgImage = this.backgroundImage, overlay = this.overlayImage;\n            if (this.backgroundColor) {\n                data.background = this.backgroundColor.toObject ? this.backgroundColor.toObject(propertiesToInclude) : this.backgroundColor;\n            }\n            if (this.overlayColor) {\n                data.overlay = this.overlayColor.toObject ? this.overlayColor.toObject(propertiesToInclude) : this.overlayColor;\n            }\n            if (bgImage && !bgImage.excludeFromExport) {\n                data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n            }\n            if (overlay && !overlay.excludeFromExport) {\n                data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n            }\n            return data;\n        },\n        svgViewportTransformation: true,\n        toSVG: function(options, reviver) {\n            options || (options = {});\n            var markup = [];\n            this._setSVGPreamble(markup, options);\n            this._setSVGHeader(markup, options);\n            this._setSVGBgOverlayColor(markup, \"backgroundColor\");\n            this._setSVGBgOverlayImage(markup, \"backgroundImage\", reviver);\n            this._setSVGObjects(markup, reviver);\n            this._setSVGBgOverlayColor(markup, \"overlayColor\");\n            this._setSVGBgOverlayImage(markup, \"overlayImage\", reviver);\n            markup.push(\"</svg>\");\n            return markup.join(\"\");\n        },\n        _setSVGPreamble: function(markup, options) {\n            if (options.suppressPreamble) {\n                return;\n            }\n            markup.push('<?xml version=\"1.0\" encoding=\"', options.encoding || \"UTF-8\", '\" standalone=\"no\" ?>\\n', '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ', '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n        },\n        _setSVGHeader: function(markup, options) {\n            var width = options.width || this.width, height = options.height || this.height, vpt, viewBox = 'viewBox=\"0 0 ' + this.width + \" \" + this.height + '\" ', NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n            if (options.viewBox) {\n                viewBox = 'viewBox=\"' + options.viewBox.x + \" \" + options.viewBox.y + \" \" + options.viewBox.width + \" \" + options.viewBox.height + '\" ';\n            } else {\n                if (this.svgViewportTransformation) {\n                    vpt = this.viewportTransform;\n                    viewBox = 'viewBox=\"' + toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + \" \" + toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + \" \" + toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + \" \" + toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n                }\n            }\n            markup.push(\"<svg \", 'xmlns=\"http://www.w3.org/2000/svg\" ', 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ', 'version=\"1.1\" ', 'width=\"', width, '\" ', 'height=\"', height, '\" ', viewBox, 'xml:space=\"preserve\">\\n', \"<desc>Created with Fabric.js \", fabric.version, \"</desc>\\n\", \"<defs>\\n\", this.createSVGFontFacesMarkup(), this.createSVGRefElementsMarkup(), \"</defs>\\n\");\n        },\n        createSVGRefElementsMarkup: function() {\n            var _this = this, markup = [ \"backgroundColor\", \"overlayColor\" ].map(function(prop) {\n                var fill = _this[prop];\n                if (fill && fill.toLive) {\n                    return fill.toSVG(_this, false);\n                }\n            });\n            return markup.join(\"\");\n        },\n        createSVGFontFacesMarkup: function() {\n            var markup = \"\", fontList = {}, obj, fontFamily, style, row, rowIndex, _char, charIndex, i, len, fontPaths = fabric.fontPaths, objects = this.getObjects();\n            for (i = 0, len = objects.length; i < len; i++) {\n                obj = objects[i];\n                fontFamily = obj.fontFamily;\n                if (obj.type.indexOf(\"text\") === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n                    continue;\n                }\n                fontList[fontFamily] = true;\n                if (!obj.styles) {\n                    continue;\n                }\n                style = obj.styles;\n                for (rowIndex in style) {\n                    row = style[rowIndex];\n                    for (charIndex in row) {\n                        _char = row[charIndex];\n                        fontFamily = _char.fontFamily;\n                        if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n                            fontList[fontFamily] = true;\n                        }\n                    }\n                }\n            }\n            for (var j in fontList) {\n                markup += [ \"\\t\\t@font-face {\\n\", \"\\t\\t\\tfont-family: '\", j, \"';\\n\", \"\\t\\t\\tsrc: url('\", fontPaths[j], \"');\\n\", \"\\t\\t}\\n\" ].join(\"\");\n            }\n            if (markup) {\n                markup = [ '\\t<style type=\"text/css\">', \"<![CDATA[\\n\", markup, \"]]>\", \"</style>\\n\" ].join(\"\");\n            }\n            return markup;\n        },\n        _setSVGObjects: function(markup, reviver) {\n            var instance, i, len, objects = this.getObjects();\n            for (i = 0, len = objects.length; i < len; i++) {\n                instance = objects[i];\n                if (instance.excludeFromExport) {\n                    continue;\n                }\n                this._setSVGObject(markup, instance, reviver);\n            }\n        },\n        _setSVGObject: function(markup, instance, reviver) {\n            markup.push(instance.toSVG(reviver));\n        },\n        _setSVGBgOverlayImage: function(markup, property, reviver) {\n            if (this[property] && this[property].toSVG) {\n                markup.push(this[property].toSVG(reviver));\n            }\n        },\n        _setSVGBgOverlayColor: function(markup, property) {\n            var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0], finalHeight = this.height / vpt[3];\n            if (!filler) {\n                return;\n            }\n            if (filler.toLive) {\n                var repeat = filler.repeat;\n                markup.push('<rect transform=\"translate(', finalWidth / 2, \",\", finalHeight / 2, ')\"', ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ', 'width=\"', repeat === \"repeat-y\" || repeat === \"no-repeat\" ? filler.source.width : finalWidth, '\" height=\"', repeat === \"repeat-x\" || repeat === \"no-repeat\" ? filler.source.height : finalHeight, '\" fill=\"url(#SVGID_' + filler.id + ')\"', \"></rect>\\n\");\n            } else {\n                markup.push('<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ', 'fill=\"', this[property], '\"', \"></rect>\\n\");\n            }\n        },\n        sendToBack: function(object) {\n            if (!object) {\n                return this;\n            }\n            var activeSelection = this._activeObject, i, obj, objs;\n            if (object === activeSelection && object.type === \"activeSelection\") {\n                objs = activeSelection._objects;\n                for (i = objs.length; i--; ) {\n                    obj = objs[i];\n                    removeFromArray(this._objects, obj);\n                    this._objects.unshift(obj);\n                }\n            } else {\n                removeFromArray(this._objects, object);\n                this._objects.unshift(object);\n            }\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        bringToFront: function(object) {\n            if (!object) {\n                return this;\n            }\n            var activeSelection = this._activeObject, i, obj, objs;\n            if (object === activeSelection && object.type === \"activeSelection\") {\n                objs = activeSelection._objects;\n                for (i = 0; i < objs.length; i++) {\n                    obj = objs[i];\n                    removeFromArray(this._objects, obj);\n                    this._objects.push(obj);\n                }\n            } else {\n                removeFromArray(this._objects, object);\n                this._objects.push(object);\n            }\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        sendBackwards: function(object, intersecting) {\n            if (!object) {\n                return this;\n            }\n            var activeSelection = this._activeObject, i, obj, idx, newIdx, objs, objsMoved = 0;\n            if (object === activeSelection && object.type === \"activeSelection\") {\n                objs = activeSelection._objects;\n                for (i = 0; i < objs.length; i++) {\n                    obj = objs[i];\n                    idx = this._objects.indexOf(obj);\n                    if (idx > 0 + objsMoved) {\n                        newIdx = idx - 1;\n                        removeFromArray(this._objects, obj);\n                        this._objects.splice(newIdx, 0, obj);\n                    }\n                    objsMoved++;\n                }\n            } else {\n                idx = this._objects.indexOf(object);\n                if (idx !== 0) {\n                    newIdx = this._findNewLowerIndex(object, idx, intersecting);\n                    removeFromArray(this._objects, object);\n                    this._objects.splice(newIdx, 0, object);\n                }\n            }\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        _findNewLowerIndex: function(object, idx, intersecting) {\n            var newIdx, i;\n            if (intersecting) {\n                newIdx = idx;\n                for (i = idx - 1; i >= 0; --i) {\n                    var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n                    if (isIntersecting) {\n                        newIdx = i;\n                        break;\n                    }\n                }\n            } else {\n                newIdx = idx - 1;\n            }\n            return newIdx;\n        },\n        bringForward: function(object, intersecting) {\n            if (!object) {\n                return this;\n            }\n            var activeSelection = this._activeObject, i, obj, idx, newIdx, objs, objsMoved = 0;\n            if (object === activeSelection && object.type === \"activeSelection\") {\n                objs = activeSelection._objects;\n                for (i = objs.length; i--; ) {\n                    obj = objs[i];\n                    idx = this._objects.indexOf(obj);\n                    if (idx < this._objects.length - 1 - objsMoved) {\n                        newIdx = idx + 1;\n                        removeFromArray(this._objects, obj);\n                        this._objects.splice(newIdx, 0, obj);\n                    }\n                    objsMoved++;\n                }\n            } else {\n                idx = this._objects.indexOf(object);\n                if (idx !== this._objects.length - 1) {\n                    newIdx = this._findNewUpperIndex(object, idx, intersecting);\n                    removeFromArray(this._objects, object);\n                    this._objects.splice(newIdx, 0, object);\n                }\n            }\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        _findNewUpperIndex: function(object, idx, intersecting) {\n            var newIdx, i, len;\n            if (intersecting) {\n                newIdx = idx;\n                for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n                    var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n                    if (isIntersecting) {\n                        newIdx = i;\n                        break;\n                    }\n                }\n            } else {\n                newIdx = idx + 1;\n            }\n            return newIdx;\n        },\n        moveTo: function(object, index) {\n            removeFromArray(this._objects, object);\n            this._objects.splice(index, 0, object);\n            return this.renderOnAddRemove && this.requestRenderAll();\n        },\n        dispose: function() {\n            if (this.isRendering) {\n                fabric.util.cancelAnimFrame(this.isRendering);\n                this.isRendering = 0;\n            }\n            this.forEachObject(function(object) {\n                object.dispose && object.dispose();\n            });\n            this._objects = [];\n            this.backgroundImage = null;\n            this.overlayImage = null;\n            this._iTextInstances = null;\n            this.lowerCanvasEl = null;\n            this.contextContainer = null;\n            return this;\n        },\n        toString: function() {\n            return \"#<fabric.Canvas (\" + this.complexity() + \"): \" + \"{ objects: \" + this.getObjects().length + \" }>\";\n        }\n    });\n    extend(fabric.StaticCanvas.prototype, fabric.Observable);\n    extend(fabric.StaticCanvas.prototype, fabric.Collection);\n    extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n    extend(fabric.StaticCanvas, {\n        EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n        supports: function(methodName) {\n            var el = fabric.util.createCanvasElement();\n            if (!el || !el.getContext) {\n                return null;\n            }\n            var ctx = el.getContext(\"2d\");\n            if (!ctx) {\n                return null;\n            }\n            switch (methodName) {\n              case \"getImageData\":\n                return typeof ctx.getImageData !== \"undefined\";\n\n              case \"setLineDash\":\n                return typeof ctx.setLineDash !== \"undefined\";\n\n              case \"toDataURL\":\n                return typeof el.toDataURL !== \"undefined\";\n\n              case \"toDataURLWithQuality\":\n                try {\n                    el.toDataURL(\"image/jpeg\", 0);\n                    return true;\n                } catch (e) {}\n                return false;\n\n              default:\n                return null;\n            }\n        }\n    });\n    fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n    if (fabric.isLikelyNode) {\n        fabric.StaticCanvas.prototype.createPNGStream = function() {\n            var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n            return impl && impl.createPNGStream();\n        };\n        fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n            var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n            return impl && impl.createJPEGStream(opts);\n        };\n    }\n})();\n\nfabric.BaseBrush = fabric.util.createClass({\n    color: \"rgb(0, 0, 0)\",\n    width: 1,\n    shadow: null,\n    strokeLineCap: \"round\",\n    strokeLineJoin: \"round\",\n    strokeMiterLimit: 10,\n    strokeDashArray: null,\n    setShadow: function(options) {\n        this.shadow = new fabric.Shadow(options);\n        return this;\n    },\n    _setBrushStyles: function() {\n        var ctx = this.canvas.contextTop;\n        ctx.strokeStyle = this.color;\n        ctx.lineWidth = this.width;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.lineJoin = this.strokeLineJoin;\n        if (this.strokeDashArray && fabric.StaticCanvas.supports(\"setLineDash\")) {\n            ctx.setLineDash(this.strokeDashArray);\n        }\n    },\n    _saveAndTransform: function(ctx) {\n        var v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    },\n    _setShadow: function() {\n        if (!this.shadow) {\n            return;\n        }\n        var ctx = this.canvas.contextTop, zoom = this.canvas.getZoom();\n        ctx.shadowColor = this.shadow.color;\n        ctx.shadowBlur = this.shadow.blur * zoom;\n        ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n        ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n    },\n    _resetShadow: function() {\n        var ctx = this.canvas.contextTop;\n        ctx.shadowColor = \"\";\n        ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    }\n});\n\n(function() {\n    fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, {\n        initialize: function(canvas) {\n            this.canvas = canvas;\n            this._points = [];\n        },\n        _drawSegment: function(ctx, p1, p2) {\n            var midPoint = p1.midPointFrom(p2);\n            ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n            return midPoint;\n        },\n        onMouseDown: function(pointer) {\n            this._prepareForDrawing(pointer);\n            this._captureDrawingPath(pointer);\n            this._render();\n        },\n        onMouseMove: function(pointer) {\n            if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n                var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n                this._saveAndTransform(ctx);\n                if (this.oldEnd) {\n                    ctx.beginPath();\n                    ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n                }\n                this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n                ctx.stroke();\n                ctx.restore();\n            }\n        },\n        onMouseUp: function() {\n            this.oldEnd = undefined;\n            this._finalizeAndAddPath();\n        },\n        _prepareForDrawing: function(pointer) {\n            var p = new fabric.Point(pointer.x, pointer.y);\n            this._reset();\n            this._addPoint(p);\n            this.canvas.contextTop.moveTo(p.x, p.y);\n        },\n        _addPoint: function(point) {\n            if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n                return false;\n            }\n            this._points.push(point);\n            return true;\n        },\n        _reset: function() {\n            this._points.length = 0;\n            this._setBrushStyles();\n            this._setShadow();\n        },\n        _captureDrawingPath: function(pointer) {\n            var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n            return this._addPoint(pointerPoint);\n        },\n        _render: function() {\n            var ctx = this.canvas.contextTop, i, len, p1 = this._points[0], p2 = this._points[1];\n            this._saveAndTransform(ctx);\n            ctx.beginPath();\n            if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n                var width = this.width / 1e3;\n                p1 = new fabric.Point(p1.x, p1.y);\n                p2 = new fabric.Point(p2.x, p2.y);\n                p1.x -= width;\n                p2.x += width;\n            }\n            ctx.moveTo(p1.x, p1.y);\n            for (i = 1, len = this._points.length; i < len; i++) {\n                this._drawSegment(ctx, p1, p2);\n                p1 = this._points[i];\n                p2 = this._points[i + 1];\n            }\n            ctx.lineTo(p1.x, p1.y);\n            ctx.stroke();\n            ctx.restore();\n        },\n        convertPointsToSVGPath: function(points) {\n            var path = [], i, width = this.width / 1e3, p1 = new fabric.Point(points[0].x, points[0].y), p2 = new fabric.Point(points[1].x, points[1].y), len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n            if (manyPoints) {\n                multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n                multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n            }\n            path.push(\"M \", p1.x - multSignX * width, \" \", p1.y - multSignY * width, \" \");\n            for (i = 1; i < len; i++) {\n                if (!p1.eq(p2)) {\n                    var midPoint = p1.midPointFrom(p2);\n                    path.push(\"Q \", p1.x, \" \", p1.y, \" \", midPoint.x, \" \", midPoint.y, \" \");\n                }\n                p1 = points[i];\n                if (i + 1 < points.length) {\n                    p2 = points[i + 1];\n                }\n            }\n            if (manyPoints) {\n                multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n                multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n            }\n            path.push(\"L \", p1.x + multSignX * width, \" \", p1.y + multSignY * width);\n            return path;\n        },\n        createPath: function(pathData) {\n            var path = new fabric.Path(pathData, {\n                fill: null,\n                stroke: this.color,\n                strokeWidth: this.width,\n                strokeLineCap: this.strokeLineCap,\n                strokeMiterLimit: this.strokeMiterLimit,\n                strokeLineJoin: this.strokeLineJoin,\n                strokeDashArray: this.strokeDashArray\n            });\n            var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n            position = path.translateToGivenOrigin(position, \"center\", \"center\", path.originX, path.originY);\n            path.top = position.y;\n            path.left = position.x;\n            if (this.shadow) {\n                this.shadow.affectStroke = true;\n                path.setShadow(this.shadow);\n            }\n            return path;\n        },\n        _finalizeAndAddPath: function() {\n            var ctx = this.canvas.contextTop;\n            ctx.closePath();\n            var pathData = this.convertPointsToSVGPath(this._points).join(\"\");\n            if (pathData === \"M 0 0 Q 0 0 0 0 L 0 0\") {\n                this.canvas.requestRenderAll();\n                return;\n            }\n            var path = this.createPath(pathData);\n            this.canvas.clearContext(this.canvas.contextTop);\n            this.canvas.add(path);\n            this.canvas.renderAll();\n            path.setCoords();\n            this._resetShadow();\n            this.canvas.fire(\"path:created\", {\n                path: path\n            });\n        }\n    });\n})();\n\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, {\n    width: 10,\n    initialize: function(canvas) {\n        this.canvas = canvas;\n        this.points = [];\n    },\n    drawDot: function(pointer) {\n        var point = this.addPoint(pointer), ctx = this.canvas.contextTop;\n        this._saveAndTransform(ctx);\n        ctx.fillStyle = point.fill;\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n        ctx.closePath();\n        ctx.fill();\n        ctx.restore();\n    },\n    onMouseDown: function(pointer) {\n        this.points.length = 0;\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._setShadow();\n        this.drawDot(pointer);\n    },\n    _render: function() {\n        var ctx = this.canvas.contextTop, i, len, points = this.points, point;\n        this._saveAndTransform(ctx);\n        for (i = 0, len = points.length; i < len; i++) {\n            point = points[i];\n            ctx.fillStyle = point.fill;\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.restore();\n    },\n    onMouseMove: function(pointer) {\n        this.drawDot(pointer);\n    },\n    onMouseUp: function() {\n        var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n        this.canvas.renderOnAddRemove = false;\n        var circles = [];\n        for (i = 0, len = this.points.length; i < len; i++) {\n            var point = this.points[i], circle = new fabric.Circle({\n                radius: point.radius,\n                left: point.x,\n                top: point.y,\n                originX: \"center\",\n                originY: \"center\",\n                fill: point.fill\n            });\n            this.shadow && circle.setShadow(this.shadow);\n            circles.push(circle);\n        }\n        var group = new fabric.Group(circles, {\n            originX: \"center\",\n            originY: \"center\"\n        });\n        group.canvas = this.canvas;\n        this.canvas.add(group);\n        this.canvas.fire(\"path:created\", {\n            path: group\n        });\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._resetShadow();\n        this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n        this.canvas.requestRenderAll();\n    },\n    addPoint: function(pointer) {\n        var pointerPoint = new fabric.Point(pointer.x, pointer.y), circleRadius = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2, circleColor = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba();\n        pointerPoint.radius = circleRadius;\n        pointerPoint.fill = circleColor;\n        this.points.push(pointerPoint);\n        return pointerPoint;\n    }\n});\n\nfabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush, {\n    width: 10,\n    density: 20,\n    dotWidth: 1,\n    dotWidthVariance: 1,\n    randomOpacity: false,\n    optimizeOverlapping: true,\n    initialize: function(canvas) {\n        this.canvas = canvas;\n        this.sprayChunks = [];\n    },\n    onMouseDown: function(pointer) {\n        this.sprayChunks.length = 0;\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._setShadow();\n        this.addSprayChunk(pointer);\n        this.render(this.sprayChunkPoints);\n    },\n    onMouseMove: function(pointer) {\n        this.addSprayChunk(pointer);\n        this.render(this.sprayChunkPoints);\n    },\n    onMouseUp: function() {\n        var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n        this.canvas.renderOnAddRemove = false;\n        var rects = [];\n        for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n            var sprayChunk = this.sprayChunks[i];\n            for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n                var rect = new fabric.Rect({\n                    width: sprayChunk[j].width,\n                    height: sprayChunk[j].width,\n                    left: sprayChunk[j].x + 1,\n                    top: sprayChunk[j].y + 1,\n                    originX: \"center\",\n                    originY: \"center\",\n                    fill: this.color\n                });\n                rects.push(rect);\n            }\n        }\n        if (this.optimizeOverlapping) {\n            rects = this._getOptimizedRects(rects);\n        }\n        var group = new fabric.Group(rects, {\n            originX: \"center\",\n            originY: \"center\"\n        });\n        this.shadow && group.setShadow(this.shadow);\n        this.canvas.add(group);\n        this.canvas.fire(\"path:created\", {\n            path: group\n        });\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._resetShadow();\n        this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n        this.canvas.requestRenderAll();\n    },\n    _getOptimizedRects: function(rects) {\n        var uniqueRects = {}, key, i, len;\n        for (i = 0, len = rects.length; i < len; i++) {\n            key = rects[i].left + \"\" + rects[i].top;\n            if (!uniqueRects[key]) {\n                uniqueRects[key] = rects[i];\n            }\n        }\n        var uniqueRectsArray = [];\n        for (key in uniqueRects) {\n            uniqueRectsArray.push(uniqueRects[key]);\n        }\n        return uniqueRectsArray;\n    },\n    render: function(sprayChunk) {\n        var ctx = this.canvas.contextTop, i, len;\n        ctx.fillStyle = this.color;\n        this._saveAndTransform(ctx);\n        for (i = 0, len = sprayChunk.length; i < len; i++) {\n            var point = sprayChunk[i];\n            if (typeof point.opacity !== \"undefined\") {\n                ctx.globalAlpha = point.opacity;\n            }\n            ctx.fillRect(point.x, point.y, point.width, point.width);\n        }\n        ctx.restore();\n    },\n    _render: function() {\n        var ctx = this.canvas.contextTop, i, ilen;\n        ctx.fillStyle = this.color;\n        this._saveAndTransform(ctx);\n        for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n            this.render(this.sprayChunks[i]);\n        }\n        ctx.restore();\n    },\n    addSprayChunk: function(pointer) {\n        this.sprayChunkPoints = [];\n        var x, y, width, radius = this.width / 2, i;\n        for (i = 0; i < this.density; i++) {\n            x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n            y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n            if (this.dotWidthVariance) {\n                width = fabric.util.getRandomInt(Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance);\n            } else {\n                width = this.dotWidth;\n            }\n            var point = new fabric.Point(x, y);\n            point.width = width;\n            if (this.randomOpacity) {\n                point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n            }\n            this.sprayChunkPoints.push(point);\n        }\n        this.sprayChunks.push(this.sprayChunkPoints);\n    }\n});\n\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, {\n    getPatternSrc: function() {\n        var dotWidth = 20, dotDistance = 5, patternCanvas = fabric.document.createElement(\"canvas\"), patternCtx = patternCanvas.getContext(\"2d\");\n        patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n        patternCtx.fillStyle = this.color;\n        patternCtx.beginPath();\n        patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n        patternCtx.closePath();\n        patternCtx.fill();\n        return patternCanvas;\n    },\n    getPatternSrcFunction: function() {\n        return String(this.getPatternSrc).replace(\"this.color\", '\"' + this.color + '\"');\n    },\n    getPattern: function() {\n        return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), \"repeat\");\n    },\n    _setBrushStyles: function() {\n        this.callSuper(\"_setBrushStyles\");\n        this.canvas.contextTop.strokeStyle = this.getPattern();\n    },\n    createPath: function(pathData) {\n        var path = this.callSuper(\"createPath\", pathData), topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n        path.stroke = new fabric.Pattern({\n            source: this.source || this.getPatternSrcFunction(),\n            offsetX: -topLeft.x,\n            offsetY: -topLeft.y\n        });\n        return path;\n    }\n});\n\n(function() {\n    var getPointer = fabric.util.getPointer, degreesToRadians = fabric.util.degreesToRadians, radiansToDegrees = fabric.util.radiansToDegrees, atan2 = Math.atan2, abs = Math.abs, supportLineDash = fabric.StaticCanvas.supports(\"setLineDash\"), STROKE_OFFSET = .5;\n    fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, {\n        initialize: function(el, options) {\n            options || (options = {});\n            this.renderAndResetBound = this.renderAndReset.bind(this);\n            this._initStatic(el, options);\n            this._initInteractive();\n            this._createCacheCanvas();\n        },\n        uniScaleTransform: false,\n        uniScaleKey: \"shiftKey\",\n        centeredScaling: false,\n        centeredRotation: false,\n        centeredKey: \"altKey\",\n        altActionKey: \"shiftKey\",\n        interactive: true,\n        selection: true,\n        selectionKey: \"shiftKey\",\n        altSelectionKey: null,\n        selectionColor: \"rgba(100, 100, 255, 0.3)\",\n        selectionDashArray: [],\n        selectionBorderColor: \"rgba(255, 255, 255, 0.3)\",\n        selectionLineWidth: 1,\n        selectionFullyContained: false,\n        hoverCursor: \"move\",\n        moveCursor: \"move\",\n        defaultCursor: \"default\",\n        freeDrawingCursor: \"crosshair\",\n        rotationCursor: \"crosshair\",\n        notAllowedCursor: \"not-allowed\",\n        containerClass: \"canvas-container\",\n        perPixelTargetFind: false,\n        targetFindTolerance: 0,\n        skipTargetFind: false,\n        isDrawingMode: false,\n        preserveObjectStacking: false,\n        snapAngle: 0,\n        snapThreshold: null,\n        stopContextMenu: false,\n        fireRightClick: false,\n        fireMiddleClick: false,\n        _initInteractive: function() {\n            this._currentTransform = null;\n            this._groupSelector = null;\n            this._initWrapperElement();\n            this._createUpperCanvas();\n            this._initEventListeners();\n            this._initRetinaScaling();\n            this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n            this.calcOffset();\n        },\n        _chooseObjectsToRender: function() {\n            var activeObjects = this.getActiveObjects(), object, objsToRender, activeGroupObjects;\n            if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n                objsToRender = [];\n                activeGroupObjects = [];\n                for (var i = 0, length = this._objects.length; i < length; i++) {\n                    object = this._objects[i];\n                    if (activeObjects.indexOf(object) === -1) {\n                        objsToRender.push(object);\n                    } else {\n                        activeGroupObjects.push(object);\n                    }\n                }\n                if (activeObjects.length > 1) {\n                    this._activeObject._objects = activeGroupObjects;\n                }\n                objsToRender.push.apply(objsToRender, activeGroupObjects);\n            } else {\n                objsToRender = this._objects;\n            }\n            return objsToRender;\n        },\n        renderAll: function() {\n            if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n                this.clearContext(this.contextTop);\n                this.contextTopDirty = false;\n            }\n            this.renderTopLayer(this.contextTop);\n            var canvasToDrawOn = this.contextContainer;\n            this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n            return this;\n        },\n        renderTopLayer: function(ctx) {\n            if (this.isDrawingMode && this._isCurrentlyDrawing) {\n                this.freeDrawingBrush && this.freeDrawingBrush._render();\n            }\n            if (this.selection && this._groupSelector) {\n                this._drawSelection(ctx);\n            }\n        },\n        renderTop: function() {\n            var ctx = this.contextTop;\n            this.clearContext(ctx);\n            this.renderTopLayer(ctx);\n            this.fire(\"after:render\");\n            this.contextTopDirty = true;\n            return this;\n        },\n        _resetCurrentTransform: function() {\n            var t = this._currentTransform;\n            t.target.set({\n                scaleX: t.original.scaleX,\n                scaleY: t.original.scaleY,\n                skewX: t.original.skewX,\n                skewY: t.original.skewY,\n                left: t.original.left,\n                top: t.original.top\n            });\n            if (this._shouldCenterTransform(t.target)) {\n                if (t.originX !== \"center\") {\n                    if (t.originX === \"right\") {\n                        t.mouseXSign = -1;\n                    } else {\n                        t.mouseXSign = 1;\n                    }\n                }\n                if (t.originY !== \"center\") {\n                    if (t.originY === \"bottom\") {\n                        t.mouseYSign = -1;\n                    } else {\n                        t.mouseYSign = 1;\n                    }\n                }\n                t.originX = \"center\";\n                t.originY = \"center\";\n            } else {\n                t.originX = t.original.originX;\n                t.originY = t.original.originY;\n            }\n        },\n        containsPoint: function(e, target, point) {\n            var ignoreZoom = true, pointer = point || this.getPointer(e, ignoreZoom), xy;\n            if (target.group && target.group === this._activeObject && target.group.type === \"activeSelection\") {\n                xy = this._normalizePointer(target.group, pointer);\n            } else {\n                xy = {\n                    x: pointer.x,\n                    y: pointer.y\n                };\n            }\n            return target.containsPoint(xy) || target._findTargetCorner(pointer);\n        },\n        _normalizePointer: function(object, pointer) {\n            var m = object.calcTransformMatrix(), invertedM = fabric.util.invertTransform(m), vptPointer = this.restorePointerVpt(pointer);\n            return fabric.util.transformPoint(vptPointer, invertedM);\n        },\n        isTargetTransparent: function(target, x, y) {\n            var ctx = this.contextCache, originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n            target.selectionBackgroundColor = \"\";\n            this.clearContext(ctx);\n            ctx.save();\n            ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n            target.render(ctx);\n            ctx.restore();\n            target === this._activeObject && target._renderControls(ctx, {\n                hasBorders: false,\n                transparentCorners: false\n            }, {\n                hasBorders: false\n            });\n            target.selectionBackgroundColor = originalColor;\n            var isTransparent = fabric.util.isTransparent(ctx, x, y, this.targetFindTolerance);\n            return isTransparent;\n        },\n        _isSelectionKeyPressed: function(e) {\n            var selectionKeyPressed = false;\n            if (Object.prototype.toString.call(this.selectionKey) === \"[object Array]\") {\n                selectionKeyPressed = !!this.selectionKey.find(function(key) {\n                    return e[key] === true;\n                });\n            } else {\n                selectionKeyPressed = e[this.selectionKey];\n            }\n            return selectionKeyPressed;\n        },\n        _shouldClearSelection: function(e, target) {\n            var activeObjects = this.getActiveObjects(), activeObject = this._activeObject;\n            return !target || target && activeObject && activeObjects.length > 1 && activeObjects.indexOf(target) === -1 && activeObject !== target && !this._isSelectionKeyPressed(e) || target && !target.evented || target && !target.selectable && activeObject && activeObject !== target;\n        },\n        _shouldCenterTransform: function(target) {\n            if (!target) {\n                return;\n            }\n            var t = this._currentTransform, centerTransform;\n            if (t.action === \"scale\" || t.action === \"scaleX\" || t.action === \"scaleY\") {\n                centerTransform = this.centeredScaling || target.centeredScaling;\n            } else if (t.action === \"rotate\") {\n                centerTransform = this.centeredRotation || target.centeredRotation;\n            }\n            return centerTransform ? !t.altKey : t.altKey;\n        },\n        _getOriginFromCorner: function(target, corner) {\n            var origin = {\n                x: target.originX,\n                y: target.originY\n            };\n            if (corner === \"ml\" || corner === \"tl\" || corner === \"bl\") {\n                origin.x = \"right\";\n            } else if (corner === \"mr\" || corner === \"tr\" || corner === \"br\") {\n                origin.x = \"left\";\n            }\n            if (corner === \"tl\" || corner === \"mt\" || corner === \"tr\") {\n                origin.y = \"bottom\";\n            } else if (corner === \"bl\" || corner === \"mb\" || corner === \"br\") {\n                origin.y = \"top\";\n            }\n            return origin;\n        },\n        _getActionFromCorner: function(target, corner, e) {\n            if (!corner) {\n                return \"drag\";\n            }\n            switch (corner) {\n              case \"mtr\":\n                return \"rotate\";\n\n              case \"ml\":\n              case \"mr\":\n                return e[this.altActionKey] ? \"skewY\" : \"scaleX\";\n\n              case \"mt\":\n              case \"mb\":\n                return e[this.altActionKey] ? \"skewX\" : \"scaleY\";\n\n              default:\n                return \"scale\";\n            }\n        },\n        _setupCurrentTransform: function(e, target) {\n            if (!target) {\n                return;\n            }\n            var pointer = this.getPointer(e), corner = target._findTargetCorner(this.getPointer(e, true)), action = this._getActionFromCorner(target, corner, e), origin = this._getOriginFromCorner(target, corner);\n            this._currentTransform = {\n                target: target,\n                action: action,\n                corner: corner,\n                scaleX: target.scaleX,\n                scaleY: target.scaleY,\n                skewX: target.skewX,\n                skewY: target.skewY,\n                offsetX: pointer.x - target.left,\n                offsetY: pointer.y - target.top,\n                originX: origin.x,\n                originY: origin.y,\n                ex: pointer.x,\n                ey: pointer.y,\n                lastX: pointer.x,\n                lastY: pointer.y,\n                theta: degreesToRadians(target.angle),\n                width: target.width * target.scaleX,\n                mouseXSign: 1,\n                mouseYSign: 1,\n                shiftKey: e.shiftKey,\n                altKey: e[this.centeredKey]\n            };\n            this._currentTransform.original = {\n                left: target.left,\n                top: target.top,\n                scaleX: target.scaleX,\n                scaleY: target.scaleY,\n                skewX: target.skewX,\n                skewY: target.skewY,\n                originX: origin.x,\n                originY: origin.y\n            };\n            this._resetCurrentTransform();\n        },\n        _translateObject: function(x, y) {\n            var transform = this._currentTransform, target = transform.target, newLeft = x - transform.offsetX, newTop = y - transform.offsetY, moveX = !target.get(\"lockMovementX\") && target.left !== newLeft, moveY = !target.get(\"lockMovementY\") && target.top !== newTop;\n            moveX && target.set(\"left\", newLeft);\n            moveY && target.set(\"top\", newTop);\n            return moveX || moveY;\n        },\n        _changeSkewTransformOrigin: function(mouseMove, t, by) {\n            var property = \"originX\", origins = {\n                0: \"center\"\n            }, skew = t.target.skewX, originA = \"left\", originB = \"right\", corner = t.corner === \"mt\" || t.corner === \"ml\" ? 1 : -1, flipSign = 1;\n            mouseMove = mouseMove > 0 ? 1 : -1;\n            if (by === \"y\") {\n                skew = t.target.skewY;\n                originA = \"top\";\n                originB = \"bottom\";\n                property = \"originY\";\n            }\n            origins[-1] = originA;\n            origins[1] = originB;\n            t.target.flipX && (flipSign *= -1);\n            t.target.flipY && (flipSign *= -1);\n            if (skew === 0) {\n                t.skewSign = -corner * mouseMove * flipSign;\n                t[property] = origins[-mouseMove];\n            } else {\n                skew = skew > 0 ? 1 : -1;\n                t.skewSign = skew;\n                t[property] = origins[skew * corner * flipSign];\n            }\n        },\n        _skewObject: function(x, y, by) {\n            var t = this._currentTransform, target = t.target, skewed = false, lockSkewingX = target.get(\"lockSkewingX\"), lockSkewingY = target.get(\"lockSkewingY\");\n            if (lockSkewingX && by === \"x\" || lockSkewingY && by === \"y\") {\n                return false;\n            }\n            var center = target.getCenterPoint(), actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), \"center\", \"center\")[by], lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), \"center\", \"center\")[by], actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n            this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n            actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n            constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n            skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n            t.lastX = x;\n            t.lastY = y;\n            target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n            return skewed;\n        },\n        _setObjectSkew: function(localMouse, transform, by, _dim) {\n            var target = transform.target, newValue, skewed = false, skewSign = transform.skewSign, newDim, dimNoSkew, otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n            if (by === \"x\") {\n                otherBy = \"y\";\n                _otherBy = \"Y\";\n                _by = \"X\";\n                skewX = 0;\n                skewY = target.skewY;\n            } else {\n                otherBy = \"x\";\n                _otherBy = \"X\";\n                _by = \"Y\";\n                skewX = target.skewX;\n                skewY = 0;\n            }\n            dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n            newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n            if (newDimMouse <= 2) {\n                newValue = 0;\n            } else {\n                newValue = skewSign * Math.atan(newDimMouse / target[\"scale\" + _by] / (dimNoSkew[otherBy] / target[\"scale\" + _otherBy]));\n                newValue = fabric.util.radiansToDegrees(newValue);\n            }\n            skewed = target[\"skew\" + _by] !== newValue;\n            target.set(\"skew\" + _by, newValue);\n            if (target[\"skew\" + _otherBy] !== 0) {\n                newDim = target._getTransformedDimensions();\n                newValue = _dim[otherBy] / newDim[otherBy] * target[\"scale\" + _otherBy];\n                target.set(\"scale\" + _otherBy, newValue);\n            }\n            return skewed;\n        },\n        _scaleObject: function(x, y, by) {\n            var t = this._currentTransform, target = t.target, lockScalingX = target.lockScalingX, lockScalingY = target.lockScalingY, lockScalingFlip = target.lockScalingFlip;\n            if (lockScalingX && lockScalingY) {\n                return false;\n            }\n            var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY), localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY), dim = target._getTransformedDimensions(), scaled = false;\n            this._setLocalMouse(localMouse, t);\n            scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n            target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n            return scaled;\n        },\n        _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n            var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false, changeX, changeY, scaleX, scaleY;\n            scaleX = localMouse.x * target.scaleX / _dim.x;\n            scaleY = localMouse.y * target.scaleY / _dim.y;\n            changeX = target.scaleX !== scaleX;\n            changeY = target.scaleY !== scaleY;\n            if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n                forbidScalingX = true;\n                localMouse.x = 0;\n            }\n            if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n                forbidScalingY = true;\n                localMouse.y = 0;\n            }\n            if (by === \"equally\" && !lockScalingX && !lockScalingY) {\n                scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n            } else if (!by) {\n                forbidScalingX || lockScalingX || target.set(\"scaleX\", scaleX) && (scaled = scaled || changeX);\n                forbidScalingY || lockScalingY || target.set(\"scaleY\", scaleY) && (scaled = scaled || changeY);\n            } else if (by === \"x\" && !target.get(\"lockUniScaling\")) {\n                forbidScalingX || lockScalingX || target.set(\"scaleX\", scaleX) && (scaled = scaled || changeX);\n            } else if (by === \"y\" && !target.get(\"lockUniScaling\")) {\n                forbidScalingY || lockScalingY || target.set(\"scaleY\", scaleY) && (scaled = scaled || changeY);\n            }\n            transform.newScaleX = scaleX;\n            transform.newScaleY = scaleY;\n            forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n            return scaled;\n        },\n        _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n            var dist = localMouse.y + localMouse.x, lastDist = _dim.y * transform.original.scaleY / target.scaleY + _dim.x * transform.original.scaleX / target.scaleX, scaled, signX = localMouse.x < 0 ? -1 : 1, signY = localMouse.y < 0 ? -1 : 1;\n            transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n            transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n            scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n            target.set(\"scaleX\", transform.newScaleX);\n            target.set(\"scaleY\", transform.newScaleY);\n            return scaled;\n        },\n        _flipObject: function(transform, by) {\n            if (transform.newScaleX < 0 && by !== \"y\") {\n                if (transform.originX === \"left\") {\n                    transform.originX = \"right\";\n                } else if (transform.originX === \"right\") {\n                    transform.originX = \"left\";\n                }\n            }\n            if (transform.newScaleY < 0 && by !== \"x\") {\n                if (transform.originY === \"top\") {\n                    transform.originY = \"bottom\";\n                } else if (transform.originY === \"bottom\") {\n                    transform.originY = \"top\";\n                }\n            }\n        },\n        _setLocalMouse: function(localMouse, t) {\n            var target = t.target, zoom = this.getZoom(), padding = target.padding / zoom;\n            if (t.originX === \"right\") {\n                localMouse.x *= -1;\n            } else if (t.originX === \"center\") {\n                localMouse.x *= t.mouseXSign * 2;\n                if (localMouse.x < 0) {\n                    t.mouseXSign = -t.mouseXSign;\n                }\n            }\n            if (t.originY === \"bottom\") {\n                localMouse.y *= -1;\n            } else if (t.originY === \"center\") {\n                localMouse.y *= t.mouseYSign * 2;\n                if (localMouse.y < 0) {\n                    t.mouseYSign = -t.mouseYSign;\n                }\n            }\n            if (abs(localMouse.x) > padding) {\n                if (localMouse.x < 0) {\n                    localMouse.x += padding;\n                } else {\n                    localMouse.x -= padding;\n                }\n            } else {\n                localMouse.x = 0;\n            }\n            if (abs(localMouse.y) > padding) {\n                if (localMouse.y < 0) {\n                    localMouse.y += padding;\n                } else {\n                    localMouse.y -= padding;\n                }\n            } else {\n                localMouse.y = 0;\n            }\n        },\n        _rotateObject: function(x, y) {\n            var t = this._currentTransform, target = t.target, constraintPosition, constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n            if (target.lockRotation) {\n                return false;\n            }\n            var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x), curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x), angle = radiansToDegrees(curAngle - lastAngle + t.theta), hasRotated = true;\n            if (target.snapAngle > 0) {\n                var snapAngle = target.snapAngle, snapThreshold = target.snapThreshold || snapAngle, rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle, leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n                if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n                    angle = leftAngleLocked;\n                } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n                    angle = rightAngleLocked;\n                }\n            }\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            angle %= 360;\n            if (target.angle === angle) {\n                hasRotated = false;\n            } else {\n                target.angle = angle;\n                target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n            }\n            return hasRotated;\n        },\n        setCursor: function(value) {\n            this.upperCanvasEl.style.cursor = value;\n        },\n        _resetObjectTransform: function(target) {\n            target.scaleX = 1;\n            target.scaleY = 1;\n            target.skewX = 0;\n            target.skewY = 0;\n            target.rotate(0);\n        },\n        _drawSelection: function(ctx) {\n            var groupSelector = this._groupSelector, left = groupSelector.left, top = groupSelector.top, aleft = abs(left), atop = abs(top);\n            if (this.selectionColor) {\n                ctx.fillStyle = this.selectionColor;\n                ctx.fillRect(groupSelector.ex - (left > 0 ? 0 : -left), groupSelector.ey - (top > 0 ? 0 : -top), aleft, atop);\n            }\n            if (!this.selectionLineWidth || !this.selectionBorderColor) {\n                return;\n            }\n            ctx.lineWidth = this.selectionLineWidth;\n            ctx.strokeStyle = this.selectionBorderColor;\n            if (this.selectionDashArray.length > 1 && !supportLineDash) {\n                var px = groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft), py = groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop);\n                ctx.beginPath();\n                fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n                fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n                fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n                fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n                ctx.closePath();\n                ctx.stroke();\n            } else {\n                fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n                ctx.strokeRect(groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft), groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop), aleft, atop);\n            }\n        },\n        findTarget: function(e, skipGroup) {\n            if (this.skipTargetFind) {\n                return;\n            }\n            var ignoreZoom = true, pointer = this.getPointer(e, ignoreZoom), activeObject = this._activeObject, aObjects = this.getActiveObjects(), activeTarget, activeTargetSubs;\n            this.targets = [];\n            if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([ activeObject ], pointer)) {\n                return activeObject;\n            }\n            if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n                return activeObject;\n            }\n            if (aObjects.length === 1 && activeObject === this._searchPossibleTargets([ activeObject ], pointer)) {\n                if (!this.preserveObjectStacking) {\n                    return activeObject;\n                } else {\n                    activeTarget = activeObject;\n                    activeTargetSubs = this.targets;\n                    this.targets = [];\n                }\n            }\n            var target = this._searchPossibleTargets(this._objects, pointer);\n            if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n                target = activeTarget;\n                this.targets = activeTargetSubs;\n            }\n            return target;\n        },\n        _checkTarget: function(pointer, obj) {\n            if (obj && obj.visible && obj.evented && this.containsPoint(null, obj, pointer)) {\n                if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n                    var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n                    if (!isTransparent) {\n                        return true;\n                    }\n                } else {\n                    return true;\n                }\n            }\n        },\n        _searchPossibleTargets: function(objects, pointer) {\n            var target, i = objects.length, normalizedPointer, subTarget;\n            while (i--) {\n                if (this._checkTarget(pointer, objects[i])) {\n                    target = objects[i];\n                    if (target.subTargetCheck && target instanceof fabric.Group) {\n                        normalizedPointer = this._normalizePointer(target, pointer);\n                        subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n                        subTarget && this.targets.push(subTarget);\n                    }\n                    break;\n                }\n            }\n            return target;\n        },\n        restorePointerVpt: function(pointer) {\n            return fabric.util.transformPoint(pointer, fabric.util.invertTransform(this.viewportTransform));\n        },\n        getPointer: function(e, ignoreZoom, upperCanvasEl) {\n            if (!upperCanvasEl) {\n                upperCanvasEl = this.upperCanvasEl;\n            }\n            var pointer = getPointer(e), bounds = upperCanvasEl.getBoundingClientRect(), boundsWidth = bounds.width || 0, boundsHeight = bounds.height || 0, cssScale;\n            if (!boundsWidth || !boundsHeight) {\n                if (\"top\" in bounds && \"bottom\" in bounds) {\n                    boundsHeight = Math.abs(bounds.top - bounds.bottom);\n                }\n                if (\"right\" in bounds && \"left\" in bounds) {\n                    boundsWidth = Math.abs(bounds.right - bounds.left);\n                }\n            }\n            this.calcOffset();\n            pointer.x = pointer.x - this._offset.left;\n            pointer.y = pointer.y - this._offset.top;\n            if (!ignoreZoom) {\n                pointer = this.restorePointerVpt(pointer);\n            }\n            if (boundsWidth === 0 || boundsHeight === 0) {\n                cssScale = {\n                    width: 1,\n                    height: 1\n                };\n            } else {\n                cssScale = {\n                    width: upperCanvasEl.width / boundsWidth,\n                    height: upperCanvasEl.height / boundsHeight\n                };\n            }\n            return {\n                x: pointer.x * cssScale.width,\n                y: pointer.y * cssScale.height\n            };\n        },\n        _createUpperCanvas: function() {\n            var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, \"\");\n            if (this.upperCanvasEl) {\n                this.upperCanvasEl.className = \"\";\n            } else {\n                this.upperCanvasEl = this._createCanvasElement();\n            }\n            fabric.util.addClass(this.upperCanvasEl, \"upper-canvas \" + lowerCanvasClass);\n            this.wrapperEl.appendChild(this.upperCanvasEl);\n            this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n            this._applyCanvasStyle(this.upperCanvasEl);\n            this.contextTop = this.upperCanvasEl.getContext(\"2d\");\n        },\n        _createCacheCanvas: function() {\n            this.cacheCanvasEl = this._createCanvasElement();\n            this.cacheCanvasEl.setAttribute(\"width\", this.width);\n            this.cacheCanvasEl.setAttribute(\"height\", this.height);\n            this.contextCache = this.cacheCanvasEl.getContext(\"2d\");\n        },\n        _initWrapperElement: function() {\n            this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, \"div\", {\n                class: this.containerClass\n            });\n            fabric.util.setStyle(this.wrapperEl, {\n                width: this.width + \"px\",\n                height: this.height + \"px\",\n                position: \"relative\"\n            });\n            fabric.util.makeElementUnselectable(this.wrapperEl);\n        },\n        _applyCanvasStyle: function(element) {\n            var width = this.width || element.width, height = this.height || element.height;\n            fabric.util.setStyle(element, {\n                position: \"absolute\",\n                width: width + \"px\",\n                height: height + \"px\",\n                left: 0,\n                top: 0,\n                \"touch-action\": \"none\"\n            });\n            element.width = width;\n            element.height = height;\n            fabric.util.makeElementUnselectable(element);\n        },\n        _copyCanvasStyle: function(fromEl, toEl) {\n            toEl.style.cssText = fromEl.style.cssText;\n        },\n        getSelectionContext: function() {\n            return this.contextTop;\n        },\n        getSelectionElement: function() {\n            return this.upperCanvasEl;\n        },\n        getActiveObject: function() {\n            return this._activeObject;\n        },\n        getActiveObjects: function() {\n            var active = this._activeObject;\n            if (active) {\n                if (active.type === \"activeSelection\" && active._objects) {\n                    return active._objects.slice(0);\n                } else {\n                    return [ active ];\n                }\n            }\n            return [];\n        },\n        _onObjectRemoved: function(obj) {\n            if (obj === this._activeObject) {\n                this.fire(\"before:selection:cleared\", {\n                    target: obj\n                });\n                this._discardActiveObject();\n                this.fire(\"selection:cleared\", {\n                    target: obj\n                });\n                obj.fire(\"deselected\");\n            }\n            if (this._hoveredTarget === obj) {\n                this._hoveredTarget = null;\n            }\n            this.callSuper(\"_onObjectRemoved\", obj);\n        },\n        _fireSelectionEvents: function(oldObjects, e) {\n            var somethingChanged = false, objects = this.getActiveObjects(), added = [], removed = [], opt = {\n                e: e\n            };\n            oldObjects.forEach(function(oldObject) {\n                if (objects.indexOf(oldObject) === -1) {\n                    somethingChanged = true;\n                    oldObject.fire(\"deselected\", opt);\n                    removed.push(oldObject);\n                }\n            });\n            objects.forEach(function(object) {\n                if (oldObjects.indexOf(object) === -1) {\n                    somethingChanged = true;\n                    object.fire(\"selected\", opt);\n                    added.push(object);\n                }\n            });\n            if (oldObjects.length > 0 && objects.length > 0) {\n                opt.selected = added;\n                opt.deselected = removed;\n                opt.updated = added[0] || removed[0];\n                opt.target = this._activeObject;\n                somethingChanged && this.fire(\"selection:updated\", opt);\n            } else if (objects.length > 0) {\n                if (objects.length === 1) {\n                    opt.target = added[0];\n                    this.fire(\"object:selected\", opt);\n                }\n                opt.selected = added;\n                opt.target = this._activeObject;\n                this.fire(\"selection:created\", opt);\n            } else if (oldObjects.length > 0) {\n                opt.deselected = removed;\n                this.fire(\"selection:cleared\", opt);\n            }\n        },\n        setActiveObject: function(object, e) {\n            var currentActives = this.getActiveObjects();\n            this._setActiveObject(object, e);\n            this._fireSelectionEvents(currentActives, e);\n            return this;\n        },\n        _setActiveObject: function(object, e) {\n            if (this._activeObject === object) {\n                return false;\n            }\n            if (!this._discardActiveObject(e, object)) {\n                return false;\n            }\n            if (object.onSelect({\n                e: e\n            })) {\n                return false;\n            }\n            this._activeObject = object;\n            return true;\n        },\n        _discardActiveObject: function(e, object) {\n            var obj = this._activeObject;\n            if (obj) {\n                if (obj.onDeselect({\n                    e: e,\n                    object: object\n                })) {\n                    return false;\n                }\n                this._activeObject = null;\n            }\n            return true;\n        },\n        discardActiveObject: function(e) {\n            var currentActives = this.getActiveObjects();\n            if (currentActives.length) {\n                this.fire(\"before:selection:cleared\", {\n                    target: currentActives[0],\n                    e: e\n                });\n            }\n            this._discardActiveObject(e);\n            this._fireSelectionEvents(currentActives, e);\n            return this;\n        },\n        dispose: function() {\n            var wrapper = this.wrapperEl;\n            this.removeListeners();\n            wrapper.removeChild(this.upperCanvasEl);\n            wrapper.removeChild(this.lowerCanvasEl);\n            this.upperCanvasEl = null;\n            this.cacheCanvasEl = null;\n            this.contextCache = null;\n            this.contextTop = null;\n            if (wrapper.parentNode) {\n                wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n            }\n            delete this.wrapperEl;\n            fabric.StaticCanvas.prototype.dispose.call(this);\n            return this;\n        },\n        clear: function() {\n            this.discardActiveObject();\n            this.clearContext(this.contextTop);\n            return this.callSuper(\"clear\");\n        },\n        drawControls: function(ctx) {\n            var activeObject = this._activeObject;\n            if (activeObject) {\n                activeObject._renderControls(ctx);\n            }\n        },\n        _toObject: function(instance, methodName, propertiesToInclude) {\n            var originalProperties = this._realizeGroupTransformOnObject(instance), object = this.callSuper(\"_toObject\", instance, methodName, propertiesToInclude);\n            this._unwindGroupTransformOnObject(instance, originalProperties);\n            return object;\n        },\n        _realizeGroupTransformOnObject: function(instance) {\n            if (instance.group && instance.group.type === \"activeSelection\" && this._activeObject === instance.group) {\n                var layoutProps = [ \"angle\", \"flipX\", \"flipY\", \"left\", \"scaleX\", \"scaleY\", \"skewX\", \"skewY\", \"top\" ];\n                var originalValues = {};\n                layoutProps.forEach(function(prop) {\n                    originalValues[prop] = instance[prop];\n                });\n                this._activeObject.realizeTransform(instance);\n                return originalValues;\n            } else {\n                return null;\n            }\n        },\n        _unwindGroupTransformOnObject: function(instance, originalValues) {\n            if (originalValues) {\n                instance.set(originalValues);\n            }\n        },\n        _setSVGObject: function(markup, instance, reviver) {\n            var originalProperties = this._realizeGroupTransformOnObject(instance);\n            this.callSuper(\"_setSVGObject\", markup, instance, reviver);\n            this._unwindGroupTransformOnObject(instance, originalProperties);\n        }\n    });\n    for (var prop in fabric.StaticCanvas) {\n        if (prop !== \"prototype\") {\n            fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n        }\n    }\n    if (fabric.isTouchSupported) {\n        fabric.Canvas.prototype._setCursorFromEvent = function() {};\n    }\n})();\n\n(function() {\n    var cursorOffset = {\n        mt: 0,\n        tr: 1,\n        mr: 2,\n        br: 3,\n        mb: 4,\n        bl: 5,\n        ml: 6,\n        tl: 7\n    }, addListener = fabric.util.addListener, removeListener = fabric.util.removeListener, RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1, addEventOptions = {\n        passive: false\n    };\n    function checkClick(e, value) {\n        return \"which\" in e ? e.which === value : e.button === value - 1;\n    }\n    fabric.util.object.extend(fabric.Canvas.prototype, {\n        cursorMap: [ \"n-resize\", \"ne-resize\", \"e-resize\", \"se-resize\", \"s-resize\", \"sw-resize\", \"w-resize\", \"nw-resize\" ],\n        _initEventListeners: function() {\n            this.removeListeners();\n            this._bindEvents();\n            addListener(fabric.window, \"resize\", this._onResize);\n            addListener(this.upperCanvasEl, \"mousedown\", this._onMouseDown);\n            addListener(this.upperCanvasEl, \"dblclick\", this._onDoubleClick);\n            addListener(this.upperCanvasEl, \"mousemove\", this._onMouseMove);\n            addListener(this.upperCanvasEl, \"mouseout\", this._onMouseOut);\n            addListener(this.upperCanvasEl, \"mouseenter\", this._onMouseEnter);\n            addListener(this.upperCanvasEl, \"wheel\", this._onMouseWheel);\n            addListener(this.upperCanvasEl, \"contextmenu\", this._onContextMenu);\n            addListener(this.upperCanvasEl, \"dragover\", this._onDragOver);\n            addListener(this.upperCanvasEl, \"dragenter\", this._onDragEnter);\n            addListener(this.upperCanvasEl, \"dragleave\", this._onDragLeave);\n            addListener(this.upperCanvasEl, \"drop\", this._onDrop);\n            addListener(this.upperCanvasEl, \"touchstart\", this._onMouseDown, addEventOptions);\n            addListener(this.upperCanvasEl, \"touchmove\", this._onMouseMove, addEventOptions);\n            if (typeof eventjs !== \"undefined\" && \"add\" in eventjs) {\n                eventjs.add(this.upperCanvasEl, \"gesture\", this._onGesture);\n                eventjs.add(this.upperCanvasEl, \"drag\", this._onDrag);\n                eventjs.add(this.upperCanvasEl, \"orientation\", this._onOrientationChange);\n                eventjs.add(this.upperCanvasEl, \"shake\", this._onShake);\n                eventjs.add(this.upperCanvasEl, \"longpress\", this._onLongPress);\n            }\n        },\n        _bindEvents: function() {\n            if (this.eventsBound) {\n                return;\n            }\n            this._onMouseDown = this._onMouseDown.bind(this);\n            this._onMouseMove = this._onMouseMove.bind(this);\n            this._onMouseUp = this._onMouseUp.bind(this);\n            this._onResize = this._onResize.bind(this);\n            this._onGesture = this._onGesture.bind(this);\n            this._onDrag = this._onDrag.bind(this);\n            this._onShake = this._onShake.bind(this);\n            this._onLongPress = this._onLongPress.bind(this);\n            this._onOrientationChange = this._onOrientationChange.bind(this);\n            this._onMouseWheel = this._onMouseWheel.bind(this);\n            this._onMouseOut = this._onMouseOut.bind(this);\n            this._onMouseEnter = this._onMouseEnter.bind(this);\n            this._onContextMenu = this._onContextMenu.bind(this);\n            this._onDoubleClick = this._onDoubleClick.bind(this);\n            this._onDragOver = this._onDragOver.bind(this);\n            this._onDragEnter = this._simpleEventHandler.bind(this, \"dragenter\");\n            this._onDragLeave = this._simpleEventHandler.bind(this, \"dragleave\");\n            this._onDrop = this._simpleEventHandler.bind(this, \"drop\");\n            this.eventsBound = true;\n        },\n        removeListeners: function() {\n            removeListener(fabric.window, \"resize\", this._onResize);\n            removeListener(this.upperCanvasEl, \"mousedown\", this._onMouseDown);\n            removeListener(this.upperCanvasEl, \"mousemove\", this._onMouseMove);\n            removeListener(this.upperCanvasEl, \"mouseout\", this._onMouseOut);\n            removeListener(this.upperCanvasEl, \"mouseenter\", this._onMouseEnter);\n            removeListener(this.upperCanvasEl, \"wheel\", this._onMouseWheel);\n            removeListener(this.upperCanvasEl, \"contextmenu\", this._onContextMenu);\n            removeListener(this.upperCanvasEl, \"doubleclick\", this._onDoubleClick);\n            removeListener(this.upperCanvasEl, \"touchstart\", this._onMouseDown);\n            removeListener(this.upperCanvasEl, \"touchmove\", this._onMouseMove);\n            removeListener(this.upperCanvasEl, \"dragover\", this._onDragOver);\n            removeListener(this.upperCanvasEl, \"dragenter\", this._onDragEnter);\n            removeListener(this.upperCanvasEl, \"dragleave\", this._onDragLeave);\n            removeListener(this.upperCanvasEl, \"drop\", this._onDrop);\n            if (typeof eventjs !== \"undefined\" && \"remove\" in eventjs) {\n                eventjs.remove(this.upperCanvasEl, \"gesture\", this._onGesture);\n                eventjs.remove(this.upperCanvasEl, \"drag\", this._onDrag);\n                eventjs.remove(this.upperCanvasEl, \"orientation\", this._onOrientationChange);\n                eventjs.remove(this.upperCanvasEl, \"shake\", this._onShake);\n                eventjs.remove(this.upperCanvasEl, \"longpress\", this._onLongPress);\n            }\n        },\n        _onGesture: function(e, self) {\n            this.__onTransformGesture && this.__onTransformGesture(e, self);\n        },\n        _onDrag: function(e, self) {\n            this.__onDrag && this.__onDrag(e, self);\n        },\n        _onMouseWheel: function(e) {\n            this.__onMouseWheel(e);\n        },\n        _onMouseOut: function(e) {\n            var target = this._hoveredTarget;\n            this.fire(\"mouse:out\", {\n                target: target,\n                e: e\n            });\n            this._hoveredTarget = null;\n            target && target.fire(\"mouseout\", {\n                e: e\n            });\n            if (this._iTextInstances) {\n                this._iTextInstances.forEach(function(obj) {\n                    if (obj.isEditing) {\n                        obj.hiddenTextarea.focus();\n                    }\n                });\n            }\n        },\n        _onMouseEnter: function(e) {\n            if (!this.findTarget(e)) {\n                this.fire(\"mouse:over\", {\n                    target: null,\n                    e: e\n                });\n                this._hoveredTarget = null;\n            }\n        },\n        _onOrientationChange: function(e, self) {\n            this.__onOrientationChange && this.__onOrientationChange(e, self);\n        },\n        _onShake: function(e, self) {\n            this.__onShake && this.__onShake(e, self);\n        },\n        _onLongPress: function(e, self) {\n            this.__onLongPress && this.__onLongPress(e, self);\n        },\n        _onDragOver: function(e) {\n            e.preventDefault();\n            var target = this._simpleEventHandler(\"dragover\", e);\n            this._fireEnterLeaveEvents(target, e);\n        },\n        _onContextMenu: function(e) {\n            if (this.stopContextMenu) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            return false;\n        },\n        _onDoubleClick: function(e) {\n            this._handleEvent(e, \"dblclick\");\n        },\n        _onMouseDown: function(e) {\n            this.__onMouseDown(e);\n            addListener(fabric.document, \"touchend\", this._onMouseUp, addEventOptions);\n            addListener(fabric.document, \"touchmove\", this._onMouseMove, addEventOptions);\n            removeListener(this.upperCanvasEl, \"mousemove\", this._onMouseMove);\n            removeListener(this.upperCanvasEl, \"touchmove\", this._onMouseMove, addEventOptions);\n            if (e.type === \"touchstart\") {\n                removeListener(this.upperCanvasEl, \"mousedown\", this._onMouseDown);\n            } else {\n                addListener(fabric.document, \"mouseup\", this._onMouseUp);\n                addListener(fabric.document, \"mousemove\", this._onMouseMove);\n            }\n        },\n        _onMouseUp: function(e) {\n            this.__onMouseUp(e);\n            removeListener(fabric.document, \"mouseup\", this._onMouseUp);\n            removeListener(fabric.document, \"touchend\", this._onMouseUp, addEventOptions);\n            removeListener(fabric.document, \"mousemove\", this._onMouseMove);\n            removeListener(fabric.document, \"touchmove\", this._onMouseMove, addEventOptions);\n            addListener(this.upperCanvasEl, \"mousemove\", this._onMouseMove);\n            addListener(this.upperCanvasEl, \"touchmove\", this._onMouseMove, addEventOptions);\n            if (e.type === \"touchend\") {\n                var _this = this;\n                setTimeout(function() {\n                    addListener(_this.upperCanvasEl, \"mousedown\", _this._onMouseDown);\n                }, 400);\n            }\n        },\n        _onMouseMove: function(e) {\n            !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n            this.__onMouseMove(e);\n        },\n        _onResize: function() {\n            this.calcOffset();\n        },\n        _shouldRender: function(target, pointer) {\n            var activeObject = this._activeObject;\n            if (activeObject && activeObject.isEditing && target === activeObject) {\n                return false;\n            }\n            return !!(target && (target.isMoving || target !== activeObject) || !target && !!activeObject || !target && !activeObject && !this._groupSelector || pointer && this._previousPointer && this.selection && (pointer.x !== this._previousPointer.x || pointer.y !== this._previousPointer.y));\n        },\n        __onMouseUp: function(e) {\n            var target, searchTarget = true, transform = this._currentTransform, groupSelector = this._groupSelector, isClick = !groupSelector || groupSelector.left === 0 && groupSelector.top === 0;\n            if (checkClick(e, RIGHT_CLICK)) {\n                if (this.fireRightClick) {\n                    this._handleEvent(e, \"up\", target, RIGHT_CLICK, isClick);\n                }\n                return;\n            }\n            if (checkClick(e, MIDDLE_CLICK)) {\n                if (this.fireMiddleClick) {\n                    this._handleEvent(e, \"up\", target, MIDDLE_CLICK, isClick);\n                }\n                return;\n            }\n            if (this.isDrawingMode && this._isCurrentlyDrawing) {\n                this._onMouseUpInDrawingMode(e);\n                return;\n            }\n            if (transform) {\n                this._finalizeCurrentTransform(e);\n                searchTarget = !transform.actionPerformed;\n            }\n            target = searchTarget ? this.findTarget(e, true) : transform.target;\n            var shouldRender = this._shouldRender(target, this.getPointer(e));\n            if (target || !isClick) {\n                this._maybeGroupObjects(e);\n            } else {\n                this._groupSelector = null;\n                this._currentTransform = null;\n            }\n            if (target) {\n                target.isMoving = false;\n            }\n            this._setCursorFromEvent(e, target);\n            this._handleEvent(e, \"up\", target ? target : null, LEFT_CLICK, isClick);\n            target && (target.__corner = 0);\n            shouldRender && this.requestRenderAll();\n        },\n        _simpleEventHandler: function(eventType, e) {\n            var target = this.findTarget(e), targets = this.targets, options = {\n                e: e,\n                target: target,\n                subTargets: targets\n            };\n            this.fire(eventType, options);\n            target && target.fire(eventType, options);\n            if (!targets) {\n                return target;\n            }\n            for (var i = 0; i < targets.length; i++) {\n                targets[i].fire(eventType, options);\n            }\n            return target;\n        },\n        _handleEvent: function(e, eventType, targetObj, button, isClick) {\n            var target = typeof targetObj === \"undefined\" ? this.findTarget(e) : targetObj, targets = this.targets || [], options = {\n                e: e,\n                target: target,\n                subTargets: targets,\n                button: button || LEFT_CLICK,\n                isClick: isClick || false\n            };\n            this.fire(\"mouse:\" + eventType, options);\n            target && target.fire(\"mouse\" + eventType, options);\n            for (var i = 0; i < targets.length; i++) {\n                targets[i].fire(\"mouse\" + eventType, options);\n            }\n        },\n        _finalizeCurrentTransform: function(e) {\n            var transform = this._currentTransform, target = transform.target;\n            if (target._scaling) {\n                target._scaling = false;\n            }\n            target.setCoords();\n            if (transform.actionPerformed || this.stateful && target.hasStateChanged()) {\n                this.fire(\"object:modified\", {\n                    target: target,\n                    e: e\n                });\n                target.fire(\"modified\", {\n                    e: e\n                });\n            }\n        },\n        _onMouseDownInDrawingMode: function(e) {\n            this._isCurrentlyDrawing = true;\n            if (this.getActiveObject()) {\n                this.discardActiveObject(e).requestRenderAll();\n            }\n            if (this.clipTo) {\n                fabric.util.clipContext(this, this.contextTop);\n            }\n            var pointer = this.getPointer(e);\n            this.freeDrawingBrush.onMouseDown(pointer);\n            this._handleEvent(e, \"down\");\n        },\n        _onMouseMoveInDrawingMode: function(e) {\n            if (this._isCurrentlyDrawing) {\n                var pointer = this.getPointer(e);\n                this.freeDrawingBrush.onMouseMove(pointer);\n            }\n            this.setCursor(this.freeDrawingCursor);\n            this._handleEvent(e, \"move\");\n        },\n        _onMouseUpInDrawingMode: function(e) {\n            this._isCurrentlyDrawing = false;\n            if (this.clipTo) {\n                this.contextTop.restore();\n            }\n            this.freeDrawingBrush.onMouseUp();\n            this._handleEvent(e, \"up\");\n        },\n        __onMouseDown: function(e) {\n            var target = this.findTarget(e) || null;\n            if (checkClick(e, RIGHT_CLICK)) {\n                if (this.fireRightClick) {\n                    this._handleEvent(e, \"down\", target, RIGHT_CLICK);\n                }\n                return;\n            }\n            if (checkClick(e, MIDDLE_CLICK)) {\n                if (this.fireMiddleClick) {\n                    this._handleEvent(e, \"down\", target, MIDDLE_CLICK);\n                }\n                return;\n            }\n            if (this.isDrawingMode) {\n                this._onMouseDownInDrawingMode(e);\n                return;\n            }\n            if (this._currentTransform) {\n                return;\n            }\n            var pointer = this.getPointer(e, true);\n            this._previousPointer = pointer;\n            var shouldRender = this._shouldRender(target, pointer), shouldGroup = this._shouldGroup(e, target);\n            if (this._shouldClearSelection(e, target)) {\n                this.discardActiveObject(e);\n            } else if (shouldGroup) {\n                this._handleGrouping(e, target);\n                target = this._activeObject;\n            }\n            if (this.selection && (!target || !target.selectable && !target.isEditing && target !== this._activeObject)) {\n                this._groupSelector = {\n                    ex: pointer.x,\n                    ey: pointer.y,\n                    top: 0,\n                    left: 0\n                };\n            }\n            if (target) {\n                if (target.selectable) {\n                    this.setActiveObject(target, e);\n                }\n                if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n                    this._beforeTransform(e, target);\n                    this._setupCurrentTransform(e, target);\n                }\n            }\n            this._handleEvent(e, \"down\", target);\n            shouldRender && this.requestRenderAll();\n        },\n        _beforeTransform: function(e, target) {\n            this.stateful && target.saveState();\n            if (target._findTargetCorner(this.getPointer(e, true))) {\n                this.onBeforeScaleRotate(target);\n            }\n        },\n        __onMouseMove: function(e) {\n            var target, pointer;\n            if (this.isDrawingMode) {\n                this._onMouseMoveInDrawingMode(e);\n                return;\n            }\n            if (typeof e.touches !== \"undefined\" && e.touches.length > 1) {\n                return;\n            }\n            var groupSelector = this._groupSelector;\n            if (groupSelector) {\n                pointer = this.getPointer(e, true);\n                groupSelector.left = pointer.x - groupSelector.ex;\n                groupSelector.top = pointer.y - groupSelector.ey;\n                this.renderTop();\n            } else if (!this._currentTransform) {\n                target = this.findTarget(e) || null;\n                this._setCursorFromEvent(e, target);\n                this._fireOverOutEvents(target, e);\n            } else {\n                this._transformObject(e);\n            }\n            this._handleEvent(e, \"move\", this._currentTransform ? null : target);\n        },\n        _fireOverOutEvents: function(target, e) {\n            this.fireSynteticInOutEvents(target, e, {\n                targetName: \"_hoveredTarget\",\n                canvasEvtOut: \"mouse:out\",\n                evtOut: \"mouseout\",\n                canvasEvtIn: \"mouse:over\",\n                evtIn: \"mouseover\"\n            });\n        },\n        _fireEnterLeaveEvents: function(target, e) {\n            this.fireSynteticInOutEvents(target, e, {\n                targetName: \"_draggedoverTarget\",\n                evtOut: \"dragleave\",\n                evtIn: \"dragenter\"\n            });\n        },\n        fireSynteticInOutEvents: function(target, e, config) {\n            var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires, targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n            if (targetChanged) {\n                inOpt = {\n                    e: e,\n                    target: target,\n                    previousTarget: oldTarget\n                };\n                outOpt = {\n                    e: e,\n                    target: oldTarget,\n                    nextTarget: target\n                };\n                this[config.targetName] = target;\n            }\n            inFires = target && targetChanged;\n            outFires = oldTarget && targetChanged;\n            if (outFires) {\n                canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n                oldTarget.fire(config.evtOut, outOpt);\n            }\n            if (inFires) {\n                canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n                target.fire(config.evtIn, inOpt);\n            }\n        },\n        __onMouseWheel: function(e) {\n            this._handleEvent(e, \"wheel\");\n        },\n        _transformObject: function(e) {\n            var pointer = this.getPointer(e), transform = this._currentTransform;\n            transform.reset = false;\n            transform.target.isMoving = true;\n            transform.shiftKey = e.shiftKey;\n            transform.altKey = e[this.centeredKey];\n            this._beforeScaleTransform(e, transform);\n            this._performTransformAction(e, transform, pointer);\n            transform.actionPerformed && this.requestRenderAll();\n        },\n        _performTransformAction: function(e, transform, pointer) {\n            var x = pointer.x, y = pointer.y, target = transform.target, action = transform.action, actionPerformed = false;\n            if (action === \"rotate\") {\n                (actionPerformed = this._rotateObject(x, y)) && this._fire(\"rotating\", target, e);\n            } else if (action === \"scale\") {\n                (actionPerformed = this._onScale(e, transform, x, y)) && this._fire(\"scaling\", target, e);\n            } else if (action === \"scaleX\") {\n                (actionPerformed = this._scaleObject(x, y, \"x\")) && this._fire(\"scaling\", target, e);\n            } else if (action === \"scaleY\") {\n                (actionPerformed = this._scaleObject(x, y, \"y\")) && this._fire(\"scaling\", target, e);\n            } else if (action === \"skewX\") {\n                (actionPerformed = this._skewObject(x, y, \"x\")) && this._fire(\"skewing\", target, e);\n            } else if (action === \"skewY\") {\n                (actionPerformed = this._skewObject(x, y, \"y\")) && this._fire(\"skewing\", target, e);\n            } else {\n                actionPerformed = this._translateObject(x, y);\n                if (actionPerformed) {\n                    this._fire(\"moving\", target, e);\n                    this.setCursor(target.moveCursor || this.moveCursor);\n                }\n            }\n            transform.actionPerformed = transform.actionPerformed || actionPerformed;\n        },\n        _fire: function(eventName, target, e) {\n            this.fire(\"object:\" + eventName, {\n                target: target,\n                e: e\n            });\n            target.fire(eventName, {\n                e: e\n            });\n        },\n        _beforeScaleTransform: function(e, transform) {\n            if (transform.action === \"scale\" || transform.action === \"scaleX\" || transform.action === \"scaleY\") {\n                var centerTransform = this._shouldCenterTransform(transform.target);\n                if (centerTransform && (transform.originX !== \"center\" || transform.originY !== \"center\") || !centerTransform && transform.originX === \"center\" && transform.originY === \"center\") {\n                    this._resetCurrentTransform();\n                    transform.reset = true;\n                }\n            }\n        },\n        _onScale: function(e, transform, x, y) {\n            if (this._isUniscalePossible(e, transform.target)) {\n                transform.currentAction = \"scale\";\n                return this._scaleObject(x, y);\n            } else {\n                if (!transform.reset && transform.currentAction === \"scale\") {\n                    this._resetCurrentTransform();\n                }\n                transform.currentAction = \"scaleEqually\";\n                return this._scaleObject(x, y, \"equally\");\n            }\n        },\n        _isUniscalePossible: function(e, target) {\n            return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get(\"lockUniScaling\");\n        },\n        _setCursorFromEvent: function(e, target) {\n            if (!target) {\n                this.setCursor(this.defaultCursor);\n                return false;\n            }\n            var hoverCursor = target.hoverCursor || this.hoverCursor, activeSelection = this._activeObject && this._activeObject.type === \"activeSelection\" ? this._activeObject : null, corner = (!activeSelection || !activeSelection.contains(target)) && target._findTargetCorner(this.getPointer(e, true));\n            if (!corner) {\n                this.setCursor(hoverCursor);\n            } else {\n                this.setCursor(this.getCornerCursor(corner, target, e));\n            }\n        },\n        getCornerCursor: function(corner, target, e) {\n            if (this.actionIsDisabled(corner, target, e)) {\n                return this.notAllowedCursor;\n            } else if (corner in cursorOffset) {\n                return this._getRotatedCornerCursor(corner, target, e);\n            } else if (corner === \"mtr\" && target.hasRotatingPoint) {\n                return this.rotationCursor;\n            } else {\n                return this.defaultCursor;\n            }\n        },\n        actionIsDisabled: function(corner, target, e) {\n            if (corner === \"mt\" || corner === \"mb\") {\n                return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n            } else if (corner === \"ml\" || corner === \"mr\") {\n                return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n            } else if (corner === \"mtr\") {\n                return target.lockRotation;\n            } else {\n                return this._isUniscalePossible(e, target) ? target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n            }\n        },\n        _getRotatedCornerCursor: function(corner, target, e) {\n            var n = Math.round(target.angle % 360 / 45);\n            if (n < 0) {\n                n += 8;\n            }\n            n += cursorOffset[corner];\n            if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n                n += 2;\n            }\n            n %= 8;\n            return this.cursorMap[n];\n        }\n    });\n})();\n\n(function() {\n    var min = Math.min, max = Math.max;\n    fabric.util.object.extend(fabric.Canvas.prototype, {\n        _shouldGroup: function(e, target) {\n            var activeObject = this._activeObject;\n            return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection && (activeObject !== target || activeObject.type === \"activeSelection\");\n        },\n        _handleGrouping: function(e, target) {\n            var activeObject = this._activeObject;\n            if (activeObject.__corner) {\n                return;\n            }\n            if (target === activeObject) {\n                target = this.findTarget(e, true);\n                if (!target) {\n                    return;\n                }\n            }\n            if (activeObject && activeObject.type === \"activeSelection\") {\n                this._updateActiveSelection(target, e);\n            } else {\n                this._createActiveSelection(target, e);\n            }\n        },\n        _updateActiveSelection: function(target, e) {\n            var activeSelection = this._activeObject, currentActiveObjects = activeSelection._objects.slice(0);\n            if (activeSelection.contains(target)) {\n                activeSelection.removeWithUpdate(target);\n                this._hoveredTarget = target;\n                if (activeSelection.size() === 1) {\n                    this._setActiveObject(activeSelection.item(0), e);\n                }\n            } else {\n                activeSelection.addWithUpdate(target);\n                this._hoveredTarget = activeSelection;\n            }\n            this._fireSelectionEvents(currentActiveObjects, e);\n        },\n        _createActiveSelection: function(target, e) {\n            var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n            this._hoveredTarget = group;\n            this._setActiveObject(group, e);\n            this._fireSelectionEvents(currentActives, e);\n        },\n        _createGroup: function(target) {\n            var objects = this.getObjects(), isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target), groupObjects = isActiveLower ? [ this._activeObject, target ] : [ target, this._activeObject ];\n            this._activeObject.isEditing && this._activeObject.exitEditing();\n            return new fabric.ActiveSelection(groupObjects, {\n                canvas: this\n            });\n        },\n        _groupSelectedObjects: function(e) {\n            var group = this._collectObjects(), aGroup;\n            if (group.length === 1) {\n                this.setActiveObject(group[0], e);\n            } else if (group.length > 1) {\n                aGroup = new fabric.ActiveSelection(group.reverse(), {\n                    canvas: this\n                });\n                this.setActiveObject(aGroup, e);\n            }\n        },\n        _collectObjects: function() {\n            var group = [], currentObject, x1 = this._groupSelector.ex, y1 = this._groupSelector.ey, x2 = x1 + this._groupSelector.left, y2 = y1 + this._groupSelector.top, selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)), selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)), allowIntersect = !this.selectionFullyContained, isClick = x1 === x2 && y1 === y2;\n            for (var i = this._objects.length; i--; ) {\n                currentObject = this._objects[i];\n                if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n                    continue;\n                }\n                if (allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) || currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) || allowIntersect && currentObject.containsPoint(selectionX1Y1) || allowIntersect && currentObject.containsPoint(selectionX2Y2)) {\n                    group.push(currentObject);\n                    if (isClick) {\n                        break;\n                    }\n                }\n            }\n            return group;\n        },\n        _maybeGroupObjects: function(e) {\n            if (this.selection && this._groupSelector) {\n                this._groupSelectedObjects(e);\n            }\n            this.setCursor(this.defaultCursor);\n            this._groupSelector = null;\n            this._currentTransform = null;\n        }\n    });\n})();\n\n(function() {\n    var supportQuality = fabric.StaticCanvas.supports(\"toDataURLWithQuality\");\n    fabric.util.object.extend(fabric.StaticCanvas.prototype, {\n        toDataURL: function(options) {\n            options || (options = {});\n            var format = options.format || \"png\", quality = options.quality || 1, multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? 1 : 1 / this.getRetinaScaling()), cropping = {\n                left: options.left || 0,\n                top: options.top || 0,\n                width: options.width || 0,\n                height: options.height || 0\n            };\n            return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n        },\n        __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n            var origWidth = this.width, origHeight = this.height, scaledWidth = (cropping.width || this.width) * multiplier, scaledHeight = (cropping.height || this.height) * multiplier, zoom = this.getZoom(), newZoom = zoom * multiplier, vp = this.viewportTransform, translateX = (vp[4] - cropping.left) * multiplier, translateY = (vp[5] - cropping.top) * multiplier, newVp = [ newZoom, 0, 0, newZoom, translateX, translateY ], originalInteractive = this.interactive, originalSkipOffScreen = this.skipOffscreen, needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\n            this.viewportTransform = newVp;\n            this.skipOffscreen = false;\n            this.interactive = false;\n            if (needsResize) {\n                this.setDimensions({\n                    width: scaledWidth,\n                    height: scaledHeight\n                }, {\n                    backstoreOnly: true\n                });\n            }\n            this.renderAll();\n            var data = this.__toDataURL(format, quality, cropping);\n            this.interactive = originalInteractive;\n            this.skipOffscreen = originalSkipOffScreen;\n            this.viewportTransform = vp;\n            if (needsResize) {\n                this.setDimensions({\n                    width: origWidth,\n                    height: origHeight\n                }, {\n                    backstoreOnly: true\n                });\n            }\n            this.renderAll();\n            return data;\n        },\n        __toDataURL: function(format, quality) {\n            var canvasEl = this.contextContainer.canvas;\n            if (format === \"jpg\") {\n                format = \"jpeg\";\n            }\n            var data = supportQuality ? canvasEl.toDataURL(\"image/\" + format, quality) : canvasEl.toDataURL(\"image/\" + format);\n            return data;\n        }\n    });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, {\n    loadFromDatalessJSON: function(json, callback, reviver) {\n        return this.loadFromJSON(json, callback, reviver);\n    },\n    loadFromJSON: function(json, callback, reviver) {\n        if (!json) {\n            return;\n        }\n        var serialized = typeof json === \"string\" ? JSON.parse(json) : fabric.util.object.clone(json);\n        var _this = this, renderOnAddRemove = this.renderOnAddRemove;\n        this.renderOnAddRemove = false;\n        this._enlivenObjects(serialized.objects, function(enlivenedObjects) {\n            _this.clear();\n            _this._setBgOverlay(serialized, function() {\n                enlivenedObjects.forEach(function(obj, index) {\n                    _this.insertAt(obj, index);\n                });\n                _this.renderOnAddRemove = renderOnAddRemove;\n                delete serialized.objects;\n                delete serialized.backgroundImage;\n                delete serialized.overlayImage;\n                delete serialized.background;\n                delete serialized.overlay;\n                _this._setOptions(serialized);\n                _this.renderAll();\n                callback && callback();\n            });\n        }, reviver);\n        return this;\n    },\n    _setBgOverlay: function(serialized, callback) {\n        var loaded = {\n            backgroundColor: false,\n            overlayColor: false,\n            backgroundImage: false,\n            overlayImage: false\n        };\n        if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n            callback && callback();\n            return;\n        }\n        var cbIfLoaded = function() {\n            if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n                callback && callback();\n            }\n        };\n        this.__setBgOverlay(\"backgroundImage\", serialized.backgroundImage, loaded, cbIfLoaded);\n        this.__setBgOverlay(\"overlayImage\", serialized.overlayImage, loaded, cbIfLoaded);\n        this.__setBgOverlay(\"backgroundColor\", serialized.background, loaded, cbIfLoaded);\n        this.__setBgOverlay(\"overlayColor\", serialized.overlay, loaded, cbIfLoaded);\n    },\n    __setBgOverlay: function(property, value, loaded, callback) {\n        var _this = this;\n        if (!value) {\n            loaded[property] = true;\n            callback && callback();\n            return;\n        }\n        if (property === \"backgroundImage\" || property === \"overlayImage\") {\n            fabric.util.enlivenObjects([ value ], function(enlivedObject) {\n                _this[property] = enlivedObject[0];\n                loaded[property] = true;\n                callback && callback();\n            });\n        } else {\n            this[\"set\" + fabric.util.string.capitalize(property, true)](value, function() {\n                loaded[property] = true;\n                callback && callback();\n            });\n        }\n    },\n    _enlivenObjects: function(objects, callback, reviver) {\n        if (!objects || objects.length === 0) {\n            callback && callback([]);\n            return;\n        }\n        fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n            callback && callback(enlivenedObjects);\n        }, null, reviver);\n    },\n    _toDataURL: function(format, callback) {\n        this.clone(function(clone) {\n            callback(clone.toDataURL(format));\n        });\n    },\n    _toDataURLWithMultiplier: function(format, multiplier, callback) {\n        this.clone(function(clone) {\n            callback(clone.toDataURLWithMultiplier(format, multiplier));\n        });\n    },\n    clone: function(callback, properties) {\n        var data = JSON.stringify(this.toJSON(properties));\n        this.cloneWithoutData(function(clone) {\n            clone.loadFromJSON(data, function() {\n                callback && callback(clone);\n            });\n        });\n    },\n    cloneWithoutData: function(callback) {\n        var el = fabric.document.createElement(\"canvas\");\n        el.width = this.width;\n        el.height = this.height;\n        var clone = new fabric.Canvas(el);\n        clone.clipTo = this.clipTo;\n        if (this.backgroundImage) {\n            clone.setBackgroundImage(this.backgroundImage.src, function() {\n                clone.renderAll();\n                callback && callback(clone);\n            });\n            clone.backgroundImageOpacity = this.backgroundImageOpacity;\n            clone.backgroundImageStretch = this.backgroundImageStretch;\n        } else {\n            callback && callback(clone);\n        }\n    }\n});\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, clone = fabric.util.object.clone, toFixed = fabric.util.toFixed, capitalize = fabric.util.string.capitalize, degreesToRadians = fabric.util.degreesToRadians, supportsLineDash = fabric.StaticCanvas.supports(\"setLineDash\"), objectCaching = !fabric.isLikelyNode, ALIASING_LIMIT = 2;\n    if (fabric.Object) {\n        return;\n    }\n    fabric.Object = fabric.util.createClass(fabric.CommonMethods, {\n        type: \"object\",\n        originX: \"left\",\n        originY: \"top\",\n        top: 0,\n        left: 0,\n        width: 0,\n        height: 0,\n        scaleX: 1,\n        scaleY: 1,\n        flipX: false,\n        flipY: false,\n        opacity: 1,\n        angle: 0,\n        skewX: 0,\n        skewY: 0,\n        cornerSize: 13,\n        transparentCorners: true,\n        hoverCursor: null,\n        moveCursor: null,\n        padding: 0,\n        borderColor: \"rgba(102,153,255,0.75)\",\n        borderDashArray: null,\n        cornerColor: \"rgba(102,153,255,0.5)\",\n        cornerStrokeColor: null,\n        cornerStyle: \"rect\",\n        cornerDashArray: null,\n        centeredScaling: false,\n        centeredRotation: true,\n        fill: \"rgb(0,0,0)\",\n        fillRule: \"nonzero\",\n        globalCompositeOperation: \"source-over\",\n        backgroundColor: \"\",\n        selectionBackgroundColor: \"\",\n        stroke: null,\n        strokeWidth: 1,\n        strokeDashArray: null,\n        strokeLineCap: \"butt\",\n        strokeLineJoin: \"miter\",\n        strokeMiterLimit: 10,\n        shadow: null,\n        borderOpacityWhenMoving: .4,\n        borderScaleFactor: 1,\n        transformMatrix: null,\n        minScaleLimit: 0,\n        selectable: true,\n        evented: true,\n        visible: true,\n        hasControls: true,\n        hasBorders: true,\n        hasRotatingPoint: true,\n        rotatingPointOffset: 40,\n        perPixelTargetFind: false,\n        includeDefaultValues: true,\n        clipTo: null,\n        lockMovementX: false,\n        lockMovementY: false,\n        lockRotation: false,\n        lockScalingX: false,\n        lockScalingY: false,\n        lockUniScaling: false,\n        lockSkewingX: false,\n        lockSkewingY: false,\n        lockScalingFlip: false,\n        excludeFromExport: false,\n        objectCaching: objectCaching,\n        statefullCache: false,\n        noScaleCache: true,\n        dirty: true,\n        __corner: 0,\n        paintFirst: \"fill\",\n        stateProperties: (\"top left width height scaleX scaleY flipX flipY originX originY transformMatrix \" + \"stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit \" + \"angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor \" + \"skewX skewY fillRule paintFirst\").split(\" \"),\n        cacheProperties: (\"fill stroke strokeWidth strokeDashArray width height paintFirst\" + \" strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor\").split(\" \"),\n        initialize: function(options) {\n            if (options) {\n                this.setOptions(options);\n            }\n        },\n        _createCacheCanvas: function() {\n            this._cacheProperties = {};\n            this._cacheCanvas = fabric.document.createElement(\"canvas\");\n            this._cacheContext = this._cacheCanvas.getContext(\"2d\");\n            this._updateCacheCanvas();\n        },\n        _limitCacheSize: function(dims) {\n            var perfLimitSizeTotal = fabric.perfLimitSizeTotal, width = dims.width, height = dims.height, max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n            if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n                if (width < min) {\n                    dims.width = min;\n                }\n                if (height < min) {\n                    dims.height = min;\n                }\n                return dims;\n            }\n            var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal), capValue = fabric.util.capValue, x = capValue(min, limitedDims.x, max), y = capValue(min, limitedDims.y, max);\n            if (width > x) {\n                dims.zoomX /= width / x;\n                dims.width = x;\n                dims.capped = true;\n            }\n            if (height > y) {\n                dims.zoomY /= height / y;\n                dims.height = y;\n                dims.capped = true;\n            }\n            return dims;\n        },\n        _getCacheCanvasDimensions: function() {\n            var zoom = this.canvas && this.canvas.getZoom() || 1, objectScale = this.getObjectScaling(), retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1, dim = this._getNonTransformedDimensions(), zoomX = objectScale.scaleX * zoom * retina, zoomY = objectScale.scaleY * zoom * retina, width = dim.x * zoomX, height = dim.y * zoomY;\n            return {\n                width: width + ALIASING_LIMIT,\n                height: height + ALIASING_LIMIT,\n                zoomX: zoomX,\n                zoomY: zoomY,\n                x: dim.x,\n                y: dim.y\n            };\n        },\n        _updateCacheCanvas: function() {\n            if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n                var target = this.canvas._currentTransform.target, action = this.canvas._currentTransform.action;\n                if (this === target && action.slice && action.slice(0, 5) === \"scale\") {\n                    return false;\n                }\n            }\n            var canvas = this._cacheCanvas, dims = this._limitCacheSize(this._getCacheCanvasDimensions()), minCacheSize = fabric.minCacheSideLimit, width = dims.width, height = dims.height, drawingWidth, drawingHeight, zoomX = dims.zoomX, zoomY = dims.zoomY, dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight, zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY, shouldRedraw = dimensionsChanged || zoomChanged, additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n            if (dimensionsChanged) {\n                var canvasWidth = this._cacheCanvas.width, canvasHeight = this._cacheCanvas.height, sizeGrowing = width > canvasWidth || height > canvasHeight, sizeShrinking = (width < canvasWidth * .9 || height < canvasHeight * .9) && canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n                shouldResizeCanvas = sizeGrowing || sizeShrinking;\n                if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n                    additionalWidth = width * .1;\n                    additionalHeight = height * .1;\n                }\n            }\n            if (shouldRedraw) {\n                if (shouldResizeCanvas) {\n                    canvas.width = Math.ceil(width + additionalWidth);\n                    canvas.height = Math.ceil(height + additionalHeight);\n                } else {\n                    this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n                    this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n                }\n                drawingWidth = dims.x * zoomX / 2;\n                drawingHeight = dims.y * zoomY / 2;\n                this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n                this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n                this.cacheWidth = width;\n                this.cacheHeight = height;\n                this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n                this._cacheContext.scale(zoomX, zoomY);\n                this.zoomX = zoomX;\n                this.zoomY = zoomY;\n                return true;\n            }\n            return false;\n        },\n        setOptions: function(options) {\n            this._setOptions(options);\n            this._initGradient(options.fill, \"fill\");\n            this._initGradient(options.stroke, \"stroke\");\n            this._initClipping(options);\n            this._initPattern(options.fill, \"fill\");\n            this._initPattern(options.stroke, \"stroke\");\n        },\n        transform: function(ctx) {\n            var m;\n            if (this.group && !this.group._transformDone) {\n                m = this.calcTransformMatrix();\n            } else {\n                m = this.calcOwnMatrix();\n            }\n            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        },\n        toObject: function(propertiesToInclude) {\n            var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS, object = {\n                type: this.type,\n                version: fabric.version,\n                originX: this.originX,\n                originY: this.originY,\n                left: toFixed(this.left, NUM_FRACTION_DIGITS),\n                top: toFixed(this.top, NUM_FRACTION_DIGITS),\n                width: toFixed(this.width, NUM_FRACTION_DIGITS),\n                height: toFixed(this.height, NUM_FRACTION_DIGITS),\n                fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,\n                stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,\n                strokeWidth: toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n                strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n                strokeLineCap: this.strokeLineCap,\n                strokeLineJoin: this.strokeLineJoin,\n                strokeMiterLimit: toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n                scaleX: toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n                scaleY: toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n                angle: toFixed(this.angle, NUM_FRACTION_DIGITS),\n                flipX: this.flipX,\n                flipY: this.flipY,\n                opacity: toFixed(this.opacity, NUM_FRACTION_DIGITS),\n                shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,\n                visible: this.visible,\n                clipTo: this.clipTo && String(this.clipTo),\n                backgroundColor: this.backgroundColor,\n                fillRule: this.fillRule,\n                paintFirst: this.paintFirst,\n                globalCompositeOperation: this.globalCompositeOperation,\n                transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : null,\n                skewX: toFixed(this.skewX, NUM_FRACTION_DIGITS),\n                skewY: toFixed(this.skewY, NUM_FRACTION_DIGITS)\n            };\n            fabric.util.populateWithProperties(this, object, propertiesToInclude);\n            if (!this.includeDefaultValues) {\n                object = this._removeDefaultValues(object);\n            }\n            return object;\n        },\n        toDatalessObject: function(propertiesToInclude) {\n            return this.toObject(propertiesToInclude);\n        },\n        _removeDefaultValues: function(object) {\n            var prototype = fabric.util.getKlass(object.type).prototype, stateProperties = prototype.stateProperties;\n            stateProperties.forEach(function(prop) {\n                if (object[prop] === prototype[prop]) {\n                    delete object[prop];\n                }\n                var isArray = Object.prototype.toString.call(object[prop]) === \"[object Array]\" && Object.prototype.toString.call(prototype[prop]) === \"[object Array]\";\n                if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n                    delete object[prop];\n                }\n            });\n            return object;\n        },\n        toString: function() {\n            return \"#<fabric.\" + capitalize(this.type) + \">\";\n        },\n        getObjectScaling: function() {\n            var scaleX = this.scaleX, scaleY = this.scaleY;\n            if (this.group) {\n                var scaling = this.group.getObjectScaling();\n                scaleX *= scaling.scaleX;\n                scaleY *= scaling.scaleY;\n            }\n            return {\n                scaleX: scaleX,\n                scaleY: scaleY\n            };\n        },\n        getObjectOpacity: function() {\n            var opacity = this.opacity;\n            if (this.group) {\n                opacity *= this.group.getObjectOpacity();\n            }\n            return opacity;\n        },\n        _set: function(key, value) {\n            var shouldConstrainValue = key === \"scaleX\" || key === \"scaleY\", isChanged = this[key] !== value, groupNeedsUpdate = false;\n            if (shouldConstrainValue) {\n                value = this._constrainScale(value);\n            }\n            if (key === \"scaleX\" && value < 0) {\n                this.flipX = !this.flipX;\n                value *= -1;\n            } else if (key === \"scaleY\" && value < 0) {\n                this.flipY = !this.flipY;\n                value *= -1;\n            } else if (key === \"shadow\" && value && !(value instanceof fabric.Shadow)) {\n                value = new fabric.Shadow(value);\n            } else if (key === \"dirty\" && this.group) {\n                this.group.set(\"dirty\", value);\n            }\n            this[key] = value;\n            if (isChanged) {\n                groupNeedsUpdate = this.group && this.group.isOnACache();\n                if (this.cacheProperties.indexOf(key) > -1) {\n                    this.dirty = true;\n                    groupNeedsUpdate && this.group.set(\"dirty\", true);\n                } else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n                    this.group.set(\"dirty\", true);\n                }\n            }\n            return this;\n        },\n        setOnGroup: function() {},\n        getViewportTransform: function() {\n            if (this.canvas && this.canvas.viewportTransform) {\n                return this.canvas.viewportTransform;\n            }\n            return fabric.iMatrix.concat();\n        },\n        isNotVisible: function() {\n            return this.opacity === 0 || this.width === 0 && this.height === 0 || !this.visible;\n        },\n        render: function(ctx) {\n            if (this.isNotVisible()) {\n                return;\n            }\n            if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n                return;\n            }\n            ctx.save();\n            this._setupCompositeOperation(ctx);\n            this.drawSelectionBackground(ctx);\n            this.transform(ctx);\n            this._setOpacity(ctx);\n            this._setShadow(ctx, this);\n            if (this.transformMatrix) {\n                ctx.transform.apply(ctx, this.transformMatrix);\n            }\n            this.clipTo && fabric.util.clipContext(this, ctx);\n            if (this.shouldCache()) {\n                if (!this._cacheCanvas) {\n                    this._createCacheCanvas();\n                }\n                if (this.isCacheDirty()) {\n                    this.statefullCache && this.saveState({\n                        propertySet: \"cacheProperties\"\n                    });\n                    this.drawObject(this._cacheContext);\n                    this.dirty = false;\n                }\n                this.drawCacheOnCanvas(ctx);\n            } else {\n                this._removeCacheCanvas();\n                this.dirty = false;\n                this.drawObject(ctx);\n                if (this.objectCaching && this.statefullCache) {\n                    this.saveState({\n                        propertySet: \"cacheProperties\"\n                    });\n                }\n            }\n            this.clipTo && ctx.restore();\n            ctx.restore();\n        },\n        _removeCacheCanvas: function() {\n            this._cacheCanvas = null;\n            this.cacheWidth = 0;\n            this.cacheHeight = 0;\n        },\n        needsItsOwnCache: function() {\n            if (this.paintFirst === \"stroke\" && typeof this.shadow === \"object\") {\n                return true;\n            }\n            return false;\n        },\n        shouldCache: function() {\n            this.ownCaching = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n            return this.ownCaching;\n        },\n        willDrawShadow: function() {\n            return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n        },\n        drawObject: function(ctx) {\n            this._renderBackground(ctx);\n            this._setStrokeStyles(ctx, this);\n            this._setFillStyles(ctx, this);\n            this._render(ctx);\n        },\n        drawCacheOnCanvas: function(ctx) {\n            ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n            ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n        },\n        isCacheDirty: function(skipCanvas) {\n            if (this.isNotVisible()) {\n                return false;\n            }\n            if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n                return true;\n            } else {\n                if (this.dirty || this.statefullCache && this.hasStateChanged(\"cacheProperties\")) {\n                    if (this._cacheCanvas && !skipCanvas) {\n                        var width = this.cacheWidth / this.zoomX;\n                        var height = this.cacheHeight / this.zoomY;\n                        this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        },\n        _renderBackground: function(ctx) {\n            if (!this.backgroundColor) {\n                return;\n            }\n            var dim = this._getNonTransformedDimensions();\n            ctx.fillStyle = this.backgroundColor;\n            ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n            this._removeShadow(ctx);\n        },\n        _setOpacity: function(ctx) {\n            if (this.group && !this.group._transformDone) {\n                ctx.globalAlpha = this.getObjectOpacity();\n            } else {\n                ctx.globalAlpha *= this.opacity;\n            }\n        },\n        _setStrokeStyles: function(ctx, decl) {\n            if (decl.stroke) {\n                ctx.lineWidth = decl.strokeWidth;\n                ctx.lineCap = decl.strokeLineCap;\n                ctx.lineJoin = decl.strokeLineJoin;\n                ctx.miterLimit = decl.strokeMiterLimit;\n                ctx.strokeStyle = decl.stroke.toLive ? decl.stroke.toLive(ctx, this) : decl.stroke;\n            }\n        },\n        _setFillStyles: function(ctx, decl) {\n            if (decl.fill) {\n                ctx.fillStyle = decl.fill.toLive ? decl.fill.toLive(ctx, this) : decl.fill;\n            }\n        },\n        _setLineDash: function(ctx, dashArray, alternative) {\n            if (!dashArray) {\n                return;\n            }\n            if (1 & dashArray.length) {\n                dashArray.push.apply(dashArray, dashArray);\n            }\n            if (supportsLineDash) {\n                ctx.setLineDash(dashArray);\n            } else {\n                alternative && alternative(ctx);\n            }\n        },\n        _renderControls: function(ctx, styleOverride) {\n            var vpt = this.getViewportTransform(), matrix = this.calcTransformMatrix(), options, drawBorders, drawControls;\n            styleOverride = styleOverride || {};\n            drawBorders = typeof styleOverride.hasBorders !== \"undefined\" ? styleOverride.hasBorders : this.hasBorders;\n            drawControls = typeof styleOverride.hasControls !== \"undefined\" ? styleOverride.hasControls : this.hasControls;\n            matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n            options = fabric.util.qrDecompose(matrix);\n            ctx.save();\n            ctx.translate(options.translateX, options.translateY);\n            ctx.lineWidth = 1 * this.borderScaleFactor;\n            if (!this.group) {\n                ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n            }\n            if (styleOverride.forActiveSelection) {\n                ctx.rotate(degreesToRadians(options.angle));\n                drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n            } else {\n                ctx.rotate(degreesToRadians(this.angle));\n                drawBorders && this.drawBorders(ctx, styleOverride);\n            }\n            drawControls && this.drawControls(ctx, styleOverride);\n            ctx.restore();\n        },\n        _setShadow: function(ctx) {\n            if (!this.shadow) {\n                return;\n            }\n            var multX = this.canvas && this.canvas.viewportTransform[0] || 1, multY = this.canvas && this.canvas.viewportTransform[3] || 1, scaling = this.getObjectScaling();\n            if (this.canvas && this.canvas._isRetinaScaling()) {\n                multX *= fabric.devicePixelRatio;\n                multY *= fabric.devicePixelRatio;\n            }\n            ctx.shadowColor = this.shadow.color;\n            ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n            ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n            ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n        },\n        _removeShadow: function(ctx) {\n            if (!this.shadow) {\n                return;\n            }\n            ctx.shadowColor = \"\";\n            ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n        },\n        _applyPatternGradientTransform: function(ctx, filler) {\n            if (!filler || !filler.toLive) {\n                return {\n                    offsetX: 0,\n                    offsetY: 0\n                };\n            }\n            var t = filler.gradientTransform || filler.patternTransform;\n            var offsetX = -this.width / 2 + filler.offsetX || 0, offsetY = -this.height / 2 + filler.offsetY || 0;\n            ctx.translate(offsetX, offsetY);\n            if (t) {\n                ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n            }\n            return {\n                offsetX: offsetX,\n                offsetY: offsetY\n            };\n        },\n        _renderPaintInOrder: function(ctx) {\n            if (this.paintFirst === \"stroke\") {\n                this._renderStroke(ctx);\n                this._renderFill(ctx);\n            } else {\n                this._renderFill(ctx);\n                this._renderStroke(ctx);\n            }\n        },\n        _renderFill: function(ctx) {\n            if (!this.fill) {\n                return;\n            }\n            ctx.save();\n            this._applyPatternGradientTransform(ctx, this.fill);\n            if (this.fillRule === \"evenodd\") {\n                ctx.fill(\"evenodd\");\n            } else {\n                ctx.fill();\n            }\n            ctx.restore();\n        },\n        _renderStroke: function(ctx) {\n            if (!this.stroke || this.strokeWidth === 0) {\n                return;\n            }\n            if (this.shadow && !this.shadow.affectStroke) {\n                this._removeShadow(ctx);\n            }\n            ctx.save();\n            this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n            this._applyPatternGradientTransform(ctx, this.stroke);\n            ctx.stroke();\n            ctx.restore();\n        },\n        _findCenterFromElement: function() {\n            return {\n                x: this.left + this.width / 2,\n                y: this.top + this.height / 2\n            };\n        },\n        _assignTransformMatrixProps: function() {\n            if (this.transformMatrix) {\n                var options = fabric.util.qrDecompose(this.transformMatrix);\n                this.flipX = false;\n                this.flipY = false;\n                this.set(\"scaleX\", options.scaleX);\n                this.set(\"scaleY\", options.scaleY);\n                this.angle = options.angle;\n                this.skewX = options.skewX;\n                this.skewY = 0;\n            }\n        },\n        _removeTransformMatrix: function(preserveAspectRatioOptions) {\n            var center = this._findCenterFromElement();\n            if (this.transformMatrix) {\n                this._assignTransformMatrixProps();\n                center = fabric.util.transformPoint(center, this.transformMatrix);\n            }\n            this.transformMatrix = null;\n            if (preserveAspectRatioOptions) {\n                this.scaleX *= preserveAspectRatioOptions.scaleX;\n                this.scaleY *= preserveAspectRatioOptions.scaleY;\n                this.cropX = preserveAspectRatioOptions.cropX;\n                this.cropY = preserveAspectRatioOptions.cropY;\n                center.x += preserveAspectRatioOptions.offsetLeft;\n                center.y += preserveAspectRatioOptions.offsetTop;\n                this.width = preserveAspectRatioOptions.width;\n                this.height = preserveAspectRatioOptions.height;\n            }\n            this.setPositionByOrigin(center, \"center\", \"center\");\n        },\n        clone: function(callback, propertiesToInclude) {\n            var objectForm = this.toObject(propertiesToInclude);\n            if (this.constructor.fromObject) {\n                this.constructor.fromObject(objectForm, callback);\n            } else {\n                fabric.Object._fromObject(\"Object\", objectForm, callback);\n            }\n        },\n        cloneAsImage: function(callback, options) {\n            var dataUrl = this.toDataURL(options);\n            fabric.util.loadImage(dataUrl, function(img) {\n                if (callback) {\n                    callback(new fabric.Image(img));\n                }\n            });\n            return this;\n        },\n        toDataURL: function(options) {\n            options || (options = {});\n            var el = fabric.util.createCanvasElement(), boundingRect = this.getBoundingRect();\n            el.width = boundingRect.width;\n            el.height = boundingRect.height;\n            fabric.util.wrapElement(el, \"div\");\n            var canvas = new fabric.StaticCanvas(el, {\n                enableRetinaScaling: options.enableRetinaScaling,\n                renderOnAddRemove: false,\n                skipOffscreen: false\n            });\n            if (options.format === \"jpg\") {\n                options.format = \"jpeg\";\n            }\n            if (options.format === \"jpeg\") {\n                canvas.backgroundColor = \"#fff\";\n            }\n            var origParams = {\n                left: this.left,\n                top: this.top\n            };\n            this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), \"center\", \"center\");\n            var originalCanvas = this.canvas;\n            canvas.add(this);\n            var data = canvas.toDataURL(options);\n            this.set(origParams).setCoords();\n            this.canvas = originalCanvas;\n            canvas._objects = [];\n            canvas.dispose();\n            canvas = null;\n            return data;\n        },\n        isType: function(type) {\n            return this.type === type;\n        },\n        complexity: function() {\n            return 1;\n        },\n        toJSON: function(propertiesToInclude) {\n            return this.toObject(propertiesToInclude);\n        },\n        setGradient: function(property, options) {\n            options || (options = {});\n            var gradient = {\n                colorStops: []\n            };\n            gradient.type = options.type || (options.r1 || options.r2 ? \"radial\" : \"linear\");\n            gradient.coords = {\n                x1: options.x1,\n                y1: options.y1,\n                x2: options.x2,\n                y2: options.y2\n            };\n            if (options.r1 || options.r2) {\n                gradient.coords.r1 = options.r1;\n                gradient.coords.r2 = options.r2;\n            }\n            gradient.gradientTransform = options.gradientTransform;\n            fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n            return this.set(property, fabric.Gradient.forObject(this, gradient));\n        },\n        setPatternFill: function(options) {\n            return this.set(\"fill\", new fabric.Pattern(options));\n        },\n        setShadow: function(options) {\n            return this.set(\"shadow\", options ? new fabric.Shadow(options) : null);\n        },\n        setColor: function(color) {\n            this.set(\"fill\", color);\n            return this;\n        },\n        rotate: function(angle) {\n            var shouldCenterOrigin = (this.originX !== \"center\" || this.originY !== \"center\") && this.centeredRotation;\n            if (shouldCenterOrigin) {\n                this._setOriginToCenter();\n            }\n            this.set(\"angle\", angle);\n            if (shouldCenterOrigin) {\n                this._resetOrigin();\n            }\n            return this;\n        },\n        centerH: function() {\n            this.canvas && this.canvas.centerObjectH(this);\n            return this;\n        },\n        viewportCenterH: function() {\n            this.canvas && this.canvas.viewportCenterObjectH(this);\n            return this;\n        },\n        centerV: function() {\n            this.canvas && this.canvas.centerObjectV(this);\n            return this;\n        },\n        viewportCenterV: function() {\n            this.canvas && this.canvas.viewportCenterObjectV(this);\n            return this;\n        },\n        center: function() {\n            this.canvas && this.canvas.centerObject(this);\n            return this;\n        },\n        viewportCenter: function() {\n            this.canvas && this.canvas.viewportCenterObject(this);\n            return this;\n        },\n        getLocalPointer: function(e, pointer) {\n            pointer = pointer || this.canvas.getPointer(e);\n            var pClicked = new fabric.Point(pointer.x, pointer.y), objectLeftTop = this._getLeftTopCoords();\n            if (this.angle) {\n                pClicked = fabric.util.rotatePoint(pClicked, objectLeftTop, degreesToRadians(-this.angle));\n            }\n            return {\n                x: pClicked.x - objectLeftTop.x,\n                y: pClicked.y - objectLeftTop.y\n            };\n        },\n        _setupCompositeOperation: function(ctx) {\n            if (this.globalCompositeOperation) {\n                ctx.globalCompositeOperation = this.globalCompositeOperation;\n            }\n        }\n    });\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n    extend(fabric.Object.prototype, fabric.Observable);\n    fabric.Object.NUM_FRACTION_DIGITS = 2;\n    fabric.Object._fromObject = function(className, object, callback, extraParam) {\n        var klass = fabric[className];\n        object = clone(object, true);\n        fabric.util.enlivenPatterns([ object.fill, object.stroke ], function(patterns) {\n            if (typeof patterns[0] !== \"undefined\") {\n                object.fill = patterns[0];\n            }\n            if (typeof patterns[1] !== \"undefined\") {\n                object.stroke = patterns[1];\n            }\n            var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n            callback && callback(instance);\n        });\n    };\n    fabric.Object.__uid = 0;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    var degreesToRadians = fabric.util.degreesToRadians, originXOffset = {\n        left: -.5,\n        center: 0,\n        right: .5\n    }, originYOffset = {\n        top: -.5,\n        center: 0,\n        bottom: .5\n    };\n    fabric.util.object.extend(fabric.Object.prototype, {\n        translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n            var x = point.x, y = point.y, offsetX, offsetY, dim;\n            if (typeof fromOriginX === \"string\") {\n                fromOriginX = originXOffset[fromOriginX];\n            } else {\n                fromOriginX -= .5;\n            }\n            if (typeof toOriginX === \"string\") {\n                toOriginX = originXOffset[toOriginX];\n            } else {\n                toOriginX -= .5;\n            }\n            offsetX = toOriginX - fromOriginX;\n            if (typeof fromOriginY === \"string\") {\n                fromOriginY = originYOffset[fromOriginY];\n            } else {\n                fromOriginY -= .5;\n            }\n            if (typeof toOriginY === \"string\") {\n                toOriginY = originYOffset[toOriginY];\n            } else {\n                toOriginY -= .5;\n            }\n            offsetY = toOriginY - fromOriginY;\n            if (offsetX || offsetY) {\n                dim = this._getTransformedDimensions();\n                x = point.x + offsetX * dim.x;\n                y = point.y + offsetY * dim.y;\n            }\n            return new fabric.Point(x, y);\n        },\n        translateToCenterPoint: function(point, originX, originY) {\n            var p = this.translateToGivenOrigin(point, originX, originY, \"center\", \"center\");\n            if (this.angle) {\n                return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n            }\n            return p;\n        },\n        translateToOriginPoint: function(center, originX, originY) {\n            var p = this.translateToGivenOrigin(center, \"center\", \"center\", originX, originY);\n            if (this.angle) {\n                return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n            }\n            return p;\n        },\n        getCenterPoint: function() {\n            var leftTop = new fabric.Point(this.left, this.top);\n            return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n        },\n        getPointByOrigin: function(originX, originY) {\n            var center = this.getCenterPoint();\n            return this.translateToOriginPoint(center, originX, originY);\n        },\n        toLocalPoint: function(point, originX, originY) {\n            var center = this.getCenterPoint(), p, p2;\n            if (typeof originX !== \"undefined\" && typeof originY !== \"undefined\") {\n                p = this.translateToGivenOrigin(center, \"center\", \"center\", originX, originY);\n            } else {\n                p = new fabric.Point(this.left, this.top);\n            }\n            p2 = new fabric.Point(point.x, point.y);\n            if (this.angle) {\n                p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n            }\n            return p2.subtractEquals(p);\n        },\n        setPositionByOrigin: function(pos, originX, originY) {\n            var center = this.translateToCenterPoint(pos, originX, originY), position = this.translateToOriginPoint(center, this.originX, this.originY);\n            this.set(\"left\", position.x);\n            this.set(\"top\", position.y);\n        },\n        adjustPosition: function(to) {\n            var angle = degreesToRadians(this.angle), hypotFull = this.getScaledWidth(), xFull = fabric.util.cos(angle) * hypotFull, yFull = fabric.util.sin(angle) * hypotFull, offsetFrom, offsetTo;\n            if (typeof this.originX === \"string\") {\n                offsetFrom = originXOffset[this.originX];\n            } else {\n                offsetFrom = this.originX - .5;\n            }\n            if (typeof to === \"string\") {\n                offsetTo = originXOffset[to];\n            } else {\n                offsetTo = to - .5;\n            }\n            this.left += xFull * (offsetTo - offsetFrom);\n            this.top += yFull * (offsetTo - offsetFrom);\n            this.setCoords();\n            this.originX = to;\n        },\n        _setOriginToCenter: function() {\n            this._originalOriginX = this.originX;\n            this._originalOriginY = this.originY;\n            var center = this.getCenterPoint();\n            this.originX = \"center\";\n            this.originY = \"center\";\n            this.left = center.x;\n            this.top = center.y;\n        },\n        _resetOrigin: function() {\n            var originPoint = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);\n            this.originX = this._originalOriginX;\n            this.originY = this._originalOriginY;\n            this.left = originPoint.x;\n            this.top = originPoint.y;\n            this._originalOriginX = null;\n            this._originalOriginY = null;\n        },\n        _getLeftTopCoords: function() {\n            return this.translateToOriginPoint(this.getCenterPoint(), \"left\", \"top\");\n        },\n        onDeselect: function() {}\n    });\n})();\n\n(function() {\n    function getCoords(coords) {\n        return [ new fabric.Point(coords.tl.x, coords.tl.y), new fabric.Point(coords.tr.x, coords.tr.y), new fabric.Point(coords.br.x, coords.br.y), new fabric.Point(coords.bl.x, coords.bl.y) ];\n    }\n    var degreesToRadians = fabric.util.degreesToRadians, multiplyMatrices = fabric.util.multiplyTransformMatrices, transformPoint = fabric.util.transformPoint;\n    fabric.util.object.extend(fabric.Object.prototype, {\n        oCoords: null,\n        aCoords: null,\n        ownMatrixCache: null,\n        matrixCache: null,\n        getCoords: function(absolute, calculate) {\n            if (!this.oCoords) {\n                this.setCoords();\n            }\n            var coords = absolute ? this.aCoords : this.oCoords;\n            return getCoords(calculate ? this.calcCoords(absolute) : coords);\n        },\n        intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n            var coords = this.getCoords(absolute, calculate), intersection = fabric.Intersection.intersectPolygonRectangle(coords, pointTL, pointBR);\n            return intersection.status === \"Intersection\";\n        },\n        intersectsWithObject: function(other, absolute, calculate) {\n            var intersection = fabric.Intersection.intersectPolygonPolygon(this.getCoords(absolute, calculate), other.getCoords(absolute, calculate));\n            return intersection.status === \"Intersection\" || other.isContainedWithinObject(this, absolute, calculate) || this.isContainedWithinObject(other, absolute, calculate);\n        },\n        isContainedWithinObject: function(other, absolute, calculate) {\n            var points = this.getCoords(absolute, calculate), i = 0, lines = other._getImageLines(calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords);\n            for (;i < 4; i++) {\n                if (!other.containsPoint(points[i], lines)) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n            var boundingRect = this.getBoundingRect(absolute, calculate);\n            return boundingRect.left >= pointTL.x && boundingRect.left + boundingRect.width <= pointBR.x && boundingRect.top >= pointTL.y && boundingRect.top + boundingRect.height <= pointBR.y;\n        },\n        containsPoint: function(point, lines, absolute, calculate) {\n            var lines = lines || this._getImageLines(calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords), xPoints = this._findCrossPoints(point, lines);\n            return xPoints !== 0 && xPoints % 2 === 1;\n        },\n        isOnScreen: function(calculate) {\n            if (!this.canvas) {\n                return false;\n            }\n            var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n            var points = this.getCoords(true, calculate), point;\n            for (var i = 0; i < 4; i++) {\n                point = points[i];\n                if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n                    return true;\n                }\n            }\n            if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n                return true;\n            }\n            var centerPoint = {\n                x: (pointTL.x + pointBR.x) / 2,\n                y: (pointTL.y + pointBR.y) / 2\n            };\n            if (this.containsPoint(centerPoint, null, true, calculate)) {\n                return true;\n            }\n            return false;\n        },\n        _getImageLines: function(oCoords) {\n            return {\n                topline: {\n                    o: oCoords.tl,\n                    d: oCoords.tr\n                },\n                rightline: {\n                    o: oCoords.tr,\n                    d: oCoords.br\n                },\n                bottomline: {\n                    o: oCoords.br,\n                    d: oCoords.bl\n                },\n                leftline: {\n                    o: oCoords.bl,\n                    d: oCoords.tl\n                }\n            };\n        },\n        _findCrossPoints: function(point, lines) {\n            var b1, b2, a1, a2, xi, xcount = 0, iLine;\n            for (var lineKey in lines) {\n                iLine = lines[lineKey];\n                if (iLine.o.y < point.y && iLine.d.y < point.y) {\n                    continue;\n                }\n                if (iLine.o.y >= point.y && iLine.d.y >= point.y) {\n                    continue;\n                }\n                if (iLine.o.x === iLine.d.x && iLine.o.x >= point.x) {\n                    xi = iLine.o.x;\n                } else {\n                    b1 = 0;\n                    b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n                    a1 = point.y - b1 * point.x;\n                    a2 = iLine.o.y - b2 * iLine.o.x;\n                    xi = -(a1 - a2) / (b1 - b2);\n                }\n                if (xi >= point.x) {\n                    xcount += 1;\n                }\n                if (xcount === 2) {\n                    break;\n                }\n            }\n            return xcount;\n        },\n        getBoundingRect: function(absolute, calculate) {\n            var coords = this.getCoords(absolute, calculate);\n            return fabric.util.makeBoundingBoxFromPoints(coords);\n        },\n        getScaledWidth: function() {\n            return this._getTransformedDimensions().x;\n        },\n        getScaledHeight: function() {\n            return this._getTransformedDimensions().y;\n        },\n        _constrainScale: function(value) {\n            if (Math.abs(value) < this.minScaleLimit) {\n                if (value < 0) {\n                    return -this.minScaleLimit;\n                } else {\n                    return this.minScaleLimit;\n                }\n            } else if (value === 0) {\n                return 1e-4;\n            }\n            return value;\n        },\n        scale: function(value) {\n            this._set(\"scaleX\", value);\n            this._set(\"scaleY\", value);\n            return this.setCoords();\n        },\n        scaleToWidth: function(value, absolute) {\n            var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n            return this.scale(value / this.width / boundingRectFactor);\n        },\n        scaleToHeight: function(value, absolute) {\n            var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n            return this.scale(value / this.height / boundingRectFactor);\n        },\n        calcCoords: function(absolute) {\n            var rotateMatrix = this._calcRotateMatrix(), translateMatrix = this._calcTranslateMatrix(), startMatrix = multiplyMatrices(translateMatrix, rotateMatrix), vpt = this.getViewportTransform(), finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix), dim = this._getTransformedDimensions(), w = dim.x / 2, h = dim.y / 2, tl = transformPoint({\n                x: -w,\n                y: -h\n            }, finalMatrix), tr = transformPoint({\n                x: w,\n                y: -h\n            }, finalMatrix), bl = transformPoint({\n                x: -w,\n                y: h\n            }, finalMatrix), br = transformPoint({\n                x: w,\n                y: h\n            }, finalMatrix);\n            if (!absolute) {\n                var padding = this.padding, angle = degreesToRadians(this.angle), cos = fabric.util.cos(angle), sin = fabric.util.sin(angle), cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP, cosPMinusSinP = cosP - sinP;\n                if (padding) {\n                    tl.x -= cosPMinusSinP;\n                    tl.y -= cosPSinP;\n                    tr.x += cosPSinP;\n                    tr.y -= cosPMinusSinP;\n                    bl.x -= cosPSinP;\n                    bl.y += cosPMinusSinP;\n                    br.x += cosPMinusSinP;\n                    br.y += cosPSinP;\n                }\n                var ml = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2), mt = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2), mr = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2), mb = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2), mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n            }\n            var coords = {\n                tl: tl,\n                tr: tr,\n                br: br,\n                bl: bl\n            };\n            if (!absolute) {\n                coords.ml = ml;\n                coords.mt = mt;\n                coords.mr = mr;\n                coords.mb = mb;\n                coords.mtr = mtr;\n            }\n            return coords;\n        },\n        setCoords: function(ignoreZoom, skipAbsolute) {\n            this.oCoords = this.calcCoords(ignoreZoom);\n            if (!skipAbsolute) {\n                this.aCoords = this.calcCoords(true);\n            }\n            ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n            return this;\n        },\n        _calcRotateMatrix: function() {\n            if (this.angle) {\n                var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n                return [ cos, sin, -sin, cos, 0, 0 ];\n            }\n            return fabric.iMatrix.concat();\n        },\n        _calcTranslateMatrix: function() {\n            var center = this.getCenterPoint();\n            return [ 1, 0, 0, 1, center.x, center.y ];\n        },\n        transformMatrixKey: function(skipGroup) {\n            var sep = \"_\", prefix = \"\";\n            if (!skipGroup && this.group) {\n                prefix = this.group.transformMatrixKey(skipGroup) + sep;\n            }\n            return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY + sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY + sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n        },\n        calcTransformMatrix: function(skipGroup) {\n            if (skipGroup) {\n                return this.calcOwnMatrix();\n            }\n            var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n            if (cache.key === key) {\n                return cache.value;\n            }\n            var matrix = this.calcOwnMatrix();\n            if (this.group) {\n                matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n            }\n            cache.key = key;\n            cache.value = matrix;\n            return matrix;\n        },\n        calcOwnMatrix: function() {\n            var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n            if (cache.key === key) {\n                return cache.value;\n            }\n            var matrix = this._calcTranslateMatrix(), rotateMatrix, dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n            if (this.angle) {\n                rotateMatrix = this._calcRotateMatrix();\n                matrix = multiplyMatrices(matrix, rotateMatrix);\n            }\n            matrix = multiplyMatrices(matrix, dimensionMatrix);\n            cache.key = key;\n            cache.value = matrix;\n            return matrix;\n        },\n        _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n            var skewMatrix, scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1), scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1), scaleMatrix = [ scaleX, 0, 0, scaleY, 0, 0 ];\n            if (skewX) {\n                skewMatrix = [ 1, 0, Math.tan(degreesToRadians(skewX)), 1 ];\n                scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n            }\n            if (skewY) {\n                skewMatrix = [ 1, Math.tan(degreesToRadians(skewY)), 0, 1 ];\n                scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n            }\n            return scaleMatrix;\n        },\n        _getNonTransformedDimensions: function() {\n            var strokeWidth = this.strokeWidth, w = this.width + strokeWidth, h = this.height + strokeWidth;\n            return {\n                x: w,\n                y: h\n            };\n        },\n        _getTransformedDimensions: function(skewX, skewY) {\n            if (typeof skewX === \"undefined\") {\n                skewX = this.skewX;\n            }\n            if (typeof skewY === \"undefined\") {\n                skewY = this.skewY;\n            }\n            var dimensions = this._getNonTransformedDimensions();\n            if (skewX === 0 && skewY === 0) {\n                return {\n                    x: dimensions.x * this.scaleX,\n                    y: dimensions.y * this.scaleY\n                };\n            }\n            var dimX = dimensions.x / 2, dimY = dimensions.y / 2, points = [ {\n                x: -dimX,\n                y: -dimY\n            }, {\n                x: dimX,\n                y: -dimY\n            }, {\n                x: -dimX,\n                y: dimY\n            }, {\n                x: dimX,\n                y: dimY\n            } ], i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false), bbox;\n            for (i = 0; i < points.length; i++) {\n                points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n            }\n            bbox = fabric.util.makeBoundingBoxFromPoints(points);\n            return {\n                x: bbox.width,\n                y: bbox.height\n            };\n        },\n        _calculateCurrentDimensions: function() {\n            var vpt = this.getViewportTransform(), dim = this._getTransformedDimensions(), p = fabric.util.transformPoint(dim, vpt, true);\n            return p.scalarAdd(2 * this.padding);\n        }\n    });\n})();\n\nfabric.util.object.extend(fabric.Object.prototype, {\n    sendToBack: function() {\n        if (this.group) {\n            fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n        } else {\n            this.canvas.sendToBack(this);\n        }\n        return this;\n    },\n    bringToFront: function() {\n        if (this.group) {\n            fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n        } else {\n            this.canvas.bringToFront(this);\n        }\n        return this;\n    },\n    sendBackwards: function(intersecting) {\n        if (this.group) {\n            fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n        } else {\n            this.canvas.sendBackwards(this, intersecting);\n        }\n        return this;\n    },\n    bringForward: function(intersecting) {\n        if (this.group) {\n            fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n        } else {\n            this.canvas.bringForward(this, intersecting);\n        }\n        return this;\n    },\n    moveTo: function(index) {\n        if (this.group && this.group.type !== \"activeSelection\") {\n            fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n        } else {\n            this.canvas.moveTo(this, index);\n        }\n        return this;\n    }\n});\n\n(function() {\n    function getSvgColorString(prop, value) {\n        if (!value) {\n            return prop + \": none; \";\n        } else if (value.toLive) {\n            return prop + \": url(#SVGID_\" + value.id + \"); \";\n        } else {\n            var color = new fabric.Color(value), str = prop + \": \" + color.toRgb() + \"; \", opacity = color.getAlpha();\n            if (opacity !== 1) {\n                str += prop + \"-opacity: \" + opacity.toString() + \"; \";\n            }\n            return str;\n        }\n    }\n    var toFixed = fabric.util.toFixed;\n    fabric.util.object.extend(fabric.Object.prototype, {\n        getSvgStyles: function(skipShadow) {\n            var fillRule = this.fillRule, strokeWidth = this.strokeWidth ? this.strokeWidth : \"0\", strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(\" \") : \"none\", strokeLineCap = this.strokeLineCap ? this.strokeLineCap : \"butt\", strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : \"miter\", strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : \"4\", opacity = typeof this.opacity !== \"undefined\" ? this.opacity : \"1\", visibility = this.visible ? \"\" : \" visibility: hidden;\", filter = skipShadow ? \"\" : this.getSvgFilter(), fill = getSvgColorString(\"fill\", this.fill), stroke = getSvgColorString(\"stroke\", this.stroke);\n            return [ stroke, \"stroke-width: \", strokeWidth, \"; \", \"stroke-dasharray: \", strokeDashArray, \"; \", \"stroke-linecap: \", strokeLineCap, \"; \", \"stroke-linejoin: \", strokeLineJoin, \"; \", \"stroke-miterlimit: \", strokeMiterLimit, \"; \", fill, \"fill-rule: \", fillRule, \"; \", \"opacity: \", opacity, \";\", filter, visibility ].join(\"\");\n        },\n        getSvgSpanStyles: function(style, useWhiteSpace) {\n            var term = \"; \";\n            var fontFamily = style.fontFamily ? \"font-family: \" + (style.fontFamily.indexOf(\"'\") === -1 && style.fontFamily.indexOf('\"') === -1 ? \"'\" + style.fontFamily + \"'\" : style.fontFamily) + term : \"\";\n            var strokeWidth = style.strokeWidth ? \"stroke-width: \" + style.strokeWidth + term : \"\", fontFamily = fontFamily, fontSize = style.fontSize ? \"font-size: \" + style.fontSize + \"px\" + term : \"\", fontStyle = style.fontStyle ? \"font-style: \" + style.fontStyle + term : \"\", fontWeight = style.fontWeight ? \"font-weight: \" + style.fontWeight + term : \"\", fill = style.fill ? getSvgColorString(\"fill\", style.fill) : \"\", stroke = style.stroke ? getSvgColorString(\"stroke\", style.stroke) : \"\", textDecoration = this.getSvgTextDecoration(style), deltaY = style.deltaY ? \"baseline-shift: \" + -style.deltaY + \"; \" : \"\";\n            if (textDecoration) {\n                textDecoration = \"text-decoration: \" + textDecoration + term;\n            }\n            return [ stroke, strokeWidth, fontFamily, fontSize, fontStyle, fontWeight, textDecoration, fill, deltaY, useWhiteSpace ? \"white-space: pre; \" : \"\" ].join(\"\");\n        },\n        getSvgTextDecoration: function(style) {\n            if (\"overline\" in style || \"underline\" in style || \"linethrough\" in style) {\n                return (style.overline ? \"overline \" : \"\") + (style.underline ? \"underline \" : \"\") + (style.linethrough ? \"line-through \" : \"\");\n            }\n            return \"\";\n        },\n        getSvgFilter: function() {\n            return this.shadow ? \"filter: url(#SVGID_\" + this.shadow.id + \");\" : \"\";\n        },\n        getSvgId: function() {\n            return this.id ? 'id=\"' + this.id + '\" ' : \"\";\n        },\n        getSvgTransform: function() {\n            var angle = this.angle, skewX = this.skewX % 360, skewY = this.skewY % 360, center = this.getCenterPoint(), NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS, translatePart = \"translate(\" + toFixed(center.x, NUM_FRACTION_DIGITS) + \" \" + toFixed(center.y, NUM_FRACTION_DIGITS) + \")\", anglePart = angle !== 0 ? \" rotate(\" + toFixed(angle, NUM_FRACTION_DIGITS) + \")\" : \"\", scalePart = this.scaleX === 1 && this.scaleY === 1 ? \"\" : \" scale(\" + toFixed(this.scaleX, NUM_FRACTION_DIGITS) + \" \" + toFixed(this.scaleY, NUM_FRACTION_DIGITS) + \")\", skewXPart = skewX !== 0 ? \" skewX(\" + toFixed(skewX, NUM_FRACTION_DIGITS) + \")\" : \"\", skewYPart = skewY !== 0 ? \" skewY(\" + toFixed(skewY, NUM_FRACTION_DIGITS) + \")\" : \"\", flipXPart = this.flipX ? \" matrix(-1 0 0 1 0 0) \" : \"\", flipYPart = this.flipY ? \" matrix(1 0 0 -1 0 0)\" : \"\";\n            return [ translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart ].join(\"\");\n        },\n        getSvgTransformMatrix: function() {\n            return this.transformMatrix ? \" matrix(\" + this.transformMatrix.join(\" \") + \") \" : \"\";\n        },\n        _setSVGBg: function(textBgRects) {\n            if (this.backgroundColor) {\n                var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n                textBgRects.push(\"\\t\\t<rect \", this._getFillAttributes(this.backgroundColor), ' x=\"', toFixed(-this.width / 2, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(-this.height / 2, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(this.width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(this.height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n            }\n        },\n        _createBaseSVGMarkup: function() {\n            var markup = [];\n            if (this.fill && this.fill.toLive) {\n                markup.push(this.fill.toSVG(this, false));\n            }\n            if (this.stroke && this.stroke.toLive) {\n                markup.push(this.stroke.toSVG(this, false));\n            }\n            if (this.shadow) {\n                markup.push(this.shadow.toSVG(this));\n            }\n            return markup;\n        },\n        addPaintOrder: function() {\n            return this.paintFirst !== \"fill\" ? ' paint-order=\"' + this.paintFirst + '\" ' : \"\";\n        }\n    });\n})();\n\n(function() {\n    var extend = fabric.util.object.extend, originalSet = \"stateProperties\";\n    function saveProps(origin, destination, props) {\n        var tmpObj = {}, deep = true;\n        props.forEach(function(prop) {\n            tmpObj[prop] = origin[prop];\n        });\n        extend(origin[destination], tmpObj, deep);\n    }\n    function _isEqual(origValue, currentValue, firstPass) {\n        if (origValue === currentValue) {\n            return true;\n        } else if (Array.isArray(origValue)) {\n            if (origValue.length !== currentValue.length) {\n                return false;\n            }\n            for (var i = 0, len = origValue.length; i < len; i++) {\n                if (!_isEqual(origValue[i], currentValue[i])) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (origValue && typeof origValue === \"object\") {\n            var keys = Object.keys(origValue), key;\n            if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n                return false;\n            }\n            for (var i = 0, len = keys.length; i < len; i++) {\n                key = keys[i];\n                if (!_isEqual(origValue[key], currentValue[key])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    fabric.util.object.extend(fabric.Object.prototype, {\n        hasStateChanged: function(propertySet) {\n            propertySet = propertySet || originalSet;\n            var dashedPropertySet = \"_\" + propertySet;\n            if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n                return true;\n            }\n            return !_isEqual(this[dashedPropertySet], this, true);\n        },\n        saveState: function(options) {\n            var propertySet = options && options.propertySet || originalSet, destination = \"_\" + propertySet;\n            if (!this[destination]) {\n                return this.setupState(options);\n            }\n            saveProps(this, destination, this[propertySet]);\n            if (options && options.stateProperties) {\n                saveProps(this, destination, options.stateProperties);\n            }\n            return this;\n        },\n        setupState: function(options) {\n            options = options || {};\n            var propertySet = options.propertySet || originalSet;\n            options.propertySet = propertySet;\n            this[\"_\" + propertySet] = {};\n            this.saveState(options);\n            return this;\n        }\n    });\n})();\n\n(function() {\n    var degreesToRadians = fabric.util.degreesToRadians;\n    fabric.util.object.extend(fabric.Object.prototype, {\n        _controlsVisibility: null,\n        _findTargetCorner: function(pointer) {\n            if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n                return false;\n            }\n            var ex = pointer.x, ey = pointer.y, xPoints, lines;\n            this.__corner = 0;\n            for (var i in this.oCoords) {\n                if (!this.isControlVisible(i)) {\n                    continue;\n                }\n                if (i === \"mtr\" && !this.hasRotatingPoint) {\n                    continue;\n                }\n                if (this.get(\"lockUniScaling\") && (i === \"mt\" || i === \"mr\" || i === \"mb\" || i === \"ml\")) {\n                    continue;\n                }\n                lines = this._getImageLines(this.oCoords[i].corner);\n                xPoints = this._findCrossPoints({\n                    x: ex,\n                    y: ey\n                }, lines);\n                if (xPoints !== 0 && xPoints % 2 === 1) {\n                    this.__corner = i;\n                    return i;\n                }\n            }\n            return false;\n        },\n        _setCornerCoords: function() {\n            var coords = this.oCoords, newTheta = degreesToRadians(45 - this.angle), cornerHypotenuse = this.cornerSize * .707106, cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta), sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta), x, y;\n            for (var point in coords) {\n                x = coords[point].x;\n                y = coords[point].y;\n                coords[point].corner = {\n                    tl: {\n                        x: x - sinHalfOffset,\n                        y: y - cosHalfOffset\n                    },\n                    tr: {\n                        x: x + cosHalfOffset,\n                        y: y - sinHalfOffset\n                    },\n                    bl: {\n                        x: x - cosHalfOffset,\n                        y: y + sinHalfOffset\n                    },\n                    br: {\n                        x: x + sinHalfOffset,\n                        y: y + cosHalfOffset\n                    }\n                };\n            }\n        },\n        drawSelectionBackground: function(ctx) {\n            if (!this.selectionBackgroundColor || this.canvas && !this.canvas.interactive || this.canvas && this.canvas._activeObject !== this) {\n                return this;\n            }\n            ctx.save();\n            var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(), vpt = this.canvas.viewportTransform;\n            ctx.translate(center.x, center.y);\n            ctx.scale(1 / vpt[0], 1 / vpt[3]);\n            ctx.rotate(degreesToRadians(this.angle));\n            ctx.fillStyle = this.selectionBackgroundColor;\n            ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n            ctx.restore();\n            return this;\n        },\n        drawBorders: function(ctx, styleOverride) {\n            styleOverride = styleOverride || {};\n            var wh = this._calculateCurrentDimensions(), strokeWidth = 1 / this.borderScaleFactor, width = wh.x + strokeWidth, height = wh.y + strokeWidth, drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== \"undefined\" ? styleOverride.hasRotatingPoint : this.hasRotatingPoint, hasControls = typeof styleOverride.hasControls !== \"undefined\" ? styleOverride.hasControls : this.hasControls, rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== \"undefined\" ? styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n            ctx.save();\n            ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n            this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n            ctx.strokeRect(-width / 2, -height / 2, width, height);\n            if (drawRotatingPoint && this.isControlVisible(\"mtr\") && hasControls) {\n                var rotateHeight = -height / 2;\n                ctx.beginPath();\n                ctx.moveTo(0, rotateHeight);\n                ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n                ctx.stroke();\n            }\n            ctx.restore();\n            return this;\n        },\n        drawBordersInGroup: function(ctx, options, styleOverride) {\n            styleOverride = styleOverride || {};\n            var p = this._getNonTransformedDimensions(), matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX), wh = fabric.util.transformPoint(p, matrix), strokeWidth = 1 / this.borderScaleFactor, width = wh.x + strokeWidth, height = wh.y + strokeWidth;\n            ctx.save();\n            this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n            ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n            ctx.strokeRect(-width / 2, -height / 2, width, height);\n            ctx.restore();\n            return this;\n        },\n        drawControls: function(ctx, styleOverride) {\n            styleOverride = styleOverride || {};\n            var wh = this._calculateCurrentDimensions(), width = wh.x, height = wh.y, scaleOffset = styleOverride.cornerSize || this.cornerSize, left = -(width + scaleOffset) / 2, top = -(height + scaleOffset) / 2, transparentCorners = typeof styleOverride.transparentCorners !== \"undefined\" ? styleOverride.transparentCorners : this.transparentCorners, hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== \"undefined\" ? styleOverride.hasRotatingPoint : this.hasRotatingPoint, methodName = transparentCorners ? \"stroke\" : \"fill\";\n            ctx.save();\n            ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n            if (!this.transparentCorners) {\n                ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n            }\n            this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n            this._drawControl(\"tl\", ctx, methodName, left, top, styleOverride);\n            this._drawControl(\"tr\", ctx, methodName, left + width, top, styleOverride);\n            this._drawControl(\"bl\", ctx, methodName, left, top + height, styleOverride);\n            this._drawControl(\"br\", ctx, methodName, left + width, top + height, styleOverride);\n            if (!this.get(\"lockUniScaling\")) {\n                this._drawControl(\"mt\", ctx, methodName, left + width / 2, top, styleOverride);\n                this._drawControl(\"mb\", ctx, methodName, left + width / 2, top + height, styleOverride);\n                this._drawControl(\"mr\", ctx, methodName, left + width, top + height / 2, styleOverride);\n                this._drawControl(\"ml\", ctx, methodName, left, top + height / 2, styleOverride);\n            }\n            if (hasRotatingPoint) {\n                this._drawControl(\"mtr\", ctx, methodName, left + width / 2, top - this.rotatingPointOffset, styleOverride);\n            }\n            ctx.restore();\n            return this;\n        },\n        _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n            styleOverride = styleOverride || {};\n            if (!this.isControlVisible(control)) {\n                return;\n            }\n            var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n            switch (styleOverride.cornerStyle || this.cornerStyle) {\n              case \"circle\":\n                ctx.beginPath();\n                ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n                ctx[methodName]();\n                if (stroke) {\n                    ctx.stroke();\n                }\n                break;\n\n              default:\n                this.transparentCorners || ctx.clearRect(left, top, size, size);\n                ctx[methodName + \"Rect\"](left, top, size, size);\n                if (stroke) {\n                    ctx.strokeRect(left, top, size, size);\n                }\n            }\n        },\n        isControlVisible: function(controlName) {\n            return this._getControlsVisibility()[controlName];\n        },\n        setControlVisible: function(controlName, visible) {\n            this._getControlsVisibility()[controlName] = visible;\n            return this;\n        },\n        setControlsVisibility: function(options) {\n            options || (options = {});\n            for (var p in options) {\n                this.setControlVisible(p, options[p]);\n            }\n            return this;\n        },\n        _getControlsVisibility: function() {\n            if (!this._controlsVisibility) {\n                this._controlsVisibility = {\n                    tl: true,\n                    tr: true,\n                    br: true,\n                    bl: true,\n                    ml: true,\n                    mt: true,\n                    mr: true,\n                    mb: true,\n                    mtr: true\n                };\n            }\n            return this._controlsVisibility;\n        },\n        onDeselect: function() {},\n        onSelect: function() {}\n    });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, {\n    FX_DURATION: 500,\n    fxCenterObjectH: function(object, callbacks) {\n        callbacks = callbacks || {};\n        var empty = function() {}, onComplete = callbacks.onComplete || empty, onChange = callbacks.onChange || empty, _this = this;\n        fabric.util.animate({\n            startValue: object.left,\n            endValue: this.getCenter().left,\n            duration: this.FX_DURATION,\n            onChange: function(value) {\n                object.set(\"left\", value);\n                _this.requestRenderAll();\n                onChange();\n            },\n            onComplete: function() {\n                object.setCoords();\n                onComplete();\n            }\n        });\n        return this;\n    },\n    fxCenterObjectV: function(object, callbacks) {\n        callbacks = callbacks || {};\n        var empty = function() {}, onComplete = callbacks.onComplete || empty, onChange = callbacks.onChange || empty, _this = this;\n        fabric.util.animate({\n            startValue: object.top,\n            endValue: this.getCenter().top,\n            duration: this.FX_DURATION,\n            onChange: function(value) {\n                object.set(\"top\", value);\n                _this.requestRenderAll();\n                onChange();\n            },\n            onComplete: function() {\n                object.setCoords();\n                onComplete();\n            }\n        });\n        return this;\n    },\n    fxRemove: function(object, callbacks) {\n        callbacks = callbacks || {};\n        var empty = function() {}, onComplete = callbacks.onComplete || empty, onChange = callbacks.onChange || empty, _this = this;\n        fabric.util.animate({\n            startValue: object.opacity,\n            endValue: 0,\n            duration: this.FX_DURATION,\n            onChange: function(value) {\n                object.set(\"opacity\", value);\n                _this.requestRenderAll();\n                onChange();\n            },\n            onComplete: function() {\n                _this.remove(object);\n                onComplete();\n            }\n        });\n        return this;\n    }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, {\n    animate: function() {\n        if (arguments[0] && typeof arguments[0] === \"object\") {\n            var propsToAnimate = [], prop, skipCallbacks;\n            for (prop in arguments[0]) {\n                propsToAnimate.push(prop);\n            }\n            for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n                prop = propsToAnimate[i];\n                skipCallbacks = i !== len - 1;\n                this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n            }\n        } else {\n            this._animate.apply(this, arguments);\n        }\n        return this;\n    },\n    _animate: function(property, to, options, skipCallbacks) {\n        var _this = this, propPair;\n        to = to.toString();\n        if (!options) {\n            options = {};\n        } else {\n            options = fabric.util.object.clone(options);\n        }\n        if (~property.indexOf(\".\")) {\n            propPair = property.split(\".\");\n        }\n        var currentValue = propPair ? this.get(propPair[0])[propPair[1]] : this.get(property);\n        if (!(\"from\" in options)) {\n            options.from = currentValue;\n        }\n        if (~to.indexOf(\"=\")) {\n            to = currentValue + parseFloat(to.replace(\"=\", \"\"));\n        } else {\n            to = parseFloat(to);\n        }\n        fabric.util.animate({\n            startValue: options.from,\n            endValue: to,\n            byValue: options.by,\n            easing: options.easing,\n            duration: options.duration,\n            abort: options.abort && function() {\n                return options.abort.call(_this);\n            },\n            onChange: function(value, valueProgress, timeProgress) {\n                if (propPair) {\n                    _this[propPair[0]][propPair[1]] = value;\n                } else {\n                    _this.set(property, value);\n                }\n                if (skipCallbacks) {\n                    return;\n                }\n                options.onChange && options.onChange(value, valueProgress, timeProgress);\n            },\n            onComplete: function(value, valueProgress, timeProgress) {\n                if (skipCallbacks) {\n                    return;\n                }\n                _this.setCoords();\n                options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n            }\n        });\n    }\n});\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, clone = fabric.util.object.clone, coordProps = {\n        x1: 1,\n        x2: 1,\n        y1: 1,\n        y2: 1\n    }, supportsLineDash = fabric.StaticCanvas.supports(\"setLineDash\");\n    if (fabric.Line) {\n        fabric.warn(\"fabric.Line is already defined\");\n        return;\n    }\n    fabric.Line = fabric.util.createClass(fabric.Object, {\n        type: \"line\",\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: 0,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"x1\", \"x2\", \"y1\", \"y2\"),\n        initialize: function(points, options) {\n            if (!points) {\n                points = [ 0, 0, 0, 0 ];\n            }\n            this.callSuper(\"initialize\", options);\n            this.set(\"x1\", points[0]);\n            this.set(\"y1\", points[1]);\n            this.set(\"x2\", points[2]);\n            this.set(\"y2\", points[3]);\n            this._setWidthHeight(options);\n        },\n        _setWidthHeight: function(options) {\n            options || (options = {});\n            this.width = Math.abs(this.x2 - this.x1);\n            this.height = Math.abs(this.y2 - this.y1);\n            this.left = \"left\" in options ? options.left : this._getLeftToOriginX();\n            this.top = \"top\" in options ? options.top : this._getTopToOriginY();\n        },\n        _set: function(key, value) {\n            this.callSuper(\"_set\", key, value);\n            if (typeof coordProps[key] !== \"undefined\") {\n                this._setWidthHeight();\n            }\n            return this;\n        },\n        _getLeftToOriginX: makeEdgeToOriginGetter({\n            origin: \"originX\",\n            axis1: \"x1\",\n            axis2: \"x2\",\n            dimension: \"width\"\n        }, {\n            nearest: \"left\",\n            center: \"center\",\n            farthest: \"right\"\n        }),\n        _getTopToOriginY: makeEdgeToOriginGetter({\n            origin: \"originY\",\n            axis1: \"y1\",\n            axis2: \"y2\",\n            dimension: \"height\"\n        }, {\n            nearest: \"top\",\n            center: \"center\",\n            farthest: \"bottom\"\n        }),\n        _render: function(ctx) {\n            ctx.beginPath();\n            if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n                var p = this.calcLinePoints();\n                ctx.moveTo(p.x1, p.y1);\n                ctx.lineTo(p.x2, p.y2);\n            }\n            ctx.lineWidth = this.strokeWidth;\n            var origStrokeStyle = ctx.strokeStyle;\n            ctx.strokeStyle = this.stroke || ctx.fillStyle;\n            this.stroke && this._renderStroke(ctx);\n            ctx.strokeStyle = origStrokeStyle;\n        },\n        _renderDashedStroke: function(ctx) {\n            var p = this.calcLinePoints();\n            ctx.beginPath();\n            fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n            ctx.closePath();\n        },\n        _findCenterFromElement: function() {\n            return {\n                x: (this.x1 + this.x2) / 2,\n                y: (this.y1 + this.y2) / 2\n            };\n        },\n        toObject: function(propertiesToInclude) {\n            return extend(this.callSuper(\"toObject\", propertiesToInclude), this.calcLinePoints());\n        },\n        _getNonTransformedDimensions: function() {\n            var dim = this.callSuper(\"_getNonTransformedDimensions\");\n            if (this.strokeLineCap === \"butt\") {\n                if (this.width === 0) {\n                    dim.y -= this.strokeWidth;\n                }\n                if (this.height === 0) {\n                    dim.x -= this.strokeWidth;\n                }\n            }\n            return dim;\n        },\n        calcLinePoints: function() {\n            var xMult = this.x1 <= this.x2 ? -1 : 1, yMult = this.y1 <= this.y2 ? -1 : 1, x1 = xMult * this.width * .5, y1 = yMult * this.height * .5, x2 = xMult * this.width * -.5, y2 = yMult * this.height * -.5;\n            return {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), p = this.calcLinePoints();\n            markup.push(\"<line \", this.getSvgId(), 'x1=\"', p.x1, '\" y1=\"', p.y1, '\" x2=\"', p.x2, '\" y2=\"', p.y2, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"/>\\n');\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        }\n    });\n    fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"x1 y1 x2 y2\".split(\" \"));\n    fabric.Line.fromElement = function(element, callback, options) {\n        options = options || {};\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES), points = [ parsedAttributes.x1 || 0, parsedAttributes.y1 || 0, parsedAttributes.x2 || 0, parsedAttributes.y2 || 0 ];\n        callback(new fabric.Line(points, extend(parsedAttributes, options)));\n    };\n    fabric.Line.fromObject = function(object, callback) {\n        function _callback(instance) {\n            delete instance.points;\n            callback && callback(instance);\n        }\n        var options = clone(object, true);\n        options.points = [ object.x1, object.y1, object.x2, object.y2 ];\n        fabric.Object._fromObject(\"Line\", options, _callback, \"points\");\n    };\n    function makeEdgeToOriginGetter(propertyNames, originValues) {\n        var origin = propertyNames.origin, axis1 = propertyNames.axis1, axis2 = propertyNames.axis2, dimension = propertyNames.dimension, nearest = originValues.nearest, center = originValues.center, farthest = originValues.farthest;\n        return function() {\n            switch (this.get(origin)) {\n              case nearest:\n                return Math.min(this.get(axis1), this.get(axis2));\n\n              case center:\n                return Math.min(this.get(axis1), this.get(axis2)) + .5 * this.get(dimension);\n\n              case farthest:\n                return Math.max(this.get(axis1), this.get(axis2));\n            }\n        };\n    }\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), pi = Math.PI;\n    if (fabric.Circle) {\n        fabric.warn(\"fabric.Circle is already defined.\");\n        return;\n    }\n    fabric.Circle = fabric.util.createClass(fabric.Object, {\n        type: \"circle\",\n        radius: 0,\n        startAngle: 0,\n        endAngle: pi * 2,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"radius\", \"startAngle\", \"endAngle\"),\n        _set: function(key, value) {\n            this.callSuper(\"_set\", key, value);\n            if (key === \"radius\") {\n                this.setRadius(value);\n            }\n            return this;\n        },\n        toObject: function(propertiesToInclude) {\n            return this.callSuper(\"toObject\", [ \"radius\", \"startAngle\", \"endAngle\" ].concat(propertiesToInclude));\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), x = 0, y = 0, angle = (this.endAngle - this.startAngle) % (2 * pi);\n            if (angle === 0) {\n                markup.push(\"<circle \", this.getSvgId(), 'cx=\"' + x + '\" cy=\"' + y + '\" ', 'r=\"', this.radius, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), \" \", this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), \"/>\\n\");\n            } else {\n                var startX = fabric.util.cos(this.startAngle) * this.radius, startY = fabric.util.sin(this.startAngle) * this.radius, endX = fabric.util.cos(this.endAngle) * this.radius, endY = fabric.util.sin(this.endAngle) * this.radius, largeFlag = angle > pi ? \"1\" : \"0\";\n                markup.push('<path d=\"M ' + startX + \" \" + startY, \" A \" + this.radius + \" \" + this.radius, \" 0 \", +largeFlag + \" 1\", \" \" + endX + \" \" + endY, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), \" \", this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), '\"/>\\n');\n            }\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        _render: function(ctx) {\n            ctx.beginPath();\n            ctx.arc(0, 0, this.radius, this.startAngle, this.endAngle, false);\n            this._renderPaintInOrder(ctx);\n        },\n        getRadiusX: function() {\n            return this.get(\"radius\") * this.get(\"scaleX\");\n        },\n        getRadiusY: function() {\n            return this.get(\"radius\") * this.get(\"scaleY\");\n        },\n        setRadius: function(value) {\n            this.radius = value;\n            return this.set(\"width\", value * 2).set(\"height\", value * 2);\n        }\n    });\n    fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"cx cy r\".split(\" \"));\n    fabric.Circle.fromElement = function(element, callback) {\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n        if (!isValidRadius(parsedAttributes)) {\n            throw new Error(\"value of `r` attribute is required and can not be negative\");\n        }\n        parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n        parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n        callback(new fabric.Circle(parsedAttributes));\n    };\n    function isValidRadius(attributes) {\n        return \"radius\" in attributes && attributes.radius >= 0;\n    }\n    fabric.Circle.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Circle\", object, callback);\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.Triangle) {\n        fabric.warn(\"fabric.Triangle is already defined\");\n        return;\n    }\n    fabric.Triangle = fabric.util.createClass(fabric.Object, {\n        type: \"triangle\",\n        width: 100,\n        height: 100,\n        _render: function(ctx) {\n            var widthBy2 = this.width / 2, heightBy2 = this.height / 2;\n            ctx.beginPath();\n            ctx.moveTo(-widthBy2, heightBy2);\n            ctx.lineTo(0, -heightBy2);\n            ctx.lineTo(widthBy2, heightBy2);\n            ctx.closePath();\n            this._renderPaintInOrder(ctx);\n        },\n        _renderDashedStroke: function(ctx) {\n            var widthBy2 = this.width / 2, heightBy2 = this.height / 2;\n            ctx.beginPath();\n            fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n            ctx.closePath();\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), widthBy2 = this.width / 2, heightBy2 = this.height / 2, points = [ -widthBy2 + \" \" + heightBy2, \"0 \" + -heightBy2, widthBy2 + \" \" + heightBy2 ].join(\",\");\n            markup.push(\"<polygon \", this.getSvgId(), 'points=\"', points, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), '\"', this.addPaintOrder(), \"/>\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        }\n    });\n    fabric.Triangle.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Triangle\", object, callback);\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), piBy2 = Math.PI * 2;\n    if (fabric.Ellipse) {\n        fabric.warn(\"fabric.Ellipse is already defined.\");\n        return;\n    }\n    fabric.Ellipse = fabric.util.createClass(fabric.Object, {\n        type: \"ellipse\",\n        rx: 0,\n        ry: 0,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"rx\", \"ry\"),\n        initialize: function(options) {\n            this.callSuper(\"initialize\", options);\n            this.set(\"rx\", options && options.rx || 0);\n            this.set(\"ry\", options && options.ry || 0);\n        },\n        _set: function(key, value) {\n            this.callSuper(\"_set\", key, value);\n            switch (key) {\n              case \"rx\":\n                this.rx = value;\n                this.set(\"width\", value * 2);\n                break;\n\n              case \"ry\":\n                this.ry = value;\n                this.set(\"height\", value * 2);\n                break;\n            }\n            return this;\n        },\n        getRx: function() {\n            return this.get(\"rx\") * this.get(\"scaleX\");\n        },\n        getRy: function() {\n            return this.get(\"ry\") * this.get(\"scaleY\");\n        },\n        toObject: function(propertiesToInclude) {\n            return this.callSuper(\"toObject\", [ \"rx\", \"ry\" ].concat(propertiesToInclude));\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup();\n            markup.push(\"<ellipse \", this.getSvgId(), 'cx=\"0\" cy=\"0\" ', 'rx=\"', this.rx, '\" ry=\"', this.ry, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), \"/>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        _render: function(ctx) {\n            ctx.beginPath();\n            ctx.save();\n            ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n            ctx.arc(0, 0, this.rx, 0, piBy2, false);\n            ctx.restore();\n            this._renderPaintInOrder(ctx);\n        }\n    });\n    fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"cx cy rx ry\".split(\" \"));\n    fabric.Ellipse.fromElement = function(element, callback) {\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n        parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n        parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n        callback(new fabric.Ellipse(parsedAttributes));\n    };\n    fabric.Ellipse.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Ellipse\", object, callback);\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend;\n    if (fabric.Rect) {\n        fabric.warn(\"fabric.Rect is already defined\");\n        return;\n    }\n    fabric.Rect = fabric.util.createClass(fabric.Object, {\n        stateProperties: fabric.Object.prototype.stateProperties.concat(\"rx\", \"ry\"),\n        type: \"rect\",\n        rx: 0,\n        ry: 0,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"rx\", \"ry\"),\n        initialize: function(options) {\n            this.callSuper(\"initialize\", options);\n            this._initRxRy();\n        },\n        _initRxRy: function() {\n            if (this.rx && !this.ry) {\n                this.ry = this.rx;\n            } else if (this.ry && !this.rx) {\n                this.rx = this.ry;\n            }\n        },\n        _render: function(ctx) {\n            if (this.width === 1 && this.height === 1) {\n                ctx.fillRect(-.5, -.5, 1, 1);\n                return;\n            }\n            var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0, ry = this.ry ? Math.min(this.ry, this.height / 2) : 0, w = this.width, h = this.height, x = -this.width / 2, y = -this.height / 2, isRounded = rx !== 0 || ry !== 0, k = 1 - .5522847498;\n            ctx.beginPath();\n            ctx.moveTo(x + rx, y);\n            ctx.lineTo(x + w - rx, y);\n            isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n            ctx.lineTo(x + w, y + h - ry);\n            isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n            ctx.lineTo(x + rx, y + h);\n            isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n            ctx.lineTo(x, y + ry);\n            isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n            ctx.closePath();\n            this._renderPaintInOrder(ctx);\n        },\n        _renderDashedStroke: function(ctx) {\n            var x = -this.width / 2, y = -this.height / 2, w = this.width, h = this.height;\n            ctx.beginPath();\n            fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n            ctx.closePath();\n        },\n        toObject: function(propertiesToInclude) {\n            return this.callSuper(\"toObject\", [ \"rx\", \"ry\" ].concat(propertiesToInclude));\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n            markup.push(\"<rect \", this.getSvgId(), 'x=\"', x, '\" y=\"', y, '\" rx=\"', this.get(\"rx\"), '\" ry=\"', this.get(\"ry\"), '\" width=\"', this.width, '\" height=\"', this.height, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), \"/>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        }\n    });\n    fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"x y rx ry width height\".split(\" \"));\n    fabric.Rect.fromElement = function(element, callback, options) {\n        if (!element) {\n            return callback(null);\n        }\n        options = options || {};\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n        parsedAttributes.left = parsedAttributes.left || 0;\n        parsedAttributes.top = parsedAttributes.top || 0;\n        var rect = new fabric.Rect(extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n        rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n        callback(rect);\n    };\n    fabric.Rect.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Rect\", object, callback);\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, min = fabric.util.array.min, max = fabric.util.array.max, toFixed = fabric.util.toFixed;\n    if (fabric.Polyline) {\n        fabric.warn(\"fabric.Polyline is already defined\");\n        return;\n    }\n    fabric.Polyline = fabric.util.createClass(fabric.Object, {\n        type: \"polyline\",\n        points: null,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"points\"),\n        initialize: function(points, options) {\n            options = options || {};\n            this.points = points || [];\n            this.callSuper(\"initialize\", options);\n            var calcDim = this._calcDimensions();\n            if (typeof options.left === \"undefined\") {\n                this.left = calcDim.left;\n            }\n            if (typeof options.top === \"undefined\") {\n                this.top = calcDim.top;\n            }\n            this.width = calcDim.width;\n            this.height = calcDim.height;\n            this.pathOffset = {\n                x: calcDim.left + this.width / 2,\n                y: calcDim.top + this.height / 2\n            };\n        },\n        _calcDimensions: function() {\n            var points = this.points, minX = min(points, \"x\") || 0, minY = min(points, \"y\") || 0, maxX = max(points, \"x\") || 0, maxY = max(points, \"y\") || 0, width = maxX - minX, height = maxY - minY;\n            return {\n                left: minX,\n                top: minY,\n                width: width,\n                height: height\n            };\n        },\n        toObject: function(propertiesToInclude) {\n            return extend(this.callSuper(\"toObject\", propertiesToInclude), {\n                points: this.points.concat()\n            });\n        },\n        toSVG: function(reviver) {\n            var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y, markup = this._createBaseSVGMarkup(), NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n            for (var i = 0, len = this.points.length; i < len; i++) {\n                points.push(toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), \",\", toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), \" \");\n            }\n            markup.push(\"<\", this.type, \" \", this.getSvgId(), 'points=\"', points.join(\"\"), '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), \" \", this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), \"/>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        commonRender: function(ctx) {\n            var point, len = this.points.length, x = this.pathOffset.x, y = this.pathOffset.y;\n            if (!len || isNaN(this.points[len - 1].y)) {\n                return false;\n            }\n            ctx.beginPath();\n            ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n            for (var i = 0; i < len; i++) {\n                point = this.points[i];\n                ctx.lineTo(point.x - x, point.y - y);\n            }\n            return true;\n        },\n        _render: function(ctx) {\n            if (!this.commonRender(ctx)) {\n                return;\n            }\n            this._renderPaintInOrder(ctx);\n        },\n        _renderDashedStroke: function(ctx) {\n            var p1, p2;\n            ctx.beginPath();\n            for (var i = 0, len = this.points.length; i < len; i++) {\n                p1 = this.points[i];\n                p2 = this.points[i + 1] || p1;\n                fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n            }\n        },\n        complexity: function() {\n            return this.get(\"points\").length;\n        }\n    });\n    fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n    fabric.Polyline.fromElement = function(element, callback, options) {\n        if (!element) {\n            return callback(null);\n        }\n        options || (options = {});\n        var points = fabric.parsePointsAttribute(element.getAttribute(\"points\")), parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n        callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n    };\n    fabric.Polyline.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Polyline\", object, callback, \"points\");\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend;\n    if (fabric.Polygon) {\n        fabric.warn(\"fabric.Polygon is already defined\");\n        return;\n    }\n    fabric.Polygon = fabric.util.createClass(fabric.Polyline, {\n        type: \"polygon\",\n        _render: function(ctx) {\n            if (!this.commonRender(ctx)) {\n                return;\n            }\n            ctx.closePath();\n            this._renderPaintInOrder(ctx);\n        },\n        _renderDashedStroke: function(ctx) {\n            this.callSuper(\"_renderDashedStroke\", ctx);\n            ctx.closePath();\n        }\n    });\n    fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n    fabric.Polygon.fromElement = function(element, callback, options) {\n        if (!element) {\n            return callback(null);\n        }\n        options || (options = {});\n        var points = fabric.parsePointsAttribute(element.getAttribute(\"points\")), parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n        callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n    };\n    fabric.Polygon.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Polygon\", object, callback, \"points\");\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), min = fabric.util.array.min, max = fabric.util.array.max, extend = fabric.util.object.extend, _toString = Object.prototype.toString, drawArc = fabric.util.drawArc, commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n    }, repeatedCommands = {\n        m: \"l\",\n        M: \"L\"\n    };\n    if (fabric.Path) {\n        fabric.warn(\"fabric.Path is already defined\");\n        return;\n    }\n    fabric.Path = fabric.util.createClass(fabric.Object, {\n        type: \"path\",\n        path: null,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"path\", \"fillRule\"),\n        stateProperties: fabric.Object.prototype.stateProperties.concat(\"path\"),\n        initialize: function(path, options) {\n            options = options || {};\n            this.callSuper(\"initialize\", options);\n            if (!path) {\n                path = [];\n            }\n            var fromArray = _toString.call(path) === \"[object Array]\";\n            this.path = fromArray ? path : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n            if (!this.path) {\n                return;\n            }\n            if (!fromArray) {\n                this.path = this._parsePath();\n            }\n            this._setPositionDimensions(options);\n        },\n        _setPositionDimensions: function(options) {\n            var calcDim = this._parseDimensions();\n            this.width = calcDim.width;\n            this.height = calcDim.height;\n            if (typeof options.left === \"undefined\") {\n                this.left = calcDim.left;\n            }\n            if (typeof options.top === \"undefined\") {\n                this.top = calcDim.top;\n            }\n            this.pathOffset = this.pathOffset || {\n                x: calcDim.left + this.width / 2,\n                y: calcDim.top + this.height / 2\n            };\n        },\n        _renderPathCommands: function(ctx) {\n            var current, previous = null, subpathStartX = 0, subpathStartY = 0, x = 0, y = 0, controlX = 0, controlY = 0, tempX, tempY, l = -this.pathOffset.x, t = -this.pathOffset.y;\n            ctx.beginPath();\n            for (var i = 0, len = this.path.length; i < len; ++i) {\n                current = this.path[i];\n                switch (current[0]) {\n                  case \"l\":\n                    x += current[1];\n                    y += current[2];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"L\":\n                    x = current[1];\n                    y = current[2];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"h\":\n                    x += current[1];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"H\":\n                    x = current[1];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"v\":\n                    y += current[1];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"V\":\n                    y = current[1];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"m\":\n                    x += current[1];\n                    y += current[2];\n                    subpathStartX = x;\n                    subpathStartY = y;\n                    ctx.moveTo(x + l, y + t);\n                    break;\n\n                  case \"M\":\n                    x = current[1];\n                    y = current[2];\n                    subpathStartX = x;\n                    subpathStartY = y;\n                    ctx.moveTo(x + l, y + t);\n                    break;\n\n                  case \"c\":\n                    tempX = x + current[5];\n                    tempY = y + current[6];\n                    controlX = x + current[3];\n                    controlY = y + current[4];\n                    ctx.bezierCurveTo(x + current[1] + l, y + current[2] + t, controlX + l, controlY + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"C\":\n                    x = current[5];\n                    y = current[6];\n                    controlX = current[3];\n                    controlY = current[4];\n                    ctx.bezierCurveTo(current[1] + l, current[2] + t, controlX + l, controlY + t, x + l, y + t);\n                    break;\n\n                  case \"s\":\n                    tempX = x + current[3];\n                    tempY = y + current[4];\n                    if (previous[0].match(/[CcSs]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    ctx.bezierCurveTo(controlX + l, controlY + t, x + current[1] + l, y + current[2] + t, tempX + l, tempY + t);\n                    controlX = x + current[1];\n                    controlY = y + current[2];\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"S\":\n                    tempX = current[3];\n                    tempY = current[4];\n                    if (previous[0].match(/[CcSs]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    ctx.bezierCurveTo(controlX + l, controlY + t, current[1] + l, current[2] + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    controlX = current[1];\n                    controlY = current[2];\n                    break;\n\n                  case \"q\":\n                    tempX = x + current[3];\n                    tempY = y + current[4];\n                    controlX = x + current[1];\n                    controlY = y + current[2];\n                    ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"Q\":\n                    tempX = current[3];\n                    tempY = current[4];\n                    ctx.quadraticCurveTo(current[1] + l, current[2] + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    controlX = current[1];\n                    controlY = current[2];\n                    break;\n\n                  case \"t\":\n                    tempX = x + current[1];\n                    tempY = y + current[2];\n                    if (previous[0].match(/[QqTt]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"T\":\n                    tempX = current[1];\n                    tempY = current[2];\n                    if (previous[0].match(/[QqTt]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"a\":\n                    drawArc(ctx, x + l, y + t, [ current[1], current[2], current[3], current[4], current[5], current[6] + x + l, current[7] + y + t ]);\n                    x += current[6];\n                    y += current[7];\n                    break;\n\n                  case \"A\":\n                    drawArc(ctx, x + l, y + t, [ current[1], current[2], current[3], current[4], current[5], current[6] + l, current[7] + t ]);\n                    x = current[6];\n                    y = current[7];\n                    break;\n\n                  case \"z\":\n                  case \"Z\":\n                    x = subpathStartX;\n                    y = subpathStartY;\n                    ctx.closePath();\n                    break;\n                }\n                previous = current;\n            }\n        },\n        _render: function(ctx) {\n            this._renderPathCommands(ctx);\n            this._renderPaintInOrder(ctx);\n        },\n        toString: function() {\n            return \"#<fabric.Path (\" + this.complexity() + '): { \"top\": ' + this.top + ', \"left\": ' + this.left + \" }>\";\n        },\n        toObject: function(propertiesToInclude) {\n            var o = extend(this.callSuper(\"toObject\", propertiesToInclude), {\n                path: this.path.map(function(item) {\n                    return item.slice();\n                }),\n                top: this.top,\n                left: this.left\n            });\n            return o;\n        },\n        toDatalessObject: function(propertiesToInclude) {\n            var o = this.toObject([ \"sourcePath\" ].concat(propertiesToInclude));\n            if (o.sourcePath) {\n                delete o.path;\n            }\n            return o;\n        },\n        toSVG: function(reviver) {\n            var chunks = [], markup = this._createBaseSVGMarkup(), addTransform = \"\";\n            for (var i = 0, len = this.path.length; i < len; i++) {\n                chunks.push(this.path[i].join(\" \"));\n            }\n            var path = chunks.join(\" \");\n            addTransform = \" translate(\" + -this.pathOffset.x + \", \" + -this.pathOffset.y + \") \";\n            markup.push(\"<path \", this.getSvgId(), 'd=\"', path, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), addTransform, this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ', this.addPaintOrder(), \"/>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        complexity: function() {\n            return this.path.length;\n        },\n        _parsePath: function() {\n            var result = [], coords = [], currentPath, parsed, re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi, match, coordsStr;\n            for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n                currentPath = this.path[i];\n                coordsStr = currentPath.slice(1).trim();\n                coords.length = 0;\n                while (match = re.exec(coordsStr)) {\n                    coords.push(match[0]);\n                }\n                coordsParsed = [ currentPath.charAt(0) ];\n                for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                    parsed = parseFloat(coords[j]);\n                    if (!isNaN(parsed)) {\n                        coordsParsed.push(parsed);\n                    }\n                }\n                var command = coordsParsed[0], commandLength = commandLengths[command.toLowerCase()], repeatedCommand = repeatedCommands[command] || command;\n                if (coordsParsed.length - 1 > commandLength) {\n                    for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n                        result.push([ command ].concat(coordsParsed.slice(k, k + commandLength)));\n                        command = repeatedCommand;\n                    }\n                } else {\n                    result.push(coordsParsed);\n                }\n            }\n            return result;\n        },\n        _parseDimensions: function() {\n            var aX = [], aY = [], current, previous = null, subpathStartX = 0, subpathStartY = 0, x = 0, y = 0, controlX = 0, controlY = 0, tempX, tempY, bounds;\n            for (var i = 0, len = this.path.length; i < len; ++i) {\n                current = this.path[i];\n                switch (current[0]) {\n                  case \"l\":\n                    x += current[1];\n                    y += current[2];\n                    bounds = [];\n                    break;\n\n                  case \"L\":\n                    x = current[1];\n                    y = current[2];\n                    bounds = [];\n                    break;\n\n                  case \"h\":\n                    x += current[1];\n                    bounds = [];\n                    break;\n\n                  case \"H\":\n                    x = current[1];\n                    bounds = [];\n                    break;\n\n                  case \"v\":\n                    y += current[1];\n                    bounds = [];\n                    break;\n\n                  case \"V\":\n                    y = current[1];\n                    bounds = [];\n                    break;\n\n                  case \"m\":\n                    x += current[1];\n                    y += current[2];\n                    subpathStartX = x;\n                    subpathStartY = y;\n                    bounds = [];\n                    break;\n\n                  case \"M\":\n                    x = current[1];\n                    y = current[2];\n                    subpathStartX = x;\n                    subpathStartY = y;\n                    bounds = [];\n                    break;\n\n                  case \"c\":\n                    tempX = x + current[5];\n                    tempY = y + current[6];\n                    controlX = x + current[3];\n                    controlY = y + current[4];\n                    bounds = fabric.util.getBoundsOfCurve(x, y, x + current[1], y + current[2], controlX, controlY, tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"C\":\n                    controlX = current[3];\n                    controlY = current[4];\n                    bounds = fabric.util.getBoundsOfCurve(x, y, current[1], current[2], controlX, controlY, current[5], current[6]);\n                    x = current[5];\n                    y = current[6];\n                    break;\n\n                  case \"s\":\n                    tempX = x + current[3];\n                    tempY = y + current[4];\n                    if (previous[0].match(/[CcSs]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, x + current[1], y + current[2], tempX, tempY);\n                    controlX = x + current[1];\n                    controlY = y + current[2];\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"S\":\n                    tempX = current[3];\n                    tempY = current[4];\n                    if (previous[0].match(/[CcSs]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, current[1], current[2], tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    controlX = current[1];\n                    controlY = current[2];\n                    break;\n\n                  case \"q\":\n                    tempX = x + current[3];\n                    tempY = y + current[4];\n                    controlX = x + current[1];\n                    controlY = y + current[2];\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"Q\":\n                    controlX = current[1];\n                    controlY = current[2];\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, current[3], current[4]);\n                    x = current[3];\n                    y = current[4];\n                    break;\n\n                  case \"t\":\n                    tempX = x + current[1];\n                    tempY = y + current[2];\n                    if (previous[0].match(/[QqTt]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"T\":\n                    tempX = current[1];\n                    tempY = current[2];\n                    if (previous[0].match(/[QqTt]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"a\":\n                    bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6] + x, current[7] + y);\n                    x += current[6];\n                    y += current[7];\n                    break;\n\n                  case \"A\":\n                    bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6], current[7]);\n                    x = current[6];\n                    y = current[7];\n                    break;\n\n                  case \"z\":\n                  case \"Z\":\n                    x = subpathStartX;\n                    y = subpathStartY;\n                    break;\n                }\n                previous = current;\n                bounds.forEach(function(point) {\n                    aX.push(point.x);\n                    aY.push(point.y);\n                });\n                aX.push(x);\n                aY.push(y);\n            }\n            var minX = min(aX) || 0, minY = min(aY) || 0, maxX = max(aX) || 0, maxY = max(aY) || 0, deltaX = maxX - minX, deltaY = maxY - minY, o = {\n                left: minX,\n                top: minY,\n                width: deltaX,\n                height: deltaY\n            };\n            return o;\n        }\n    });\n    fabric.Path.fromObject = function(object, callback) {\n        if (typeof object.sourcePath === \"string\") {\n            var pathUrl = object.sourcePath;\n            fabric.loadSVGFromURL(pathUrl, function(elements) {\n                var path = elements[0];\n                path.setOptions(object);\n                callback && callback(path);\n            });\n        } else {\n            fabric.Object._fromObject(\"Path\", object, callback, \"path\");\n        }\n    };\n    fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat([ \"d\" ]);\n    fabric.Path.fromElement = function(element, callback, options) {\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n        callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, min = fabric.util.array.min, max = fabric.util.array.max;\n    if (fabric.Group) {\n        return;\n    }\n    fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, {\n        type: \"group\",\n        strokeWidth: 0,\n        subTargetCheck: false,\n        cacheProperties: [],\n        useSetOnGroup: false,\n        initialize: function(objects, options, isAlreadyGrouped) {\n            options = options || {};\n            this._objects = [];\n            isAlreadyGrouped && this.callSuper(\"initialize\", options);\n            this._objects = objects || [];\n            for (var i = this._objects.length; i--; ) {\n                this._objects[i].group = this;\n            }\n            if (options.originX) {\n                this.originX = options.originX;\n            }\n            if (options.originY) {\n                this.originY = options.originY;\n            }\n            if (!isAlreadyGrouped) {\n                var center = options && options.centerPoint;\n                center || this._calcBounds();\n                this._updateObjectsCoords(center);\n                delete options.centerPoint;\n                this.callSuper(\"initialize\", options);\n            } else {\n                this._updateObjectsACoords();\n            }\n            this.setCoords();\n        },\n        _updateObjectsACoords: function() {\n            var ignoreZoom = true, skipAbsolute = true;\n            for (var i = this._objects.length; i--; ) {\n                this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n            }\n        },\n        _updateObjectsCoords: function(center) {\n            var center = center || this.getCenterPoint();\n            for (var i = this._objects.length; i--; ) {\n                this._updateObjectCoords(this._objects[i], center);\n            }\n        },\n        _updateObjectCoords: function(object, center) {\n            var objectLeft = object.left, objectTop = object.top, ignoreZoom = true, skipAbsolute = true;\n            object.set({\n                left: objectLeft - center.x,\n                top: objectTop - center.y\n            });\n            object.group = this;\n            object.setCoords(ignoreZoom, skipAbsolute);\n        },\n        toString: function() {\n            return \"#<fabric.Group: (\" + this.complexity() + \")>\";\n        },\n        addWithUpdate: function(object) {\n            this._restoreObjectsState();\n            fabric.util.resetObjectTransform(this);\n            if (object) {\n                this._objects.push(object);\n                object.group = this;\n                object._set(\"canvas\", this.canvas);\n            }\n            this._calcBounds();\n            this._updateObjectsCoords();\n            this.setCoords();\n            this.dirty = true;\n            return this;\n        },\n        removeWithUpdate: function(object) {\n            this._restoreObjectsState();\n            fabric.util.resetObjectTransform(this);\n            this.remove(object);\n            this._calcBounds();\n            this._updateObjectsCoords();\n            this.setCoords();\n            this.dirty = true;\n            return this;\n        },\n        _onObjectAdded: function(object) {\n            this.dirty = true;\n            object.group = this;\n            object._set(\"canvas\", this.canvas);\n        },\n        _onObjectRemoved: function(object) {\n            this.dirty = true;\n            delete object.group;\n        },\n        _set: function(key, value) {\n            var i = this._objects.length;\n            if (this.useSetOnGroup) {\n                while (i--) {\n                    this._objects[i].setOnGroup(key, value);\n                }\n            }\n            if (key === \"canvas\") {\n                i = this._objects.length;\n                while (i--) {\n                    this._objects[i]._set(key, value);\n                }\n            }\n            this.callSuper(\"_set\", key, value);\n        },\n        toObject: function(propertiesToInclude) {\n            var objsToObject = this.getObjects().map(function(obj) {\n                var originalDefaults = obj.includeDefaultValues;\n                obj.includeDefaultValues = obj.group.includeDefaultValues;\n                var _obj = obj.toObject(propertiesToInclude);\n                obj.includeDefaultValues = originalDefaults;\n                return _obj;\n            });\n            return extend(this.callSuper(\"toObject\", propertiesToInclude), {\n                objects: objsToObject\n            });\n        },\n        toDatalessObject: function(propertiesToInclude) {\n            var objsToObject, sourcePath = this.sourcePath;\n            if (sourcePath) {\n                objsToObject = sourcePath;\n            } else {\n                objsToObject = this.getObjects().map(function(obj) {\n                    var originalDefaults = obj.includeDefaultValues;\n                    obj.includeDefaultValues = obj.group.includeDefaultValues;\n                    var _obj = obj.toDatalessObject(propertiesToInclude);\n                    obj.includeDefaultValues = originalDefaults;\n                    return _obj;\n                });\n            }\n            return extend(this.callSuper(\"toDatalessObject\", propertiesToInclude), {\n                objects: objsToObject\n            });\n        },\n        render: function(ctx) {\n            this._transformDone = true;\n            this.callSuper(\"render\", ctx);\n            this._transformDone = false;\n        },\n        shouldCache: function() {\n            var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n            this.ownCaching = ownCache;\n            if (ownCache) {\n                for (var i = 0, len = this._objects.length; i < len; i++) {\n                    if (this._objects[i].willDrawShadow()) {\n                        this.ownCaching = false;\n                        return false;\n                    }\n                }\n            }\n            return ownCache;\n        },\n        willDrawShadow: function() {\n            if (this.shadow) {\n                return this.callSuper(\"willDrawShadow\");\n            }\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                if (this._objects[i].willDrawShadow()) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOnACache: function() {\n            return this.ownCaching || this.group && this.group.isOnACache();\n        },\n        drawObject: function(ctx) {\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                this._objects[i].render(ctx);\n            }\n        },\n        isCacheDirty: function() {\n            if (this.callSuper(\"isCacheDirty\")) {\n                return true;\n            }\n            if (!this.statefullCache) {\n                return false;\n            }\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                if (this._objects[i].isCacheDirty(true)) {\n                    if (this._cacheCanvas) {\n                        var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n                        this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        },\n        _restoreObjectsState: function() {\n            this._objects.forEach(this._restoreObjectState, this);\n            return this;\n        },\n        realizeTransform: function(object) {\n            var matrix = object.calcTransformMatrix(), options = fabric.util.qrDecompose(matrix), center = new fabric.Point(options.translateX, options.translateY);\n            object.flipX = false;\n            object.flipY = false;\n            object.set(\"scaleX\", options.scaleX);\n            object.set(\"scaleY\", options.scaleY);\n            object.skewX = options.skewX;\n            object.skewY = options.skewY;\n            object.angle = options.angle;\n            object.setPositionByOrigin(center, \"center\", \"center\");\n            return object;\n        },\n        _restoreObjectState: function(object) {\n            this.realizeTransform(object);\n            object.setCoords();\n            delete object.group;\n            return this;\n        },\n        destroy: function() {\n            this._objects.forEach(function(object) {\n                object.set(\"dirty\", true);\n            });\n            return this._restoreObjectsState();\n        },\n        toActiveSelection: function() {\n            if (!this.canvas) {\n                return;\n            }\n            var objects = this._objects, canvas = this.canvas;\n            this._objects = [];\n            var options = this.toObject();\n            delete options.objects;\n            var activeSelection = new fabric.ActiveSelection([]);\n            activeSelection.set(options);\n            activeSelection.type = \"activeSelection\";\n            canvas.remove(this);\n            objects.forEach(function(object) {\n                object.group = activeSelection;\n                object.dirty = true;\n                canvas.add(object);\n            });\n            activeSelection.canvas = canvas;\n            activeSelection._objects = objects;\n            canvas._activeObject = activeSelection;\n            activeSelection.setCoords();\n            return activeSelection;\n        },\n        ungroupOnCanvas: function() {\n            return this._restoreObjectsState();\n        },\n        setObjectsCoords: function() {\n            var ignoreZoom = true, skipAbsolute = true;\n            this.forEachObject(function(object) {\n                object.setCoords(ignoreZoom, skipAbsolute);\n            });\n            return this;\n        },\n        _calcBounds: function(onlyWidthHeight) {\n            var aX = [], aY = [], o, prop, props = [ \"tr\", \"br\", \"bl\", \"tl\" ], i = 0, iLen = this._objects.length, j, jLen = props.length, ignoreZoom = true;\n            for (;i < iLen; ++i) {\n                o = this._objects[i];\n                o.setCoords(ignoreZoom);\n                for (j = 0; j < jLen; j++) {\n                    prop = props[j];\n                    aX.push(o.oCoords[prop].x);\n                    aY.push(o.oCoords[prop].y);\n                }\n            }\n            this.set(this._getBounds(aX, aY, onlyWidthHeight));\n        },\n        _getBounds: function(aX, aY, onlyWidthHeight) {\n            var minXY = new fabric.Point(min(aX), min(aY)), maxXY = new fabric.Point(max(aX), max(aY)), obj = {\n                width: maxXY.x - minXY.x || 0,\n                height: maxXY.y - minXY.y || 0\n            };\n            if (!onlyWidthHeight) {\n                obj.left = minXY.x || 0;\n                obj.top = minXY.y || 0;\n                if (this.originX === \"center\") {\n                    obj.left += obj.width / 2;\n                }\n                if (this.originX === \"right\") {\n                    obj.left += obj.width;\n                }\n                if (this.originY === \"center\") {\n                    obj.top += obj.height / 2;\n                }\n                if (this.originY === \"bottom\") {\n                    obj.top += obj.height;\n                }\n            }\n            return obj;\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup();\n            markup.push(\"<g \", this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\" style=\"', this.getSvgFilter(), '\">\\n');\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                markup.push(\"\\t\", this._objects[i].toSVG(reviver));\n            }\n            markup.push(\"</g>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        }\n    });\n    fabric.Group.fromObject = function(object, callback) {\n        fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n            var options = fabric.util.object.clone(object, true);\n            delete options.objects;\n            callback && callback(new fabric.Group(enlivenedObjects, options, true));\n        });\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.ActiveSelection) {\n        return;\n    }\n    fabric.ActiveSelection = fabric.util.createClass(fabric.Group, {\n        type: \"activeSelection\",\n        initialize: function(objects, options) {\n            options = options || {};\n            this._objects = objects || [];\n            for (var i = this._objects.length; i--; ) {\n                this._objects[i].group = this;\n            }\n            if (options.originX) {\n                this.originX = options.originX;\n            }\n            if (options.originY) {\n                this.originY = options.originY;\n            }\n            this._calcBounds();\n            this._updateObjectsCoords();\n            fabric.Object.prototype.initialize.call(this, options);\n            this.setCoords();\n        },\n        toGroup: function() {\n            var objects = this._objects;\n            this._objects = [];\n            var options = this.toObject();\n            var newGroup = new fabric.Group([]);\n            delete options.objects;\n            newGroup.set(options);\n            newGroup.type = \"group\";\n            objects.forEach(function(object) {\n                object.group = newGroup;\n                object.canvas.remove(object);\n            });\n            newGroup._objects = objects;\n            if (!this.canvas) {\n                return newGroup;\n            }\n            var canvas = this.canvas;\n            canvas.add(newGroup);\n            canvas._activeObject = newGroup;\n            newGroup.setCoords();\n            return newGroup;\n        },\n        onDeselect: function() {\n            this.destroy();\n            return false;\n        },\n        toString: function() {\n            return \"#<fabric.ActiveSelection: (\" + this.complexity() + \")>\";\n        },\n        _set: function(key, value) {\n            var i = this._objects.length;\n            if (key === \"canvas\") {\n                while (i--) {\n                    this._objects[i].set(key, value);\n                }\n            }\n            if (this.useSetOnGroup) {\n                while (i--) {\n                    this._objects[i].setOnGroup(key, value);\n                }\n            }\n            fabric.Object.prototype._set.call(this, key, value);\n        },\n        shouldCache: function() {\n            return false;\n        },\n        willDrawShadow: function() {\n            if (this.shadow) {\n                return this.callSuper(\"willDrawShadow\");\n            }\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                if (this._objects[i].willDrawShadow()) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOnACache: function() {\n            return false;\n        },\n        _renderControls: function(ctx, styleOverride, childrenOverride) {\n            ctx.save();\n            ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n            this.callSuper(\"_renderControls\", ctx, styleOverride);\n            childrenOverride = childrenOverride || {};\n            if (typeof childrenOverride.hasControls === \"undefined\") {\n                childrenOverride.hasControls = false;\n            }\n            if (typeof childrenOverride.hasRotatingPoint === \"undefined\") {\n                childrenOverride.hasRotatingPoint = false;\n            }\n            childrenOverride.forActiveSelection = true;\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                this._objects[i]._renderControls(ctx, childrenOverride);\n            }\n            ctx.restore();\n        }\n    });\n    fabric.ActiveSelection.fromObject = function(object, callback) {\n        fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n            delete object.objects;\n            callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n        });\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var extend = fabric.util.object.extend;\n    if (!global.fabric) {\n        global.fabric = {};\n    }\n    if (global.fabric.Image) {\n        fabric.warn(\"fabric.Image is already defined.\");\n        return;\n    }\n    fabric.Image = fabric.util.createClass(fabric.Object, {\n        type: \"image\",\n        crossOrigin: \"\",\n        strokeWidth: 0,\n        _lastScaleX: 1,\n        _lastScaleY: 1,\n        _filterScalingX: 1,\n        _filterScalingY: 1,\n        minimumScaleTrigger: .5,\n        stateProperties: fabric.Object.prototype.stateProperties.concat(\"cropX\", \"cropY\"),\n        objectCaching: false,\n        cacheKey: \"\",\n        cropX: 0,\n        cropY: 0,\n        initialize: function(element, options) {\n            options || (options = {});\n            this.filters = [];\n            this.cacheKey = \"texture\" + fabric.Object.__uid++;\n            this.callSuper(\"initialize\", options);\n            this._initElement(element, options);\n        },\n        getElement: function() {\n            return this._element;\n        },\n        setElement: function(element, options) {\n            var backend = fabric.filterBackend;\n            if (backend && backend.evictCachesForKey) {\n                backend.evictCachesForKey(this.cacheKey);\n                backend.evictCachesForKey(this.cacheKey + \"_filtered\");\n            }\n            this._element = element;\n            this._originalElement = element;\n            this._initConfig(options);\n            if (this.resizeFilter) {\n                this.applyResizeFilters();\n            }\n            if (this.filters.length !== 0) {\n                this.applyFilters();\n            }\n            return this;\n        },\n        dispose: function() {\n            var backend = fabric.filterBackend;\n            if (backend && backend.evictCachesForKey) {\n                backend.evictCachesForKey(this.cacheKey);\n                backend.evictCachesForKey(this.cacheKey + \"_filtered\");\n            }\n            this._originalElement = undefined;\n            this._element = undefined;\n            this._filteredEl = undefined;\n        },\n        setCrossOrigin: function(value) {\n            this.crossOrigin = value;\n            this._element.crossOrigin = value;\n            return this;\n        },\n        getOriginalSize: function() {\n            var element = this.getElement();\n            return {\n                width: element.width,\n                height: element.height\n            };\n        },\n        _stroke: function(ctx) {\n            if (!this.stroke || this.strokeWidth === 0) {\n                return;\n            }\n            var w = this.width / 2, h = this.height / 2;\n            ctx.beginPath();\n            ctx.moveTo(-w, -h);\n            ctx.lineTo(w, -h);\n            ctx.lineTo(w, h);\n            ctx.lineTo(-w, h);\n            ctx.lineTo(-w, -h);\n            ctx.closePath();\n        },\n        _renderDashedStroke: function(ctx) {\n            var x = -this.width / 2, y = -this.height / 2, w = this.width, h = this.height;\n            ctx.save();\n            this._setStrokeStyles(ctx, this);\n            ctx.beginPath();\n            fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n            ctx.closePath();\n            ctx.restore();\n        },\n        toObject: function(propertiesToInclude) {\n            var filters = [];\n            this.filters.forEach(function(filterObj) {\n                if (filterObj) {\n                    filters.push(filterObj.toObject());\n                }\n            });\n            var object = extend(this.callSuper(\"toObject\", [ \"crossOrigin\", \"cropX\", \"cropY\" ].concat(propertiesToInclude)), {\n                src: this.getSrc(),\n                filters: filters\n            });\n            if (this.resizeFilter) {\n                object.resizeFilter = this.resizeFilter.toObject();\n            }\n            return object;\n        },\n        hasCrop: function() {\n            return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2, clipPath = \"\";\n            if (this.hasCrop()) {\n                var clipPathId = fabric.Object.__uid++;\n                markup.push('<clipPath id=\"imageCrop_' + clipPathId + '\">\\n', '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n', \"</clipPath>\\n\");\n                clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n            }\n            markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\n            var imageMarkup = [ \"\\t<image \", this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true), '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY, '\" style=\"', this.getSvgStyles(), '\" width=\"', this._element.width || this._element.naturalWidth, '\" height=\"', this._element.height || this._element.height, '\"', clipPath, \"></image>\\n\" ];\n            if (this.paintFirst === \"fill\") {\n                Array.prototype.push.apply(markup, imageMarkup);\n            }\n            if (this.stroke || this.strokeDashArray) {\n                var origFill = this.fill;\n                this.fill = null;\n                markup.push(\"\\t<rect \", 'x=\"', x, '\" y=\"', y, '\" width=\"', this.width, '\" height=\"', this.height, '\" style=\"', this.getSvgStyles(), '\"/>\\n');\n                this.fill = origFill;\n            }\n            if (this.paintFirst !== \"fill\") {\n                Array.prototype.push.apply(markup, imageMarkup);\n            }\n            markup.push(\"</g>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        getSrc: function(filtered) {\n            var element = filtered ? this._element : this._originalElement;\n            if (element) {\n                if (element.toDataURL) {\n                    return element.toDataURL();\n                }\n                return element.src;\n            } else {\n                return this.src || \"\";\n            }\n        },\n        setSrc: function(src, callback, options) {\n            fabric.util.loadImage(src, function(img) {\n                this.setElement(img, options);\n                this._setWidthHeight();\n                callback(this);\n            }, this, options && options.crossOrigin);\n            return this;\n        },\n        toString: function() {\n            return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n        },\n        applyResizeFilters: function() {\n            var filter = this.resizeFilter, retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : 1, minimumScale = this.minimumScaleTrigger, scaleX = this.scaleX * retinaScaling, scaleY = this.scaleY * retinaScaling, elementToFilter = this._filteredEl || this._originalElement;\n            if (this.group) {\n                this.set(\"dirty\", true);\n            }\n            if (!filter || scaleX > minimumScale && scaleY > minimumScale) {\n                this._element = elementToFilter;\n                this._filterScalingX = 1;\n                this._filterScalingY = 1;\n                return;\n            }\n            if (!fabric.filterBackend) {\n                fabric.filterBackend = fabric.initFilterBackend();\n            }\n            var canvasEl = fabric.util.createCanvasElement(), cacheKey = this._filteredEl ? this.cacheKey : this.cacheKey + \"_filtered\", sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n            canvasEl.width = sourceWidth;\n            canvasEl.height = sourceHeight;\n            this._element = canvasEl;\n            filter.scaleX = scaleX;\n            filter.scaleY = scaleY;\n            fabric.filterBackend.applyFilters([ filter ], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n            this._filterScalingX = canvasEl.width / this._originalElement.width;\n            this._filterScalingY = canvasEl.height / this._originalElement.height;\n        },\n        applyFilters: function(filters) {\n            filters = filters || this.filters || [];\n            filters = filters.filter(function(filter) {\n                return filter;\n            });\n            if (this.group) {\n                this.set(\"dirty\", true);\n            }\n            if (filters.length === 0) {\n                this._element = this._originalElement;\n                this._filteredEl = null;\n                this._filterScalingX = 1;\n                this._filterScalingY = 1;\n                return this;\n            }\n            var imgElement = this._originalElement, sourceWidth = imgElement.naturalWidth || imgElement.width, sourceHeight = imgElement.naturalHeight || imgElement.height;\n            if (this._element === this._originalElement) {\n                var canvasEl = fabric.util.createCanvasElement();\n                canvasEl.width = sourceWidth;\n                canvasEl.height = sourceHeight;\n                this._element = canvasEl;\n                this._filteredEl = canvasEl;\n            } else {\n                this._element.getContext(\"2d\").clearRect(0, 0, sourceWidth, sourceHeight);\n            }\n            if (!fabric.filterBackend) {\n                fabric.filterBackend = fabric.initFilterBackend();\n            }\n            fabric.filterBackend.applyFilters(filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n            if (this._originalElement.width !== this._element.width || this._originalElement.height !== this._element.height) {\n                this._filterScalingX = this._element.width / this._originalElement.width;\n                this._filterScalingY = this._element.height / this._originalElement.height;\n            }\n            return this;\n        },\n        _render: function(ctx) {\n            if (this.isMoving === false && this.resizeFilter && this._needsResize()) {\n                this._lastScaleX = this.scaleX;\n                this._lastScaleY = this.scaleY;\n                this.applyResizeFilters();\n            }\n            this._stroke(ctx);\n            this._renderPaintInOrder(ctx);\n        },\n        _renderFill: function(ctx) {\n            var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY, x = -w / 2, y = -h / 2, elementToDraw = this._element;\n            elementToDraw && ctx.drawImage(elementToDraw, this.cropX * this._filterScalingX, this.cropY * this._filterScalingY, sW, sH, x, y, w, h);\n        },\n        _needsResize: function() {\n            return this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY;\n        },\n        _resetWidthHeight: function() {\n            var element = this.getElement();\n            this.set(\"width\", element.width);\n            this.set(\"height\", element.height);\n        },\n        _initElement: function(element, options) {\n            this.setElement(fabric.util.getById(element), options);\n            fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n        },\n        _initConfig: function(options) {\n            options || (options = {});\n            this.setOptions(options);\n            this._setWidthHeight(options);\n            if (this._element && this.crossOrigin) {\n                this._element.crossOrigin = this.crossOrigin;\n            }\n        },\n        _initFilters: function(filters, callback) {\n            if (filters && filters.length) {\n                fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n                    callback && callback(enlivenedObjects);\n                }, \"fabric.Image.filters\");\n            } else {\n                callback && callback();\n            }\n        },\n        _setWidthHeight: function(options) {\n            this.width = options && \"width\" in options ? options.width : this.getElement() ? this.getElement().width || 0 : 0;\n            this.height = options && \"height\" in options ? options.height : this.getElement() ? this.getElement().height || 0 : 0;\n        },\n        parsePreserveAspectRatioAttribute: function() {\n            var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || \"\"), rWidth = this._element.width, rHeight = this._element.height, scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0, offset, pWidth = this.width, pHeight = this.height, parsedAttributes = {\n                width: pWidth,\n                height: pHeight\n            };\n            if (pAR && (pAR.alignX !== \"none\" || pAR.alignY !== \"none\")) {\n                if (pAR.meetOrSlice === \"meet\") {\n                    scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n                    offset = (pWidth - rWidth * scaleX) / 2;\n                    if (pAR.alignX === \"Min\") {\n                        offsetLeft = -offset;\n                    }\n                    if (pAR.alignX === \"Max\") {\n                        offsetLeft = offset;\n                    }\n                    offset = (pHeight - rHeight * scaleY) / 2;\n                    if (pAR.alignY === \"Min\") {\n                        offsetTop = -offset;\n                    }\n                    if (pAR.alignY === \"Max\") {\n                        offsetTop = offset;\n                    }\n                }\n                if (pAR.meetOrSlice === \"slice\") {\n                    scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n                    offset = rWidth - pWidth / scaleX;\n                    if (pAR.alignX === \"Mid\") {\n                        cropX = offset / 2;\n                    }\n                    if (pAR.alignX === \"Max\") {\n                        cropX = offset;\n                    }\n                    offset = rHeight - pHeight / scaleY;\n                    if (pAR.alignY === \"Mid\") {\n                        cropY = offset / 2;\n                    }\n                    if (pAR.alignY === \"Max\") {\n                        cropY = offset;\n                    }\n                    rWidth = pWidth / scaleX;\n                    rHeight = pHeight / scaleY;\n                }\n            } else {\n                scaleX = pWidth / rWidth;\n                scaleY = pHeight / rHeight;\n            }\n            return {\n                width: rWidth,\n                height: rHeight,\n                scaleX: scaleX,\n                scaleY: scaleY,\n                offsetLeft: offsetLeft,\n                offsetTop: offsetTop,\n                cropX: cropX,\n                cropY: cropY\n            };\n        }\n    });\n    fabric.Image.CSS_CANVAS = \"canvas-img\";\n    fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n    fabric.Image.fromObject = function(_object, callback) {\n        var object = fabric.util.object.clone(_object);\n        fabric.util.loadImage(object.src, function(img, error) {\n            if (error) {\n                callback && callback(null, error);\n                return;\n            }\n            fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n                object.filters = filters || [];\n                fabric.Image.prototype._initFilters.call(object, [ object.resizeFilter ], function(resizeFilters) {\n                    object.resizeFilter = resizeFilters[0];\n                    var image = new fabric.Image(img, object);\n                    callback(image);\n                });\n            });\n        }, null, object.crossOrigin);\n    };\n    fabric.Image.fromURL = function(url, callback, imgOptions) {\n        fabric.util.loadImage(url, function(img) {\n            callback && callback(new fabric.Image(img, imgOptions));\n        }, null, imgOptions && imgOptions.crossOrigin);\n    };\n    fabric.Image.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"x y width height preserveAspectRatio xlink:href crossOrigin\".split(\" \"));\n    fabric.Image.fromElement = function(element, callback, options) {\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n        fabric.Image.fromURL(parsedAttributes[\"xlink:href\"], callback, extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\nfabric.util.object.extend(fabric.Object.prototype, {\n    _getAngleValueForStraighten: function() {\n        var angle = this.angle % 360;\n        if (angle > 0) {\n            return Math.round((angle - 1) / 90) * 90;\n        }\n        return Math.round(angle / 90) * 90;\n    },\n    straighten: function() {\n        this.rotate(this._getAngleValueForStraighten());\n        return this;\n    },\n    fxStraighten: function(callbacks) {\n        callbacks = callbacks || {};\n        var empty = function() {}, onComplete = callbacks.onComplete || empty, onChange = callbacks.onChange || empty, _this = this;\n        fabric.util.animate({\n            startValue: this.get(\"angle\"),\n            endValue: this._getAngleValueForStraighten(),\n            duration: this.FX_DURATION,\n            onChange: function(value) {\n                _this.rotate(value);\n                onChange();\n            },\n            onComplete: function() {\n                _this.setCoords();\n                onComplete();\n            }\n        });\n        return this;\n    }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, {\n    straightenObject: function(object) {\n        object.straighten();\n        this.requestRenderAll();\n        return this;\n    },\n    fxStraightenObject: function(object) {\n        object.fxStraighten({\n            onChange: this.requestRenderAllBound\n        });\n        return this;\n    }\n});\n\n(function() {\n    \"use strict\";\n    function testPrecision(gl, precision) {\n        var fragmentSource = \"precision \" + precision + \" float;\\nvoid main(){}\";\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragmentSource);\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            return false;\n        }\n        return true;\n    }\n    fabric.isWebglSupported = function(tileSize) {\n        if (fabric.isLikelyNode) {\n            return false;\n        }\n        tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n        var canvas = document.createElement(\"canvas\");\n        var gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n        var isSupported = false;\n        if (gl) {\n            fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n            isSupported = fabric.maxTextureSize >= tileSize;\n            var precisions = [ \"highp\", \"mediump\", \"lowp\" ];\n            for (var i = 0; i < 3; i++) {\n                if (testPrecision(gl, precisions[i])) {\n                    fabric.webGlPrecision = precisions[i];\n                    break;\n                }\n            }\n        }\n        this.isSupported = isSupported;\n        return isSupported;\n    };\n    fabric.WebglFilterBackend = WebglFilterBackend;\n    function WebglFilterBackend(options) {\n        if (options && options.tileSize) {\n            this.tileSize = options.tileSize;\n        }\n        this.setupGLContext(this.tileSize, this.tileSize);\n        this.captureGPUInfo();\n    }\n    WebglFilterBackend.prototype = {\n        tileSize: 2048,\n        resources: {},\n        setupGLContext: function(width, height) {\n            this.dispose();\n            this.createWebGLCanvas(width, height);\n            this.aPosition = new Float32Array([ 0, 0, 0, 1, 1, 0, 1, 1 ]);\n            this.chooseFastestCopyGLTo2DMethod(width, height);\n        },\n        chooseFastestCopyGLTo2DMethod: function(width, height) {\n            var canMeasurePerf = typeof window.performance !== \"undefined\";\n            var canUseImageData;\n            try {\n                new ImageData(1, 1);\n                canUseImageData = true;\n            } catch (e) {\n                canUseImageData = false;\n            }\n            var canUseArrayBuffer = typeof ArrayBuffer !== \"undefined\";\n            var canUseUint8Clamped = typeof Uint8ClampedArray !== \"undefined\";\n            if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n                return;\n            }\n            var targetCanvas = fabric.util.createCanvasElement();\n            var imageBuffer = new ArrayBuffer(width * height * 4);\n            var testContext = {\n                imageBuffer: imageBuffer,\n                destinationWidth: width,\n                destinationHeight: height,\n                targetCanvas: targetCanvas\n            };\n            var startTime, drawImageTime, putImageDataTime;\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            startTime = window.performance.now();\n            copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n            drawImageTime = window.performance.now() - startTime;\n            startTime = window.performance.now();\n            copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n            putImageDataTime = window.performance.now() - startTime;\n            if (drawImageTime > putImageDataTime) {\n                this.imageBuffer = imageBuffer;\n                this.copyGLTo2D = copyGLTo2DPutImageData;\n            } else {\n                this.copyGLTo2D = copyGLTo2DDrawImage;\n            }\n        },\n        createWebGLCanvas: function(width, height) {\n            var canvas = fabric.util.createCanvasElement();\n            canvas.width = width;\n            canvas.height = height;\n            var glOptions = {\n                premultipliedAlpha: false\n            }, gl = canvas.getContext(\"webgl\", glOptions);\n            if (!gl) {\n                gl = canvas.getContext(\"experimental-webgl\", glOptions);\n            }\n            if (!gl) {\n                return;\n            }\n            gl.clearColor(0, 0, 0, 0);\n            this.canvas = canvas;\n            this.gl = gl;\n        },\n        applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n            var gl = this.gl;\n            var cachedTexture;\n            if (cacheKey) {\n                cachedTexture = this.getCachedTexture(cacheKey, source);\n            }\n            var pipelineState = {\n                originalWidth: source.width || source.originalWidth,\n                originalHeight: source.height || source.originalHeight,\n                sourceWidth: width,\n                sourceHeight: height,\n                destinationWidth: width,\n                destinationHeight: height,\n                context: gl,\n                sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n                targetTexture: this.createTexture(gl, width, height),\n                originalTexture: cachedTexture || this.createTexture(gl, width, height, !cachedTexture && source),\n                passes: filters.length,\n                webgl: true,\n                aPosition: this.aPosition,\n                programCache: this.programCache,\n                pass: 0,\n                filterBackend: this,\n                targetCanvas: targetCanvas\n            };\n            var tempFbo = gl.createFramebuffer();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n            filters.forEach(function(filter) {\n                filter && filter.applyTo(pipelineState);\n            });\n            resizeCanvasIfNeeded(pipelineState);\n            this.copyGLTo2D(gl, pipelineState);\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            gl.deleteTexture(pipelineState.sourceTexture);\n            gl.deleteTexture(pipelineState.targetTexture);\n            gl.deleteFramebuffer(tempFbo);\n            targetCanvas.getContext(\"2d\").setTransform(1, 0, 0, 1, 0, 0);\n            return pipelineState;\n        },\n        applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\n            var gl = this.gl;\n            var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\n            var glError = gl.getError();\n            if (glError !== gl.NO_ERROR) {\n                var errorString = this.glErrorToString(gl, glError);\n                var error = new Error(\"WebGL Error \" + errorString);\n                error.glErrorCode = glError;\n                throw error;\n            }\n            return ret;\n        },\n        glErrorToString: function(context, errorCode) {\n            if (!context) {\n                return \"Context undefined for error code: \" + errorCode;\n            } else if (typeof errorCode !== \"number\") {\n                return \"Error code is not a number\";\n            }\n            switch (errorCode) {\n              case context.NO_ERROR:\n                return \"NO_ERROR\";\n\n              case context.INVALID_ENUM:\n                return \"INVALID_ENUM\";\n\n              case context.INVALID_VALUE:\n                return \"INVALID_VALUE\";\n\n              case context.INVALID_OPERATION:\n                return \"INVALID_OPERATION\";\n\n              case context.INVALID_FRAMEBUFFER_OPERATION:\n                return \"INVALID_FRAMEBUFFER_OPERATION\";\n\n              case context.OUT_OF_MEMORY:\n                return \"OUT_OF_MEMORY\";\n\n              case context.CONTEXT_LOST_WEBGL:\n                return \"CONTEXT_LOST_WEBGL\";\n\n              default:\n                return \"UNKNOWN_ERROR\";\n            }\n        },\n        dispose: function() {\n            if (this.canvas) {\n                this.canvas = null;\n                this.gl = null;\n            }\n            this.clearWebGLCaches();\n        },\n        clearWebGLCaches: function() {\n            this.programCache = {};\n            this.textureCache = {};\n        },\n        createTexture: function(gl, width, height, textureImageSource) {\n            var texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (textureImageSource) {\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n            } else {\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n            }\n            return texture;\n        },\n        getCachedTexture: function(uniqueId, textureImageSource) {\n            if (this.textureCache[uniqueId]) {\n                return this.textureCache[uniqueId];\n            } else {\n                var texture = this.createTexture(this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n                this.textureCache[uniqueId] = texture;\n                return texture;\n            }\n        },\n        evictCachesForKey: function(cacheKey) {\n            if (this.textureCache[cacheKey]) {\n                this.gl.deleteTexture(this.textureCache[cacheKey]);\n                delete this.textureCache[cacheKey];\n            }\n        },\n        copyGLTo2D: copyGLTo2DDrawImage,\n        captureGPUInfo: function() {\n            if (this.gpuInfo) {\n                return this.gpuInfo;\n            }\n            var gl = this.gl;\n            var ext = gl.getExtension(\"WEBGL_debug_renderer_info\");\n            var gpuInfo = {\n                renderer: \"\",\n                vendor: \"\"\n            };\n            if (ext) {\n                var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n                var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n                if (renderer) {\n                    gpuInfo.renderer = renderer.toLowerCase();\n                }\n                if (vendor) {\n                    gpuInfo.vendor = vendor.toLowerCase();\n                }\n            }\n            this.gpuInfo = gpuInfo;\n            return gpuInfo;\n        }\n    };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n    var targetCanvas = pipelineState.targetCanvas, width = targetCanvas.width, height = targetCanvas.height, dWidth = pipelineState.destinationWidth, dHeight = pipelineState.destinationHeight;\n    if (width !== dWidth || height !== dHeight) {\n        targetCanvas.width = dWidth;\n        targetCanvas.height = dHeight;\n    }\n}\n\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n    var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext(\"2d\");\n    ctx.translate(0, targetCanvas.height);\n    ctx.scale(1, -1);\n    var sourceY = glCanvas.height - targetCanvas.height;\n    ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0, targetCanvas.width, targetCanvas.height);\n}\n\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n    var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext(\"2d\"), dWidth = pipelineState.destinationWidth, dHeight = pipelineState.destinationHeight, numBytes = dWidth * dHeight * 4;\n    var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n    var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n    var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n    ctx.putImageData(imgData, 0, 0);\n}\n\n(function() {\n    \"use strict\";\n    var noop = function() {};\n    fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n    function Canvas2dFilterBackend() {}\n    Canvas2dFilterBackend.prototype = {\n        evictCachesForKey: noop,\n        dispose: noop,\n        clearWebGLCaches: noop,\n        resources: {},\n        applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n            var ctx = targetCanvas.getContext(\"2d\");\n            ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n            var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n            var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n            var pipelineState = {\n                sourceWidth: sourceWidth,\n                sourceHeight: sourceHeight,\n                imageData: imageData,\n                originalEl: sourceElement,\n                originalImageData: originalImageData,\n                canvasEl: targetCanvas,\n                ctx: ctx,\n                filterBackend: this\n            };\n            filters.forEach(function(filter) {\n                filter.applyTo(pipelineState);\n            });\n            if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n                targetCanvas.width = pipelineState.imageData.width;\n                targetCanvas.height = pipelineState.imageData.height;\n            }\n            ctx.putImageData(pipelineState.imageData, 0, 0);\n            return pipelineState;\n        }\n    };\n})();\n\nfabric.Image.filters = fabric.Image.filters || {};\n\nfabric.Image.filters.BaseFilter = fabric.util.createClass({\n    type: \"BaseFilter\",\n    vertexSource: \"attribute vec2 aPosition;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vTexCoord = aPosition;\\n\" + \"gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n\" + \"}\",\n    fragmentSource: \"precision highp float;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"}\",\n    initialize: function(options) {\n        if (options) {\n            this.setOptions(options);\n        }\n    },\n    setOptions: function(options) {\n        for (var prop in options) {\n            this[prop] = options[prop];\n        }\n    },\n    createProgram: function(gl, fragmentSource, vertexSource) {\n        fragmentSource = fragmentSource || this.fragmentSource;\n        vertexSource = vertexSource || this.vertexSource;\n        if (fabric.webGlPrecision !== \"highp\") {\n            fragmentSource = fragmentSource.replace(/precision highp float/g, \"precision \" + fabric.webGlPrecision + \" float\");\n        }\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertexSource);\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(\"Vertex shader compile error for \" + this.type + \": \" + gl.getShaderInfoLog(vertexShader));\n        }\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragmentSource);\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            throw new Error(\"Fragment shader compile error for \" + this.type + \": \" + gl.getShaderInfoLog(fragmentShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            throw new Error('Shader link error for \"${this.type}\" ' + gl.getProgramInfoLog(program));\n        }\n        var attributeLocations = this.getAttributeLocations(gl, program);\n        var uniformLocations = this.getUniformLocations(gl, program) || {};\n        uniformLocations.uStepW = gl.getUniformLocation(program, \"uStepW\");\n        uniformLocations.uStepH = gl.getUniformLocation(program, \"uStepH\");\n        return {\n            program: program,\n            attributeLocations: attributeLocations,\n            uniformLocations: uniformLocations\n        };\n    },\n    getAttributeLocations: function(gl, program) {\n        return {\n            aPosition: gl.getAttribLocation(program, \"aPosition\")\n        };\n    },\n    getUniformLocations: function() {\n        return {};\n    },\n    sendAttributeData: function(gl, attributeLocations, aPositionData) {\n        var attributeLocation = attributeLocations.aPostion;\n        var buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.enableVertexAttribArray(attributeLocation);\n        gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n    },\n    _setupFrameBuffer: function(options) {\n        var gl = options.context, width, height;\n        if (options.passes > 1) {\n            width = options.destinationWidth;\n            height = options.destinationHeight;\n            if (options.sourceWidth !== width || options.sourceHeight !== height) {\n                gl.deleteTexture(options.targetTexture);\n                options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n            }\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, options.targetTexture, 0);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.finish();\n        }\n    },\n    _swapTextures: function(options) {\n        options.passes--;\n        options.pass++;\n        var temp = options.targetTexture;\n        options.targetTexture = options.sourceTexture;\n        options.sourceTexture = temp;\n    },\n    isNeutralState: function() {\n        return false;\n    },\n    applyTo: function(options) {\n        if (options.webgl) {\n            if (options.passes > 1 && this.isNeutralState(options)) {\n                return;\n            }\n            this._setupFrameBuffer(options);\n            this.applyToWebGL(options);\n            this._swapTextures(options);\n        } else if (!this.isNeutralState()) {\n            this.applyTo2d(options);\n        }\n    },\n    retrieveShader: function(options) {\n        if (!options.programCache.hasOwnProperty(this.type)) {\n            options.programCache[this.type] = this.createProgram(options.context);\n        }\n        return options.programCache[this.type];\n    },\n    applyToWebGL: function(options) {\n        var gl = options.context;\n        var shader = this.retrieveShader(options);\n        if (options.pass === 0 && options.originalTexture) {\n            gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n        }\n        gl.useProgram(shader.program);\n        this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n        gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n        gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n        this.sendUniformData(gl, shader.uniformLocations);\n        gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    },\n    bindAdditionalTexture: function(gl, texture, textureUnit) {\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.activeTexture(gl.TEXTURE0);\n    },\n    unbindAdditionalTexture: function(gl, textureUnit) {\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.activeTexture(gl.TEXTURE0);\n    },\n    getMainParameter: function() {\n        return this[this.mainParameter];\n    },\n    setMainParameter: function(value) {\n        this[this.mainParameter] = value;\n    },\n    sendUniformData: function() {},\n    createHelpLayer: function(options) {\n        if (!options.helpLayer) {\n            var helpLayer = document.createElement(\"canvas\");\n            helpLayer.width = options.sourceWidth;\n            helpLayer.height = options.sourceHeight;\n            options.helpLayer = helpLayer;\n        }\n    },\n    toObject: function() {\n        var object = {\n            type: this.type\n        }, mainP = this.mainParameter;\n        if (mainP) {\n            object[mainP] = this[mainP];\n        }\n        return object;\n    },\n    toJSON: function() {\n        return this.toObject();\n    }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n    var filter = new fabric.Image.filters[object.type](object);\n    callback && callback(filter);\n    return filter;\n};\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.ColorMatrix = createClass(filters.BaseFilter, {\n        type: \"ColorMatrix\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"uniform mat4 uColorMatrix;\\n\" + \"uniform vec4 uConstants;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color *= uColorMatrix;\\n\" + \"color += uConstants;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        matrix: [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ],\n        mainParameter: \"matrix\",\n        colorsOnly: true,\n        initialize: function(options) {\n            this.callSuper(\"initialize\", options);\n            this.matrix = this.matrix.slice(0);\n        },\n        isNeutralState: function() {\n            var _class = filters.ColorMatrix;\n            for (var i = 20; i--; ) {\n                if (this.matrix[i] !== _class.prototype.matrix[i]) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, iLen = data.length, m = this.matrix, r, g, b, a, i, colorsOnly = this.colorsOnly;\n            for (i = 0; i < iLen; i += 4) {\n                r = data[i];\n                g = data[i + 1];\n                b = data[i + 2];\n                if (colorsOnly) {\n                    data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n                    data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n                    data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n                } else {\n                    a = data[i + 3];\n                    data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n                    data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n                    data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n                    data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n                }\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uColorMatrix: gl.getUniformLocation(program, \"uColorMatrix\"),\n                uConstants: gl.getUniformLocation(program, \"uConstants\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var m = this.matrix, matrix = [ m[0], m[1], m[2], m[3], m[5], m[6], m[7], m[8], m[10], m[11], m[12], m[13], m[15], m[16], m[17], m[18] ], constants = [ m[4], m[9], m[14], m[19] ];\n            gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n            gl.uniform4fv(uniformLocations.uConstants, constants);\n        }\n    });\n    fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Brightness = createClass(filters.BaseFilter, {\n        type: \"Brightness\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uBrightness;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color.rgb += uBrightness;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        brightness: 0,\n        mainParameter: \"brightness\",\n        applyTo2d: function(options) {\n            if (this.brightness === 0) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, i, len = data.length, brightness = Math.round(this.brightness * 255);\n            for (i = 0; i < len; i += 4) {\n                data[i] = data[i] + brightness;\n                data[i + 1] = data[i + 1] + brightness;\n                data[i + 2] = data[i + 2] + brightness;\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uBrightness: gl.getUniformLocation(program, \"uBrightness\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n        }\n    });\n    fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Convolute = createClass(filters.BaseFilter, {\n        type: \"Convolute\",\n        opaque: false,\n        matrix: [ 0, 0, 0, 0, 1, 0, 0, 0, 0 ],\n        fragmentSource: {\n            Convolute_3_1: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[9];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 0);\\n\" + \"for (float h = 0.0; h < 3.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 3.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n\" + \"color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            Convolute_3_0: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[9];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 1);\\n\" + \"for (float h = 0.0; h < 3.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 3.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n\" + \"color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"float alpha = texture2D(uTexture, vTexCoord).a;\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.a = alpha;\\n\" + \"}\",\n            Convolute_5_1: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[25];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 0);\\n\" + \"for (float h = 0.0; h < 5.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 5.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n\" + \"color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            Convolute_5_0: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[25];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 1);\\n\" + \"for (float h = 0.0; h < 5.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 5.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n\" + \"color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"float alpha = texture2D(uTexture, vTexCoord).a;\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.a = alpha;\\n\" + \"}\",\n            Convolute_7_1: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[49];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 0);\\n\" + \"for (float h = 0.0; h < 7.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 7.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n\" + \"color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            Convolute_7_0: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[49];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 1);\\n\" + \"for (float h = 0.0; h < 7.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 7.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n\" + \"color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"float alpha = texture2D(uTexture, vTexCoord).a;\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.a = alpha;\\n\" + \"}\",\n            Convolute_9_1: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[81];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 0);\\n\" + \"for (float h = 0.0; h < 9.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 9.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n\" + \"color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            Convolute_9_0: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[81];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 1);\\n\" + \"for (float h = 0.0; h < 9.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 9.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n\" + \"color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"float alpha = texture2D(uTexture, vTexCoord).a;\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.a = alpha;\\n\" + \"}\"\n        },\n        retrieveShader: function(options) {\n            var size = Math.sqrt(this.matrix.length);\n            var cacheKey = this.type + \"_\" + size + \"_\" + (this.opaque ? 1 : 0);\n            var shaderSource = this.fragmentSource[cacheKey];\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n            }\n            return options.programCache[cacheKey];\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, weights = this.matrix, side = Math.round(Math.sqrt(weights.length)), halfSide = Math.floor(side / 2), sw = imageData.width, sh = imageData.height, output = options.ctx.createImageData(sw, sh), dst = output.data, alphaFac = this.opaque ? 1 : 0, r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\n            for (y = 0; y < sh; y++) {\n                for (x = 0; x < sw; x++) {\n                    dstOff = (y * sw + x) * 4;\n                    r = 0;\n                    g = 0;\n                    b = 0;\n                    a = 0;\n                    for (cy = 0; cy < side; cy++) {\n                        for (cx = 0; cx < side; cx++) {\n                            scy = y + cy - halfSide;\n                            scx = x + cx - halfSide;\n                            if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                                continue;\n                            }\n                            srcOff = (scy * sw + scx) * 4;\n                            wt = weights[cy * side + cx];\n                            r += data[srcOff] * wt;\n                            g += data[srcOff + 1] * wt;\n                            b += data[srcOff + 2] * wt;\n                            if (!alphaFac) {\n                                a += data[srcOff + 3] * wt;\n                            }\n                        }\n                    }\n                    dst[dstOff] = r;\n                    dst[dstOff + 1] = g;\n                    dst[dstOff + 2] = b;\n                    if (!alphaFac) {\n                        dst[dstOff + 3] = a;\n                    } else {\n                        dst[dstOff + 3] = data[dstOff + 3];\n                    }\n                }\n            }\n            options.imageData = output;\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uMatrix: gl.getUniformLocation(program, \"uMatrix\"),\n                uOpaque: gl.getUniformLocation(program, \"uOpaque\"),\n                uHalfSize: gl.getUniformLocation(program, \"uHalfSize\"),\n                uSize: gl.getUniformLocation(program, \"uSize\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n        },\n        toObject: function() {\n            return extend(this.callSuper(\"toObject\"), {\n                opaque: this.opaque,\n                matrix: this.matrix\n            });\n        }\n    });\n    fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Grayscale = createClass(filters.BaseFilter, {\n        type: \"Grayscale\",\n        fragmentSource: {\n            average: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"float average = (color.r + color.b + color.g) / 3.0;\\n\" + \"gl_FragColor = vec4(average, average, average, color.a);\\n\" + \"}\",\n            lightness: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform int uMode;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 col = texture2D(uTexture, vTexCoord);\\n\" + \"float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n\" + \"gl_FragColor = vec4(average, average, average, col.a);\\n\" + \"}\",\n            luminosity: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform int uMode;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 col = texture2D(uTexture, vTexCoord);\\n\" + \"float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n\" + \"gl_FragColor = vec4(average, average, average, col.a);\\n\" + \"}\"\n        },\n        mode: \"average\",\n        mainParameter: \"mode\",\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, i, len = data.length, value, mode = this.mode;\n            for (i = 0; i < len; i += 4) {\n                if (mode === \"average\") {\n                    value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n                } else if (mode === \"lightness\") {\n                    value = (Math.min(data[i], data[i + 1], data[i + 2]) + Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n                } else if (mode === \"luminosity\") {\n                    value = .21 * data[i] + .72 * data[i + 1] + .07 * data[i + 2];\n                }\n                data[i] = value;\n                data[i + 1] = value;\n                data[i + 2] = value;\n            }\n        },\n        retrieveShader: function(options) {\n            var cacheKey = this.type + \"_\" + this.mode;\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                var shaderSource = this.fragmentSource[this.mode];\n                options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n            }\n            return options.programCache[cacheKey];\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uMode: gl.getUniformLocation(program, \"uMode\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var mode = 1;\n            gl.uniform1i(uniformLocations.uMode, mode);\n        }\n    });\n    fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Invert = createClass(filters.BaseFilter, {\n        type: \"Invert\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform int uInvert;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"if (uInvert == 1) {\\n\" + \"gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n\" + \"} else {\\n\" + \"gl_FragColor = color;\\n\" + \"}\\n\" + \"}\",\n        invert: true,\n        mainParameter: \"invert\",\n        applyTo2d: function(options) {\n            if (!this.invert) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, i, len = data.length;\n            for (i = 0; i < len; i += 4) {\n                data[i] = 255 - data[i];\n                data[i + 1] = 255 - data[i + 1];\n                data[i + 2] = 255 - data[i + 2];\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uInvert: gl.getUniformLocation(program, \"uInvert\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1i(uniformLocations.uInvert, this.invert);\n        }\n    });\n    fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Noise = createClass(filters.BaseFilter, {\n        type: \"Noise\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uStepH;\\n\" + \"uniform float uNoise;\\n\" + \"uniform float uSeed;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"float rand(vec2 co, float seed, float vScale) {\\n\" + \"return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n\" + \"}\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        mainParameter: \"noise\",\n        noise: 0,\n        applyTo2d: function(options) {\n            if (this.noise === 0) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, i, len = data.length, noise = this.noise, rand;\n            for (i = 0, len = data.length; i < len; i += 4) {\n                rand = (.5 - Math.random()) * noise;\n                data[i] += rand;\n                data[i + 1] += rand;\n                data[i + 2] += rand;\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uNoise: gl.getUniformLocation(program, \"uNoise\"),\n                uSeed: gl.getUniformLocation(program, \"uSeed\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n            gl.uniform1f(uniformLocations.uSeed, Math.random());\n        },\n        toObject: function() {\n            return extend(this.callSuper(\"toObject\"), {\n                noise: this.noise\n            });\n        }\n    });\n    fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Pixelate = createClass(filters.BaseFilter, {\n        type: \"Pixelate\",\n        blocksize: 4,\n        mainParameter: \"blocksize\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uBlocksize;\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"float blockW = uBlocksize * uStepW;\\n\" + \"float blockH = uBlocksize * uStepW;\\n\" + \"int posX = int(vTexCoord.x / blockW);\\n\" + \"int posY = int(vTexCoord.y / blockH);\\n\" + \"float fposX = float(posX);\\n\" + \"float fposY = float(posY);\\n\" + \"vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n\" + \"vec4 color = texture2D(uTexture, squareCoords);\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        applyTo2d: function(options) {\n            if (this.blocksize === 1) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, iLen = imageData.height, jLen = imageData.width, index, i, j, r, g, b, a, _i, _j, _iLen, _jLen;\n            for (i = 0; i < iLen; i += this.blocksize) {\n                for (j = 0; j < jLen; j += this.blocksize) {\n                    index = i * 4 * jLen + j * 4;\n                    r = data[index];\n                    g = data[index + 1];\n                    b = data[index + 2];\n                    a = data[index + 3];\n                    _iLen = Math.min(i + this.blocksize, iLen);\n                    _jLen = Math.min(j + this.blocksize, jLen);\n                    for (_i = i; _i < _iLen; _i++) {\n                        for (_j = j; _j < _jLen; _j++) {\n                            index = _i * 4 * jLen + _j * 4;\n                            data[index] = r;\n                            data[index + 1] = g;\n                            data[index + 2] = b;\n                            data[index + 3] = a;\n                        }\n                    }\n                }\n            }\n        },\n        isNeutralState: function() {\n            return this.blocksize === 1;\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uBlocksize: gl.getUniformLocation(program, \"uBlocksize\"),\n                uStepW: gl.getUniformLocation(program, \"uStepW\"),\n                uStepH: gl.getUniformLocation(program, \"uStepH\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n        }\n    });\n    fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.RemoveColor = createClass(filters.BaseFilter, {\n        type: \"RemoveColor\",\n        color: \"#FFFFFF\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uLow;\\n\" + \"uniform vec4 uHigh;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n\" + \"gl_FragColor.a = 0.0;\\n\" + \"}\\n\" + \"}\",\n        distance: .02,\n        useAlpha: false,\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, i, distance = this.distance * 255, r, g, b, source = new fabric.Color(this.color).getSource(), lowC = [ source[0] - distance, source[1] - distance, source[2] - distance ], highC = [ source[0] + distance, source[1] + distance, source[2] + distance ];\n            for (i = 0; i < data.length; i += 4) {\n                r = data[i];\n                g = data[i + 1];\n                b = data[i + 2];\n                if (r > lowC[0] && g > lowC[1] && b > lowC[2] && r < highC[0] && g < highC[1] && b < highC[2]) {\n                    data[i + 3] = 0;\n                }\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uLow: gl.getUniformLocation(program, \"uLow\"),\n                uHigh: gl.getUniformLocation(program, \"uHigh\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var source = new fabric.Color(this.color).getSource(), distance = parseFloat(this.distance), lowC = [ 0 + source[0] / 255 - distance, 0 + source[1] / 255 - distance, 0 + source[2] / 255 - distance, 1 ], highC = [ source[0] / 255 + distance, source[1] / 255 + distance, source[2] / 255 + distance, 1 ];\n            gl.uniform4fv(uniformLocations.uLow, lowC);\n            gl.uniform4fv(uniformLocations.uHigh, highC);\n        },\n        toObject: function() {\n            return extend(this.callSuper(\"toObject\"), {\n                color: this.color,\n                distance: this.distance\n            });\n        }\n    });\n    fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    var matrices = {\n        Brownie: [ .5997, .34553, -.27082, 0, .186, -.0377, .86095, .15059, 0, -.1449, .24113, -.07441, .44972, 0, -.02965, 0, 0, 0, 1, 0 ],\n        Vintage: [ .62793, .32021, -.03965, 0, .03784, .02578, .64411, .03259, 0, .02926, .0466, -.08512, .52416, 0, .02023, 0, 0, 0, 1, 0 ],\n        Kodachrome: [ 1.12855, -.39673, -.03992, 0, .24991, -.16404, 1.08352, -.05498, 0, .09698, -.16786, -.56034, 1.60148, 0, .13972, 0, 0, 0, 1, 0 ],\n        Technicolor: [ 1.91252, -.85453, -.09155, 0, .04624, -.30878, 1.76589, -.10601, 0, -.27589, -.2311, -.75018, 1.84759, 0, .12137, 0, 0, 0, 1, 0 ],\n        Polaroid: [ 1.438, -.062, -.062, 0, 0, -.122, 1.378, -.122, 0, 0, -.016, -.016, 1.483, 0, 0, 0, 0, 0, 1, 0 ],\n        Sepia: [ .393, .769, .189, 0, 0, .349, .686, .168, 0, 0, .272, .534, .131, 0, 0, 0, 0, 0, 1, 0 ],\n        BlackWhite: [ 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0, 1, 0 ]\n    };\n    for (var key in matrices) {\n        filters[key] = createClass(filters.ColorMatrix, {\n            type: key,\n            matrix: matrices[key],\n            mainParameter: false,\n            colorsOnly: true\n        });\n        fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n    }\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.BlendColor = createClass(filters.BaseFilter, {\n        type: \"BlendColor\",\n        color: \"#F95C63\",\n        mode: \"multiply\",\n        alpha: 1,\n        fragmentSource: {\n            multiply: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color.rgb *= uColor.rgb;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            screen: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color.rgb = 1.0 - (1.0 - color.rgb) * (1.0 - uColor.rgb);\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            add: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb += uColor.rgb;\\n\" + \"}\",\n            diff: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n\" + \"}\",\n            subtract: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb -= uColor.rgb;\\n\" + \"}\",\n            lighten: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n\" + \"}\",\n            darken: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n\" + \"}\",\n            exclusion: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n\" + \"}\",\n            overlay: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"if (uColor.r < 0.5) {\\n\" + \"gl_FragColor.r *= 2.0 * uColor.r;\\n\" + \"} else {\\n\" + \"gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n\" + \"}\\n\" + \"if (uColor.g < 0.5) {\\n\" + \"gl_FragColor.g *= 2.0 * uColor.g;\\n\" + \"} else {\\n\" + \"gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n\" + \"}\\n\" + \"if (uColor.b < 0.5) {\\n\" + \"gl_FragColor.b *= 2.0 * uColor.b;\\n\" + \"} else {\\n\" + \"gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n\" + \"}\\n\" + \"}\",\n            tint: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb *= (1.0 - uColor.a);\\n\" + \"gl_FragColor.rgb += uColor.rgb;\\n\" + \"}\"\n        },\n        retrieveShader: function(options) {\n            var cacheKey = this.type + \"_\" + this.mode;\n            var shaderSource = this.fragmentSource[this.mode];\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n            }\n            return options.programCache[cacheKey];\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, iLen = data.length, tr, tg, tb, r, g, b, source, alpha1 = 1 - this.alpha;\n            source = new fabric.Color(this.color).getSource();\n            tr = source[0] * this.alpha;\n            tg = source[1] * this.alpha;\n            tb = source[2] * this.alpha;\n            for (var i = 0; i < iLen; i += 4) {\n                r = data[i];\n                g = data[i + 1];\n                b = data[i + 2];\n                switch (this.mode) {\n                  case \"multiply\":\n                    data[i] = r * tr / 255;\n                    data[i + 1] = g * tg / 255;\n                    data[i + 2] = b * tb / 255;\n                    break;\n\n                  case \"screen\":\n                    data[i] = 255 - (255 - r) * (255 - tr) / 255;\n                    data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n                    data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n                    break;\n\n                  case \"add\":\n                    data[i] = r + tr;\n                    data[i + 1] = g + tg;\n                    data[i + 2] = b + tb;\n                    break;\n\n                  case \"diff\":\n                  case \"difference\":\n                    data[i] = Math.abs(r - tr);\n                    data[i + 1] = Math.abs(g - tg);\n                    data[i + 2] = Math.abs(b - tb);\n                    break;\n\n                  case \"subtract\":\n                    data[i] = r - tr;\n                    data[i + 1] = g - tg;\n                    data[i + 2] = b - tb;\n                    break;\n\n                  case \"darken\":\n                    data[i] = Math.min(r, tr);\n                    data[i + 1] = Math.min(g, tg);\n                    data[i + 2] = Math.min(b, tb);\n                    break;\n\n                  case \"lighten\":\n                    data[i] = Math.max(r, tr);\n                    data[i + 1] = Math.max(g, tg);\n                    data[i + 2] = Math.max(b, tb);\n                    break;\n\n                  case \"overlay\":\n                    data[i] = tr < 128 ? 2 * r * tr / 255 : 255 - 2 * (255 - r) * (255 - tr) / 255;\n                    data[i + 1] = tg < 128 ? 2 * g * tg / 255 : 255 - 2 * (255 - g) * (255 - tg) / 255;\n                    data[i + 2] = tb < 128 ? 2 * b * tb / 255 : 255 - 2 * (255 - b) * (255 - tb) / 255;\n                    break;\n\n                  case \"exclusion\":\n                    data[i] = tr + r - 2 * tr * r / 255;\n                    data[i + 1] = tg + g - 2 * tg * g / 255;\n                    data[i + 2] = tb + b - 2 * tb * b / 255;\n                    break;\n\n                  case \"tint\":\n                    data[i] = tr + r * alpha1;\n                    data[i + 1] = tg + g * alpha1;\n                    data[i + 2] = tb + b * alpha1;\n                }\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uColor: gl.getUniformLocation(program, \"uColor\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var source = new fabric.Color(this.color).getSource();\n            source[0] = this.alpha * source[0] / 255;\n            source[1] = this.alpha * source[1] / 255;\n            source[2] = this.alpha * source[2] / 255;\n            source[3] = this.alpha;\n            gl.uniform4fv(uniformLocations.uColor, source);\n        },\n        toObject: function() {\n            return {\n                type: this.type,\n                color: this.color,\n                mode: this.mode,\n                alpha: this.alpha\n            };\n        }\n    });\n    fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.BlendImage = createClass(filters.BaseFilter, {\n        type: \"BlendImage\",\n        image: null,\n        mode: \"multiply\",\n        alpha: 1,\n        vertexSource: \"attribute vec2 aPosition;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"varying vec2 vTexCoord2;\\n\" + \"uniform mat3 uTransformMatrix;\\n\" + \"void main() {\\n\" + \"vTexCoord = aPosition;\\n\" + \"vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n\" + \"gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n\" + \"}\",\n        fragmentSource: {\n            multiply: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform sampler2D uImage;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"varying vec2 vTexCoord2;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"vec4 color2 = texture2D(uImage, vTexCoord2);\\n\" + \"color.rgba *= color2.rgba;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            mask: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform sampler2D uImage;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"varying vec2 vTexCoord2;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"vec4 color2 = texture2D(uImage, vTexCoord2);\\n\" + \"color.a = color2.a;\\n\" + \"gl_FragColor = color;\\n\" + \"}\"\n        },\n        retrieveShader: function(options) {\n            var cacheKey = this.type + \"_\" + this.mode;\n            var shaderSource = this.fragmentSource[this.mode];\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n            }\n            return options.programCache[cacheKey];\n        },\n        applyToWebGL: function(options) {\n            var gl = options.context, texture = this.createTexture(options.filterBackend, this.image);\n            this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n            this.callSuper(\"applyToWebGL\", options);\n            this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n        },\n        createTexture: function(backend, image) {\n            return backend.getCachedTexture(image.cacheKey, image._element);\n        },\n        calculateMatrix: function() {\n            var image = this.image, width = image._element.width, height = image._element.height;\n            return [ 1 / image.scaleX, 0, 0, 0, 1 / image.scaleY, 0, -image.left / width, -image.top / height, 1 ];\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, resources = options.filterBackend.resources, data = imageData.data, iLen = data.length, width = options.imageData.width, height = options.imageData.height, tr, tg, tb, ta, r, g, b, a, canvas1, context, image = this.image, blendData;\n            if (!resources.blendImage) {\n                resources.blendImage = document.createElement(\"canvas\");\n            }\n            canvas1 = resources.blendImage;\n            if (canvas1.width !== width || canvas1.height !== height) {\n                canvas1.width = width;\n                canvas1.height = height;\n            }\n            context = canvas1.getContext(\"2d\");\n            context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n            context.drawImage(image._element, 0, 0, width, height);\n            blendData = context.getImageData(0, 0, width, height).data;\n            for (var i = 0; i < iLen; i += 4) {\n                r = data[i];\n                g = data[i + 1];\n                b = data[i + 2];\n                a = data[i + 3];\n                tr = blendData[i];\n                tg = blendData[i + 1];\n                tb = blendData[i + 2];\n                ta = blendData[i + 3];\n                switch (this.mode) {\n                  case \"multiply\":\n                    data[i] = r * tr / 255;\n                    data[i + 1] = g * tg / 255;\n                    data[i + 2] = b * tb / 255;\n                    data[i + 3] = a * ta / 255;\n                    break;\n\n                  case \"mask\":\n                    data[i + 3] = ta;\n                    break;\n                }\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uTransformMatrix: gl.getUniformLocation(program, \"uTransformMatrix\"),\n                uImage: gl.getUniformLocation(program, \"uImage\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var matrix = this.calculateMatrix();\n            gl.uniform1i(uniformLocations.uImage, 1);\n            gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n        },\n        toObject: function() {\n            return {\n                type: this.type,\n                image: this.image && this.image.toObject(),\n                mode: this.mode,\n                alpha: this.alpha\n            };\n        }\n    });\n    fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n        fabric.Image.fromObject(object.image, function(image) {\n            var options = fabric.util.object.clone(object);\n            options.image = image;\n            callback(new fabric.Image.filters.BlendImage(options));\n        });\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), pow = Math.pow, floor = Math.floor, sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin, ceil = Math.ceil, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Resize = createClass(filters.BaseFilter, {\n        type: \"Resize\",\n        resizeType: \"hermite\",\n        scaleX: 0,\n        scaleY: 0,\n        lanczosLobes: 3,\n        getUniformLocations: function(gl, program) {\n            return {\n                uDelta: gl.getUniformLocation(program, \"uDelta\"),\n                uTaps: gl.getUniformLocation(program, \"uTaps\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [ 1 / this.width, 0 ] : [ 0, 1 / this.height ]);\n            gl.uniform1fv(uniformLocations.uTaps, this.taps);\n        },\n        retrieveShader: function(options) {\n            var filterWindow = this.getFilterWindow(), cacheKey = this.type + \"_\" + filterWindow;\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                var fragmentShader = this.generateShader(filterWindow);\n                options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n            }\n            return options.programCache[cacheKey];\n        },\n        getFilterWindow: function() {\n            var scale = this.tempScale;\n            return Math.ceil(this.lanczosLobes / scale);\n        },\n        getTaps: function() {\n            var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale, filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n            for (var i = 1; i <= filterWindow; i++) {\n                taps[i - 1] = lobeFunction(i * scale);\n            }\n            return taps;\n        },\n        generateShader: function(filterWindow) {\n            var offsets = new Array(filterWindow), fragmentShader = this.fragmentSourceTOP, filterWindow;\n            for (var i = 1; i <= filterWindow; i++) {\n                offsets[i - 1] = i + \".0 * uDelta\";\n            }\n            fragmentShader += \"uniform float uTaps[\" + filterWindow + \"];\\n\";\n            fragmentShader += \"void main() {\\n\";\n            fragmentShader += \"  vec4 color = texture2D(uTexture, vTexCoord);\\n\";\n            fragmentShader += \"  float sum = 1.0;\\n\";\n            offsets.forEach(function(offset, i) {\n                fragmentShader += \"  color += texture2D(uTexture, vTexCoord + \" + offset + \") * uTaps[\" + i + \"];\\n\";\n                fragmentShader += \"  color += texture2D(uTexture, vTexCoord - \" + offset + \") * uTaps[\" + i + \"];\\n\";\n                fragmentShader += \"  sum += 2.0 * uTaps[\" + i + \"];\\n\";\n            });\n            fragmentShader += \"  gl_FragColor = color / sum;\\n\";\n            fragmentShader += \"}\";\n            return fragmentShader;\n        },\n        fragmentSourceTOP: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec2 uDelta;\\n\" + \"varying vec2 vTexCoord;\\n\",\n        applyTo: function(options) {\n            if (options.webgl) {\n                if (options.passes > 1 && this.isNeutralState(options)) {\n                    return;\n                }\n                options.passes++;\n                this.width = options.sourceWidth;\n                this.horizontal = true;\n                this.dW = Math.round(this.width * this.scaleX);\n                this.dH = options.sourceHeight;\n                this.tempScale = this.dW / this.width;\n                this.taps = this.getTaps();\n                options.destinationWidth = this.dW;\n                this._setupFrameBuffer(options);\n                this.applyToWebGL(options);\n                this._swapTextures(options);\n                options.sourceWidth = options.destinationWidth;\n                this.height = options.sourceHeight;\n                this.horizontal = false;\n                this.dH = Math.round(this.height * this.scaleY);\n                this.tempScale = this.dH / this.height;\n                this.taps = this.getTaps();\n                options.destinationHeight = this.dH;\n                this._setupFrameBuffer(options);\n                this.applyToWebGL(options);\n                this._swapTextures(options);\n                options.sourceHeight = options.destinationHeight;\n            } else if (!this.isNeutralState(options)) {\n                this.applyTo2d(options);\n            }\n        },\n        isNeutralState: function(options) {\n            var scaleX = options.scaleX || this.scaleX, scaleY = options.scaleY || this.scaleY;\n            return scaleX === 1 && scaleY === 1;\n        },\n        lanczosCreate: function(lobes) {\n            return function(x) {\n                if (x >= lobes || x <= -lobes) {\n                    return 0;\n                }\n                if (x < 1.1920929e-7 && x > -1.1920929e-7) {\n                    return 1;\n                }\n                x *= Math.PI;\n                var xx = x / lobes;\n                return sin(x) / x * sin(xx) / xx;\n            };\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, scaleX = this.scaleX, scaleY = this.scaleY;\n            this.rcpScaleX = 1 / scaleX;\n            this.rcpScaleY = 1 / scaleY;\n            var oW = imageData.width, oH = imageData.height, dW = round(oW * scaleX), dH = round(oH * scaleY), newData;\n            if (this.resizeType === \"sliceHack\") {\n                newData = this.sliceByTwo(options, oW, oH, dW, dH);\n            } else if (this.resizeType === \"hermite\") {\n                newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n            } else if (this.resizeType === \"bilinear\") {\n                newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n            } else if (this.resizeType === \"lanczos\") {\n                newData = this.lanczosResize(options, oW, oH, dW, dH);\n            }\n            options.imageData = newData;\n        },\n        sliceByTwo: function(options, oW, oH, dW, dH) {\n            var imageData = options.imageData, mult = .5, doneW = false, doneH = false, stepW = oW * mult, stepH = oH * mult, resources = fabric.filterBackend.resources, tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n            if (!resources.sliceByTwo) {\n                resources.sliceByTwo = document.createElement(\"canvas\");\n            }\n            tmpCanvas = resources.sliceByTwo;\n            if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n                tmpCanvas.width = oW * 1.5;\n                tmpCanvas.height = oH;\n            }\n            ctx = tmpCanvas.getContext(\"2d\");\n            ctx.clearRect(0, 0, oW * 1.5, oH);\n            ctx.putImageData(imageData, 0, 0);\n            dW = floor(dW);\n            dH = floor(dH);\n            while (!doneW || !doneH) {\n                oW = stepW;\n                oH = stepH;\n                if (dW < floor(stepW * mult)) {\n                    stepW = floor(stepW * mult);\n                } else {\n                    stepW = dW;\n                    doneW = true;\n                }\n                if (dH < floor(stepH * mult)) {\n                    stepH = floor(stepH * mult);\n                } else {\n                    stepH = dH;\n                    doneH = true;\n                }\n                ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n                sX = dX;\n                sY = dY;\n                dY += stepH;\n            }\n            return ctx.getImageData(sX, sY, dW, dH);\n        },\n        lanczosResize: function(options, oW, oH, dW, dH) {\n            function process(u) {\n                var v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n                center.x = (u + .5) * ratioX;\n                icenter.x = floor(center.x);\n                for (v = 0; v < dH; v++) {\n                    center.y = (v + .5) * ratioY;\n                    icenter.y = floor(center.y);\n                    a = 0;\n                    red = 0;\n                    green = 0;\n                    blue = 0;\n                    alpha = 0;\n                    for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n                        if (i < 0 || i >= oW) {\n                            continue;\n                        }\n                        fX = floor(1e3 * abs(i - center.x));\n                        if (!cacheLanc[fX]) {\n                            cacheLanc[fX] = {};\n                        }\n                        for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n                            if (j < 0 || j >= oH) {\n                                continue;\n                            }\n                            fY = floor(1e3 * abs(j - center.y));\n                            if (!cacheLanc[fX][fY]) {\n                                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1e3);\n                            }\n                            weight = cacheLanc[fX][fY];\n                            if (weight > 0) {\n                                idx = (j * oW + i) * 4;\n                                a += weight;\n                                red += weight * srcData[idx];\n                                green += weight * srcData[idx + 1];\n                                blue += weight * srcData[idx + 2];\n                                alpha += weight * srcData[idx + 3];\n                            }\n                        }\n                    }\n                    idx = (v * dW + u) * 4;\n                    destData[idx] = red / a;\n                    destData[idx + 1] = green / a;\n                    destData[idx + 2] = blue / a;\n                    destData[idx + 3] = alpha / a;\n                }\n                if (++u < dW) {\n                    return process(u);\n                } else {\n                    return destImg;\n                }\n            }\n            var srcData = options.imageData.data, destImg = options.ctx.createImageData(dW, dH), destData = destImg.data, lanczos = this.lanczosCreate(this.lanczosLobes), ratioX = this.rcpScaleX, ratioY = this.rcpScaleY, rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY, range2X = ceil(ratioX * this.lanczosLobes / 2), range2Y = ceil(ratioY * this.lanczosLobes / 2), cacheLanc = {}, center = {}, icenter = {};\n            return process(0);\n        },\n        bilinearFiltering: function(options, oW, oH, dW, dH) {\n            var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl, color, offset = 0, origPix, ratioX = this.rcpScaleX, ratioY = this.rcpScaleY, w4 = 4 * (oW - 1), img = options.imageData, pixels = img.data, destImage = options.ctx.createImageData(dW, dH), destPixels = destImage.data;\n            for (i = 0; i < dH; i++) {\n                for (j = 0; j < dW; j++) {\n                    x = floor(ratioX * j);\n                    y = floor(ratioY * i);\n                    xDiff = ratioX * j - x;\n                    yDiff = ratioY * i - y;\n                    origPix = 4 * (y * oW + x);\n                    for (chnl = 0; chnl < 4; chnl++) {\n                        a = pixels[origPix + chnl];\n                        b = pixels[origPix + 4 + chnl];\n                        c = pixels[origPix + w4 + chnl];\n                        d = pixels[origPix + w4 + 4 + chnl];\n                        color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) + c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n                        destPixels[offset++] = color;\n                    }\n                }\n            }\n            return destImage;\n        },\n        hermiteFastResize: function(options, oW, oH, dW, dH) {\n            var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY, ratioWHalf = ceil(ratioW / 2), ratioHHalf = ceil(ratioH / 2), img = options.imageData, data = img.data, img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n            for (var j = 0; j < dH; j++) {\n                for (var i = 0; i < dW; i++) {\n                    var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0, gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + .5) * ratioH;\n                    for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n                        var dy = abs(centerY - (yy + .5)) / ratioHHalf, centerX = (i + .5) * ratioW, w0 = dy * dy;\n                        for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n                            var dx = abs(centerX - (xx + .5)) / ratioWHalf, w = sqrt(w0 + dx * dx);\n                            if (w > 1 && w < -1) {\n                                continue;\n                            }\n                            weight = 2 * w * w * w - 3 * w * w + 1;\n                            if (weight > 0) {\n                                dx = 4 * (xx + yy * oW);\n                                gxA += weight * data[dx + 3];\n                                weightsAlpha += weight;\n                                if (data[dx + 3] < 255) {\n                                    weight = weight * data[dx + 3] / 250;\n                                }\n                                gxR += weight * data[dx];\n                                gxG += weight * data[dx + 1];\n                                gxB += weight * data[dx + 2];\n                                weights += weight;\n                            }\n                        }\n                    }\n                    data2[x2] = gxR / weights;\n                    data2[x2 + 1] = gxG / weights;\n                    data2[x2 + 2] = gxB / weights;\n                    data2[x2 + 3] = gxA / weightsAlpha;\n                }\n            }\n            return img2;\n        },\n        toObject: function() {\n            return {\n                type: this.type,\n                scaleX: this.scaleX,\n                scaleY: this.scaleY,\n                resizeType: this.resizeType,\n                lanczosLobes: this.lanczosLobes\n            };\n        }\n    });\n    fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Contrast = createClass(filters.BaseFilter, {\n        type: \"Contrast\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uContrast;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n\" + \"color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        contrast: 0,\n        mainParameter: \"contrast\",\n        applyTo2d: function(options) {\n            if (this.contrast === 0) {\n                return;\n            }\n            var imageData = options.imageData, i, len, data = imageData.data, len = data.length, contrast = Math.floor(this.contrast * 255), contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n            for (i = 0; i < len; i += 4) {\n                data[i] = contrastF * (data[i] - 128) + 128;\n                data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n                data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uContrast: gl.getUniformLocation(program, \"uContrast\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uContrast, this.contrast);\n        }\n    });\n    fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Saturation = createClass(filters.BaseFilter, {\n        type: \"Saturation\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uSaturation;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"float rgMax = max(color.r, color.g);\\n\" + \"float rgbMax = max(rgMax, color.b);\\n\" + \"color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n\" + \"color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n\" + \"color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        saturation: 0,\n        mainParameter: \"saturation\",\n        applyTo2d: function(options) {\n            if (this.saturation === 0) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, len = data.length, adjust = -this.saturation, i, max;\n            for (i = 0; i < len; i += 4) {\n                max = Math.max(data[i], data[i + 1], data[i + 2]);\n                data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n                data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n                data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uSaturation: gl.getUniformLocation(program, \"uSaturation\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n        }\n    });\n    fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Blur = createClass(filters.BaseFilter, {\n        type: \"Blur\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec2 uDelta;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"const float nSamples = 15.0;\\n\" + \"vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n\" + \"float random(vec3 scale) {\\n\" + \"return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n\" + \"}\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0.0);\\n\" + \"float total = 0.0;\\n\" + \"float offset = random(v3offset);\\n\" + \"for (float t = -nSamples; t <= nSamples; t++) {\\n\" + \"float percent = (t + offset - 0.5) / nSamples;\\n\" + \"float weight = 1.0 - abs(percent);\\n\" + \"color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n\" + \"total += weight;\\n\" + \"}\\n\" + \"gl_FragColor = color / total;\\n\" + \"}\",\n        blur: 0,\n        mainParameter: \"blur\",\n        applyTo: function(options) {\n            if (options.webgl) {\n                this.aspectRatio = options.sourceWidth / options.sourceHeight;\n                options.passes++;\n                this._setupFrameBuffer(options);\n                this.horizontal = true;\n                this.applyToWebGL(options);\n                this._swapTextures(options);\n                this._setupFrameBuffer(options);\n                this.horizontal = false;\n                this.applyToWebGL(options);\n                this._swapTextures(options);\n            } else {\n                this.applyTo2d(options);\n            }\n        },\n        applyTo2d: function(options) {\n            options.imageData = this.simpleBlur(options);\n        },\n        simpleBlur: function(options) {\n            var resources = options.filterBackend.resources, canvas1, canvas2, width = options.imageData.width, height = options.imageData.height;\n            if (!resources.blurLayer1) {\n                resources.blurLayer1 = document.createElement(\"canvas\");\n                resources.blurLayer2 = document.createElement(\"canvas\");\n            }\n            canvas1 = resources.blurLayer1;\n            canvas2 = resources.blurLayer2;\n            if (canvas1.width !== width || canvas1.height !== height) {\n                canvas2.width = canvas1.width = width;\n                canvas2.height = canvas1.height = height;\n            }\n            var ctx1 = canvas1.getContext(\"2d\"), ctx2 = canvas2.getContext(\"2d\"), nSamples = 15, random, percent, j, i, blur = this.blur * .06 * .5;\n            ctx1.putImageData(options.imageData, 0, 0);\n            ctx2.clearRect(0, 0, width, height);\n            for (i = -nSamples; i <= nSamples; i++) {\n                random = (Math.random() - .5) / 4;\n                percent = i / nSamples;\n                j = blur * percent * width + random;\n                ctx2.globalAlpha = 1 - Math.abs(percent);\n                ctx2.drawImage(canvas1, j, random);\n                ctx1.drawImage(canvas2, 0, 0);\n                ctx2.globalAlpha = 1;\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n            }\n            for (i = -nSamples; i <= nSamples; i++) {\n                random = (Math.random() - .5) / 4;\n                percent = i / nSamples;\n                j = blur * percent * height + random;\n                ctx2.globalAlpha = 1 - Math.abs(percent);\n                ctx2.drawImage(canvas1, random, j);\n                ctx1.drawImage(canvas2, 0, 0);\n                ctx2.globalAlpha = 1;\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n            }\n            options.ctx.drawImage(canvas1, 0, 0);\n            var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n            ctx1.globalAlpha = 1;\n            ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n            return newImageData;\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                delta: gl.getUniformLocation(program, \"uDelta\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var delta = this.chooseRightDelta();\n            gl.uniform2fv(uniformLocations.delta, delta);\n        },\n        chooseRightDelta: function() {\n            var blurScale = 1, delta = [ 0, 0 ], blur;\n            if (this.horizontal) {\n                if (this.aspectRatio > 1) {\n                    blurScale = 1 / this.aspectRatio;\n                }\n            } else {\n                if (this.aspectRatio < 1) {\n                    blurScale = this.aspectRatio;\n                }\n            }\n            blur = blurScale * this.blur * .12;\n            if (this.horizontal) {\n                delta[0] = blur;\n            } else {\n                delta[1] = blur;\n            }\n            return delta;\n        }\n    });\n    filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Gamma = createClass(filters.BaseFilter, {\n        type: \"Gamma\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec3 uGamma;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"vec3 correction = (1.0 / uGamma);\\n\" + \"color.r = pow(color.r, correction.r);\\n\" + \"color.g = pow(color.g, correction.g);\\n\" + \"color.b = pow(color.b, correction.b);\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.rgb *= color.a;\\n\" + \"}\",\n        gamma: [ 1, 1, 1 ],\n        mainParameter: \"gamma\",\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, gamma = this.gamma, len = data.length, rInv = 1 / gamma[0], gInv = 1 / gamma[1], bInv = 1 / gamma[2], i;\n            if (!this.rVals) {\n                this.rVals = new Uint8Array(256);\n                this.gVals = new Uint8Array(256);\n                this.bVals = new Uint8Array(256);\n            }\n            for (i = 0, len = 256; i < len; i++) {\n                this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n                this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n                this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n            }\n            for (i = 0, len = data.length; i < len; i += 4) {\n                data[i] = this.rVals[data[i]];\n                data[i + 1] = this.gVals[data[i + 1]];\n                data[i + 2] = this.bVals[data[i + 2]];\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uGamma: gl.getUniformLocation(program, \"uGamma\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n        }\n    });\n    fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Composed = createClass(filters.BaseFilter, {\n        type: \"Composed\",\n        subFilters: [],\n        initialize: function(options) {\n            this.callSuper(\"initialize\", options);\n            this.subFilters = this.subFilters.slice(0);\n        },\n        applyTo: function(options) {\n            options.passes += this.subFilters.length - 1;\n            this.subFilters.forEach(function(filter) {\n                filter.applyTo(options);\n            });\n        },\n        toObject: function() {\n            return fabric.util.object.extend(this.callSuper(\"toObject\"), {\n                subFilters: this.subFilters.map(function(filter) {\n                    return filter.toObject();\n                })\n            });\n        }\n    });\n    fabric.Image.filters.Composed.fromObject = function(object, callback) {\n        var filters = object.subFilters || [], subFilters = filters.map(function(filter) {\n            return new fabric.Image.filters[filter.type](filter);\n        }), instance = new fabric.Image.filters.Composed({\n            subFilters: subFilters\n        });\n        callback && callback(instance);\n        return instance;\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.HueRotation = createClass(filters.ColorMatrix, {\n        type: \"HueRotation\",\n        rotation: 0,\n        mainParameter: \"rotation\",\n        calculateMatrix: function() {\n            var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad), aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n            this.matrix = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ];\n            this.matrix[0] = cos + OneMinusCos / 3;\n            this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n            this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n            this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n            this.matrix[6] = cos + aThird * OneMinusCos;\n            this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n            this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n            this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n            this.matrix[12] = cos + aThird * OneMinusCos;\n        },\n        applyTo: function(options) {\n            this.calculateMatrix();\n            fabric.Image.filters.BaseFilter.prototype.applyTo.call(this, options);\n        }\n    });\n    fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), clone = fabric.util.object.clone;\n    if (fabric.Text) {\n        fabric.warn(\"fabric.Text is already defined\");\n        return;\n    }\n    fabric.Text = fabric.util.createClass(fabric.Object, {\n        _dimensionAffectingProps: [ \"fontSize\", \"fontWeight\", \"fontFamily\", \"fontStyle\", \"lineHeight\", \"text\", \"charSpacing\", \"textAlign\", \"styles\" ],\n        _reNewline: /\\r?\\n/,\n        _reSpacesAndTabs: /[ \\t\\r]/g,\n        _reSpaceAndTab: /[ \\t\\r]/,\n        _reWords: /\\S+/g,\n        type: \"text\",\n        fontSize: 40,\n        fontWeight: \"normal\",\n        fontFamily: \"Times New Roman\",\n        underline: false,\n        overline: false,\n        linethrough: false,\n        textAlign: \"left\",\n        fontStyle: \"normal\",\n        lineHeight: 1.16,\n        superscript: {\n            size: .6,\n            baseline: -.35\n        },\n        subscript: {\n            size: .6,\n            baseline: .11\n        },\n        textBackgroundColor: \"\",\n        stateProperties: fabric.Object.prototype.stateProperties.concat(\"fontFamily\", \"fontWeight\", \"fontSize\", \"text\", \"underline\", \"overline\", \"linethrough\", \"textAlign\", \"fontStyle\", \"lineHeight\", \"textBackgroundColor\", \"charSpacing\", \"styles\"),\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"fontFamily\", \"fontWeight\", \"fontSize\", \"text\", \"underline\", \"overline\", \"linethrough\", \"textAlign\", \"fontStyle\", \"lineHeight\", \"textBackgroundColor\", \"charSpacing\", \"styles\"),\n        stroke: null,\n        shadow: null,\n        _fontSizeFraction: .222,\n        offsets: {\n            underline: .1,\n            linethrough: -.315,\n            overline: -.88\n        },\n        _fontSizeMult: 1.13,\n        charSpacing: 0,\n        styles: null,\n        _measuringContext: null,\n        deltaY: 0,\n        _styleProperties: [ \"stroke\", \"strokeWidth\", \"fill\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"underline\", \"overline\", \"linethrough\", \"deltaY\", \"textBackgroundColor\" ],\n        __charBounds: [],\n        CACHE_FONT_SIZE: 400,\n        MIN_TEXT_WIDTH: 2,\n        initialize: function(text, options) {\n            this.styles = options ? options.styles || {} : {};\n            this.text = text;\n            this.__skipDimension = true;\n            this.callSuper(\"initialize\", options);\n            this.__skipDimension = false;\n            this.initDimensions();\n            this.setCoords();\n            this.setupState({\n                propertySet: \"_dimensionAffectingProps\"\n            });\n        },\n        getMeasuringContext: function() {\n            if (!fabric._measuringContext) {\n                fabric._measuringContext = this.canvas && this.canvas.contextCache || fabric.util.createCanvasElement().getContext(\"2d\");\n            }\n            return fabric._measuringContext;\n        },\n        _splitText: function() {\n            var newLines = this._splitTextIntoLines(this.text);\n            this.textLines = newLines.lines;\n            this._textLines = newLines.graphemeLines;\n            this._unwrappedTextLines = newLines._unwrappedLines;\n            this._text = newLines.graphemeText;\n            return newLines;\n        },\n        initDimensions: function() {\n            if (this.__skipDimension) {\n                return;\n            }\n            this._splitText();\n            this._clearCache();\n            this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n            if (this.textAlign.indexOf(\"justify\") !== -1) {\n                this.enlargeSpaces();\n            }\n            this.height = this.calcTextHeight();\n            this.saveState({\n                propertySet: \"_dimensionAffectingProps\"\n            });\n        },\n        enlargeSpaces: function() {\n            var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                if (this.textAlign !== \"justify\" && (i === len - 1 || this.isEndOfWrapping(i))) {\n                    continue;\n                }\n                accumulatedSpace = 0;\n                line = this._textLines[i];\n                currentLineWidth = this.getLineWidth(i);\n                if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n                    numberOfSpaces = spaces.length;\n                    diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n                    for (var j = 0, jlen = line.length; j <= jlen; j++) {\n                        charBound = this.__charBounds[i][j];\n                        if (this._reSpaceAndTab.test(line[j])) {\n                            charBound.width += diffSpace;\n                            charBound.kernedWidth += diffSpace;\n                            charBound.left += accumulatedSpace;\n                            accumulatedSpace += diffSpace;\n                        } else {\n                            charBound.left += accumulatedSpace;\n                        }\n                    }\n                }\n            }\n        },\n        isEndOfWrapping: function(lineIndex) {\n            return lineIndex === this._textLines.length - 1;\n        },\n        toString: function() {\n            return \"#<fabric.Text (\" + this.complexity() + '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n        },\n        _getCacheCanvasDimensions: function() {\n            var dims = this.callSuper(\"_getCacheCanvasDimensions\");\n            var fontSize = this.fontSize;\n            dims.width += fontSize * dims.zoomX;\n            dims.height += fontSize * dims.zoomY;\n            return dims;\n        },\n        _render: function(ctx) {\n            this._setTextStyles(ctx);\n            this._renderTextLinesBackground(ctx);\n            this._renderTextDecoration(ctx, \"underline\");\n            this._renderText(ctx);\n            this._renderTextDecoration(ctx, \"overline\");\n            this._renderTextDecoration(ctx, \"linethrough\");\n        },\n        _renderText: function(ctx) {\n            if (this.paintFirst === \"stroke\") {\n                this._renderTextStroke(ctx);\n                this._renderTextFill(ctx);\n            } else {\n                this._renderTextFill(ctx);\n                this._renderTextStroke(ctx);\n            }\n        },\n        _setTextStyles: function(ctx, charStyle, forMeasuring) {\n            ctx.textBaseline = \"alphabetic\";\n            ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n        },\n        calcTextWidth: function() {\n            var maxWidth = this.getLineWidth(0);\n            for (var i = 1, len = this._textLines.length; i < len; i++) {\n                var currentLineWidth = this.getLineWidth(i);\n                if (currentLineWidth > maxWidth) {\n                    maxWidth = currentLineWidth;\n                }\n            }\n            return maxWidth;\n        },\n        _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n            this._renderChars(method, ctx, line, left, top, lineIndex);\n        },\n        _renderTextLinesBackground: function(ctx) {\n            if (!this.textBackgroundColor && !this.styleHas(\"textBackgroundColor\")) {\n                return;\n            }\n            var lineTopOffset = 0, heightOfLine, lineLeftOffset, originalFill = ctx.fillStyle, line, lastColor, leftOffset = this._getLeftOffset(), topOffset = this._getTopOffset(), boxStart = 0, boxWidth = 0, charBox, currentColor;\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                heightOfLine = this.getHeightOfLine(i);\n                if (!this.textBackgroundColor && !this.styleHas(\"textBackgroundColor\", i)) {\n                    lineTopOffset += heightOfLine;\n                    continue;\n                }\n                line = this._textLines[i];\n                lineLeftOffset = this._getLineLeftOffset(i);\n                boxWidth = 0;\n                boxStart = 0;\n                lastColor = this.getValueOfPropertyAt(i, 0, \"textBackgroundColor\");\n                for (var j = 0, jlen = line.length; j < jlen; j++) {\n                    charBox = this.__charBounds[i][j];\n                    currentColor = this.getValueOfPropertyAt(i, j, \"textBackgroundColor\");\n                    if (currentColor !== lastColor) {\n                        ctx.fillStyle = lastColor;\n                        lastColor && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n                        boxStart = charBox.left;\n                        boxWidth = charBox.width;\n                        lastColor = currentColor;\n                    } else {\n                        boxWidth += charBox.kernedWidth;\n                    }\n                }\n                if (currentColor) {\n                    ctx.fillStyle = currentColor;\n                    ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n                }\n                lineTopOffset += heightOfLine;\n            }\n            ctx.fillStyle = originalFill;\n            this._removeShadow(ctx);\n        },\n        getFontCache: function(decl) {\n            var fontFamily = decl.fontFamily.toLowerCase();\n            if (!fabric.charWidthsCache[fontFamily]) {\n                fabric.charWidthsCache[fontFamily] = {};\n            }\n            var cache = fabric.charWidthsCache[fontFamily], cacheProp = decl.fontStyle.toLowerCase() + \"_\" + (decl.fontWeight + \"\").toLowerCase();\n            if (!cache[cacheProp]) {\n                cache[cacheProp] = {};\n            }\n            return cache[cacheProp];\n        },\n        _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n            this._setFillStyles(ctx, styleDeclaration);\n            this._setStrokeStyles(ctx, styleDeclaration);\n            ctx.font = this._getFontDeclaration(styleDeclaration);\n        },\n        _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n            var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle), previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char, stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth, fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n            if (previousChar && fontCache[previousChar]) {\n                previousWidth = fontCache[previousChar];\n            }\n            if (fontCache[_char]) {\n                kernedWidth = width = fontCache[_char];\n            }\n            if (stylesAreEqual && fontCache[couple]) {\n                coupleWidth = fontCache[couple];\n                kernedWidth = coupleWidth - previousWidth;\n            }\n            if (!width || !previousWidth || !coupleWidth) {\n                var ctx = this.getMeasuringContext();\n                this._setTextStyles(ctx, charStyle, true);\n            }\n            if (!width) {\n                kernedWidth = width = ctx.measureText(_char).width;\n                fontCache[_char] = width;\n            }\n            if (!previousWidth && stylesAreEqual && previousChar) {\n                previousWidth = ctx.measureText(previousChar).width;\n                fontCache[previousChar] = previousWidth;\n            }\n            if (stylesAreEqual && !coupleWidth) {\n                coupleWidth = ctx.measureText(couple).width;\n                fontCache[couple] = coupleWidth;\n                kernedWidth = coupleWidth - previousWidth;\n            }\n            return {\n                width: width * fontMultiplier,\n                kernedWidth: kernedWidth * fontMultiplier\n            };\n        },\n        getHeightOfChar: function(line, char) {\n            return this.getValueOfPropertyAt(line, char, \"fontSize\");\n        },\n        measureLine: function(lineIndex) {\n            var lineInfo = this._measureLine(lineIndex);\n            if (this.charSpacing !== 0) {\n                lineInfo.width -= this._getWidthOfCharSpacing();\n            }\n            if (lineInfo.width < 0) {\n                lineInfo.width = 0;\n            }\n            return lineInfo;\n        },\n        _measureLine: function(lineIndex) {\n            var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme, graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n            this.__charBounds[lineIndex] = lineBounds;\n            for (i = 0; i < line.length; i++) {\n                grapheme = line[i];\n                graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n                lineBounds[i] = graphemeInfo;\n                width += graphemeInfo.kernedWidth;\n                prevGrapheme = grapheme;\n            }\n            lineBounds[i] = {\n                left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n                width: 0,\n                kernedWidth: 0,\n                height: this.fontSize\n            };\n            return {\n                width: width,\n                numOfSpaces: numOfSpaces\n            };\n        },\n        _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n            var style = this.getCompleteStyleDeclaration(lineIndex, charIndex), prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : {}, info = this._measureChar(grapheme, style, prevGrapheme, prevStyle), kernedWidth = info.kernedWidth, width = info.width, charSpacing;\n            if (this.charSpacing !== 0) {\n                charSpacing = this._getWidthOfCharSpacing();\n                width += charSpacing;\n                kernedWidth += charSpacing;\n            }\n            var box = {\n                width: width,\n                left: 0,\n                height: style.fontSize,\n                kernedWidth: kernedWidth,\n                deltaY: style.deltaY\n            };\n            if (charIndex > 0 && !skipLeft) {\n                var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n                box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n            }\n            return box;\n        },\n        getHeightOfLine: function(lineIndex) {\n            if (this.__lineHeights[lineIndex]) {\n                return this.__lineHeights[lineIndex];\n            }\n            var line = this._textLines[lineIndex], maxHeight = this.getHeightOfChar(lineIndex, 0);\n            for (var i = 1, len = line.length; i < len; i++) {\n                maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n            }\n            return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n        },\n        calcTextHeight: function() {\n            var lineHeight, height = 0;\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                lineHeight = this.getHeightOfLine(i);\n                height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n            }\n            return height;\n        },\n        _getLeftOffset: function() {\n            return -this.width / 2;\n        },\n        _getTopOffset: function() {\n            return -this.height / 2;\n        },\n        _renderTextCommon: function(ctx, method) {\n            ctx.save();\n            var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(), offsets = this._applyPatternGradientTransform(ctx, method === \"fillText\" ? this.fill : this.stroke);\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                var heightOfLine = this.getHeightOfLine(i), maxHeight = heightOfLine / this.lineHeight, leftOffset = this._getLineLeftOffset(i);\n                this._renderTextLine(method, ctx, this._textLines[i], left + leftOffset - offsets.offsetX, top + lineHeights + maxHeight - offsets.offsetY, i);\n                lineHeights += heightOfLine;\n            }\n            ctx.restore();\n        },\n        _renderTextFill: function(ctx) {\n            if (!this.fill && !this.styleHas(\"fill\")) {\n                return;\n            }\n            this._renderTextCommon(ctx, \"fillText\");\n        },\n        _renderTextStroke: function(ctx) {\n            if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n                return;\n            }\n            if (this.shadow && !this.shadow.affectStroke) {\n                this._removeShadow(ctx);\n            }\n            ctx.save();\n            this._setLineDash(ctx, this.strokeDashArray);\n            ctx.beginPath();\n            this._renderTextCommon(ctx, \"strokeText\");\n            ctx.closePath();\n            ctx.restore();\n        },\n        _renderChars: function(method, ctx, line, left, top, lineIndex) {\n            var lineHeight = this.getHeightOfLine(lineIndex), isJustify = this.textAlign.indexOf(\"justify\") !== -1, actualStyle, nextStyle, charsToRender = \"\", charBox, boxWidth = 0, timeToRender, shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n            ctx.save();\n            top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n            if (shortCut) {\n                this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n                ctx.restore();\n                return;\n            }\n            for (var i = 0, len = line.length - 1; i <= len; i++) {\n                timeToRender = i === len || this.charSpacing;\n                charsToRender += line[i];\n                charBox = this.__charBounds[lineIndex][i];\n                if (boxWidth === 0) {\n                    left += charBox.kernedWidth - charBox.width;\n                    boxWidth += charBox.width;\n                } else {\n                    boxWidth += charBox.kernedWidth;\n                }\n                if (isJustify && !timeToRender) {\n                    if (this._reSpaceAndTab.test(line[i])) {\n                        timeToRender = true;\n                    }\n                }\n                if (!timeToRender) {\n                    actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n                    nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n                    timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n                }\n                if (timeToRender) {\n                    this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n                    charsToRender = \"\";\n                    actualStyle = nextStyle;\n                    left += boxWidth;\n                    boxWidth = 0;\n                }\n            }\n            ctx.restore();\n        },\n        _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n            var decl = this._getStyleDeclaration(lineIndex, charIndex), fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex), shouldFill = method === \"fillText\" && fullDecl.fill, shouldStroke = method === \"strokeText\" && fullDecl.stroke && fullDecl.strokeWidth;\n            if (!shouldStroke && !shouldFill) {\n                return;\n            }\n            decl && ctx.save();\n            this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n            if (decl && decl.textBackgroundColor) {\n                this._removeShadow(ctx);\n            }\n            if (decl && decl.deltaY) {\n                top += decl.deltaY;\n            }\n            shouldFill && ctx.fillText(_char, left, top);\n            shouldStroke && ctx.strokeText(_char, left, top);\n            decl && ctx.restore();\n        },\n        setSuperscript: function(start, end) {\n            return this._setScript(start, end, this.superscript);\n        },\n        setSubscript: function(start, end) {\n            return this._setScript(start, end, this.subscript);\n        },\n        _setScript: function(start, end, schema) {\n            var loc = this.get2DCursorLocation(start, true), fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, \"fontSize\"), dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, \"deltaY\"), style = {\n                fontSize: fontSize * schema.size,\n                deltaY: dy + fontSize * schema.baseline\n            };\n            this.setSelectionStyles(style, start, end);\n            return this;\n        },\n        _hasStyleChanged: function(prevStyle, thisStyle) {\n            return prevStyle.fill !== thisStyle.fill || prevStyle.stroke !== thisStyle.stroke || prevStyle.strokeWidth !== thisStyle.strokeWidth || prevStyle.fontSize !== thisStyle.fontSize || prevStyle.fontFamily !== thisStyle.fontFamily || prevStyle.fontWeight !== thisStyle.fontWeight || prevStyle.fontStyle !== thisStyle.fontStyle || prevStyle.deltaY !== thisStyle.deltaY;\n        },\n        _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n            return this._hasStyleChanged(prevStyle, thisStyle) || prevStyle.overline !== thisStyle.overline || prevStyle.underline !== thisStyle.underline || prevStyle.linethrough !== thisStyle.linethrough;\n        },\n        _getLineLeftOffset: function(lineIndex) {\n            var lineWidth = this.getLineWidth(lineIndex);\n            if (this.textAlign === \"center\") {\n                return (this.width - lineWidth) / 2;\n            }\n            if (this.textAlign === \"right\") {\n                return this.width - lineWidth;\n            }\n            if (this.textAlign === \"justify-center\" && this.isEndOfWrapping(lineIndex)) {\n                return (this.width - lineWidth) / 2;\n            }\n            if (this.textAlign === \"justify-right\" && this.isEndOfWrapping(lineIndex)) {\n                return this.width - lineWidth;\n            }\n            return 0;\n        },\n        _clearCache: function() {\n            this.__lineWidths = [];\n            this.__lineHeights = [];\n            this.__charBounds = [];\n        },\n        _shouldClearDimensionCache: function() {\n            var shouldClear = this._forceClearCache;\n            shouldClear || (shouldClear = this.hasStateChanged(\"_dimensionAffectingProps\"));\n            if (shouldClear) {\n                this.dirty = true;\n                this._forceClearCache = false;\n            }\n            return shouldClear;\n        },\n        getLineWidth: function(lineIndex) {\n            if (this.__lineWidths[lineIndex]) {\n                return this.__lineWidths[lineIndex];\n            }\n            var width, line = this._textLines[lineIndex], lineInfo;\n            if (line === \"\") {\n                width = 0;\n            } else {\n                lineInfo = this.measureLine(lineIndex);\n                width = lineInfo.width;\n            }\n            this.__lineWidths[lineIndex] = width;\n            return width;\n        },\n        _getWidthOfCharSpacing: function() {\n            if (this.charSpacing !== 0) {\n                return this.fontSize * this.charSpacing / 1e3;\n            }\n            return 0;\n        },\n        getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n            var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n            if (charStyle && typeof charStyle[property] !== \"undefined\") {\n                return charStyle[property];\n            }\n            return this[property];\n        },\n        _renderTextDecoration: function(ctx, type) {\n            if (!this[type] && !this.styleHas(type)) {\n                return;\n            }\n            var heightOfLine, size, _size, lineLeftOffset, dy, _dy, line, lastDecoration, leftOffset = this._getLeftOffset(), topOffset = this._getTopOffset(), top, boxStart, boxWidth, charBox, currentDecoration, maxHeight, currentFill, lastFill;\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                heightOfLine = this.getHeightOfLine(i);\n                if (!this[type] && !this.styleHas(type, i)) {\n                    topOffset += heightOfLine;\n                    continue;\n                }\n                line = this._textLines[i];\n                maxHeight = heightOfLine / this.lineHeight;\n                lineLeftOffset = this._getLineLeftOffset(i);\n                boxStart = 0;\n                boxWidth = 0;\n                lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n                lastFill = this.getValueOfPropertyAt(i, 0, \"fill\");\n                top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n                size = this.getHeightOfChar(i, 0);\n                dy = this.getValueOfPropertyAt(i, 0, \"deltaY\");\n                for (var j = 0, jlen = line.length; j < jlen; j++) {\n                    charBox = this.__charBounds[i][j];\n                    currentDecoration = this.getValueOfPropertyAt(i, j, type);\n                    currentFill = this.getValueOfPropertyAt(i, j, \"fill\");\n                    _size = this.getHeightOfChar(i, j);\n                    _dy = this.getValueOfPropertyAt(i, j, \"deltaY\");\n                    if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) && boxWidth > 0) {\n                        ctx.fillStyle = lastFill;\n                        lastDecoration && lastFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth, this.fontSize / 15);\n                        boxStart = charBox.left;\n                        boxWidth = charBox.width;\n                        lastDecoration = currentDecoration;\n                        lastFill = currentFill;\n                        size = _size;\n                        dy = _dy;\n                    } else {\n                        boxWidth += charBox.kernedWidth;\n                    }\n                }\n                ctx.fillStyle = currentFill;\n                currentDecoration && currentFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth, this.fontSize / 15);\n                topOffset += heightOfLine;\n            }\n            this._removeShadow(ctx);\n        },\n        _getFontDeclaration: function(styleObject, forMeasuring) {\n            var style = styleObject || this;\n            var fontFamily = style.fontFamily === undefined || style.fontFamily.indexOf(\"'\") > -1 || style.fontFamily.indexOf('\"') > -1 ? style.fontFamily : '\"' + style.fontFamily + '\"';\n            return [ fabric.isLikelyNode ? style.fontWeight : style.fontStyle, fabric.isLikelyNode ? style.fontStyle : style.fontWeight, forMeasuring ? this.CACHE_FONT_SIZE + \"px\" : style.fontSize + \"px\", fontFamily ].join(\" \");\n        },\n        render: function(ctx) {\n            if (!this.visible) {\n                return;\n            }\n            if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n                return;\n            }\n            if (this._shouldClearDimensionCache()) {\n                this.initDimensions();\n            }\n            this.callSuper(\"render\", ctx);\n        },\n        _splitTextIntoLines: function(text) {\n            var lines = text.split(this._reNewline), newLines = new Array(lines.length), newLine = [ \"\\n\" ], newText = [];\n            for (var i = 0; i < lines.length; i++) {\n                newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n                newText = newText.concat(newLines[i], newLine);\n            }\n            newText.pop();\n            return {\n                _unwrappedLines: newLines,\n                lines: lines,\n                graphemeText: newText,\n                graphemeLines: newLines\n            };\n        },\n        toObject: function(propertiesToInclude) {\n            var additionalProperties = [ \"text\", \"fontSize\", \"fontWeight\", \"fontFamily\", \"fontStyle\", \"lineHeight\", \"underline\", \"overline\", \"linethrough\", \"textAlign\", \"textBackgroundColor\", \"charSpacing\" ].concat(propertiesToInclude);\n            var obj = this.callSuper(\"toObject\", additionalProperties);\n            obj.styles = clone(this.styles, true);\n            return obj;\n        },\n        set: function(key, value) {\n            this.callSuper(\"set\", key, value);\n            var needsDims = false;\n            if (typeof key === \"object\") {\n                for (var _key in key) {\n                    needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n                }\n            } else {\n                needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n            }\n            if (needsDims) {\n                this.initDimensions();\n                this.setCoords();\n            }\n            return this;\n        },\n        complexity: function() {\n            return 1;\n        }\n    });\n    fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor\".split(\" \"));\n    fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n    fabric.Text.fromElement = function(element, callback, options) {\n        if (!element) {\n            return callback(null);\n        }\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES), parsedAnchor = parsedAttributes.textAnchor || \"left\";\n        options = fabric.util.object.extend(options ? clone(options) : {}, parsedAttributes);\n        options.top = options.top || 0;\n        options.left = options.left || 0;\n        if (parsedAttributes.textDecoration) {\n            var textDecoration = parsedAttributes.textDecoration;\n            if (textDecoration.indexOf(\"underline\") !== -1) {\n                options.underline = true;\n            }\n            if (textDecoration.indexOf(\"overline\") !== -1) {\n                options.overline = true;\n            }\n            if (textDecoration.indexOf(\"line-through\") !== -1) {\n                options.linethrough = true;\n            }\n            delete options.textDecoration;\n        }\n        if (\"dx\" in parsedAttributes) {\n            options.left += parsedAttributes.dx;\n        }\n        if (\"dy\" in parsedAttributes) {\n            options.top += parsedAttributes.dy;\n        }\n        if (!(\"fontSize\" in options)) {\n            options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n        }\n        var textContent = \"\";\n        if (!(\"textContent\" in element)) {\n            if (\"firstChild\" in element && element.firstChild !== null) {\n                if (\"data\" in element.firstChild && element.firstChild.data !== null) {\n                    textContent = element.firstChild.data;\n                }\n            }\n        } else {\n            textContent = element.textContent;\n        }\n        textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, \"\").replace(/\\s+/g, \" \");\n        var text = new fabric.Text(textContent, options), textHeightScaleFactor = text.getScaledHeight() / text.height, lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height, scaledDiff = lineHeightDiff * textHeightScaleFactor, textHeight = text.getScaledHeight() + scaledDiff, offX = 0;\n        if (parsedAnchor === \"center\") {\n            offX = text.getScaledWidth() / 2;\n        }\n        if (parsedAnchor === \"right\") {\n            offX = text.getScaledWidth();\n        }\n        text.set({\n            left: text.left - offX,\n            top: text.top - (textHeight - text.fontSize * (.18 + text._fontSizeFraction)) / text.lineHeight\n        });\n        callback(text);\n    };\n    fabric.Text.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Text\", object, callback, \"text\");\n    };\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    fabric.util.object.extend(fabric.Text.prototype, {\n        isEmptyStyles: function(lineIndex) {\n            if (!this.styles) {\n                return true;\n            }\n            if (typeof lineIndex !== \"undefined\" && !this.styles[lineIndex]) {\n                return true;\n            }\n            var obj = typeof lineIndex === \"undefined\" ? this.styles : {\n                line: this.styles[lineIndex]\n            };\n            for (var p1 in obj) {\n                for (var p2 in obj[p1]) {\n                    for (var p3 in obj[p1][p2]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n        styleHas: function(property, lineIndex) {\n            if (!this.styles || !property || property === \"\") {\n                return false;\n            }\n            if (typeof lineIndex !== \"undefined\" && !this.styles[lineIndex]) {\n                return false;\n            }\n            var obj = typeof lineIndex === \"undefined\" ? this.styles : {\n                line: this.styles[lineIndex]\n            };\n            for (var p1 in obj) {\n                for (var p2 in obj[p1]) {\n                    if (typeof obj[p1][p2][property] !== \"undefined\") {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        cleanStyle: function(property) {\n            if (!this.styles || !property || property === \"\") {\n                return false;\n            }\n            var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue, allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n            for (var p1 in obj) {\n                letterCount = 0;\n                for (var p2 in obj[p1]) {\n                    var styleObject = obj[p1][p2], stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n                    stylesCount++;\n                    if (stylePropertyHasBeenSet) {\n                        if (!stylePropertyValue) {\n                            stylePropertyValue = styleObject[property];\n                        } else if (styleObject[property] !== stylePropertyValue) {\n                            allStyleObjectPropertiesMatch = false;\n                        }\n                        if (styleObject[property] === this[property]) {\n                            delete styleObject[property];\n                        }\n                    } else {\n                        allStyleObjectPropertiesMatch = false;\n                    }\n                    if (Object.keys(styleObject).length !== 0) {\n                        letterCount++;\n                    } else {\n                        delete obj[p1][p2];\n                    }\n                }\n                if (letterCount === 0) {\n                    delete obj[p1];\n                }\n            }\n            for (var i = 0; i < this._textLines.length; i++) {\n                graphemeCount += this._textLines[i].length;\n            }\n            if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n                this[property] = stylePropertyValue;\n                this.removeStyle(property);\n            }\n        },\n        removeStyle: function(property) {\n            if (!this.styles || !property || property === \"\") {\n                return;\n            }\n            var obj = this.styles, line, lineNum, charNum;\n            for (lineNum in obj) {\n                line = obj[lineNum];\n                for (charNum in line) {\n                    delete line[charNum][property];\n                    if (Object.keys(line[charNum]).length === 0) {\n                        delete line[charNum];\n                    }\n                }\n                if (Object.keys(line).length === 0) {\n                    delete obj[lineNum];\n                }\n            }\n        },\n        _extendStyles: function(index, styles) {\n            var loc = this.get2DCursorLocation(index);\n            if (!this._getLineStyle(loc.lineIndex)) {\n                this._setLineStyle(loc.lineIndex, {});\n            }\n            if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n                this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n            }\n            fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n        },\n        get2DCursorLocation: function(selectionStart, skipWrapping) {\n            if (typeof selectionStart === \"undefined\") {\n                selectionStart = this.selectionStart;\n            }\n            var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n            var len = lines.length;\n            for (var i = 0; i < len; i++) {\n                if (selectionStart <= lines[i].length) {\n                    return {\n                        lineIndex: i,\n                        charIndex: selectionStart\n                    };\n                }\n                selectionStart -= lines[i].length + 1;\n            }\n            return {\n                lineIndex: i - 1,\n                charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n            };\n        },\n        getSelectionStyles: function(startIndex, endIndex, complete) {\n            if (typeof startIndex === \"undefined\") {\n                startIndex = this.selectionStart || 0;\n            }\n            if (typeof endIndex === \"undefined\") {\n                endIndex = this.selectionEnd || startIndex;\n            }\n            var styles = [];\n            for (var i = startIndex; i < endIndex; i++) {\n                styles.push(this.getStyleAtPosition(i, complete));\n            }\n            return styles;\n        },\n        getStyleAtPosition: function(position, complete) {\n            var loc = this.get2DCursorLocation(position), style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) : this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n            return style || {};\n        },\n        setSelectionStyles: function(styles, startIndex, endIndex) {\n            if (typeof startIndex === \"undefined\") {\n                startIndex = this.selectionStart || 0;\n            }\n            if (typeof endIndex === \"undefined\") {\n                endIndex = this.selectionEnd || startIndex;\n            }\n            for (var i = startIndex; i < endIndex; i++) {\n                this._extendStyles(i, styles);\n            }\n            this._forceClearCache = true;\n            return this;\n        },\n        _getStyleDeclaration: function(lineIndex, charIndex) {\n            var lineStyle = this.styles && this.styles[lineIndex];\n            if (!lineStyle) {\n                return null;\n            }\n            return lineStyle[charIndex];\n        },\n        getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n            var style = this._getStyleDeclaration(lineIndex, charIndex) || {}, styleObject = {}, prop;\n            for (var i = 0; i < this._styleProperties.length; i++) {\n                prop = this._styleProperties[i];\n                styleObject[prop] = typeof style[prop] === \"undefined\" ? this[prop] : style[prop];\n            }\n            return styleObject;\n        },\n        _setStyleDeclaration: function(lineIndex, charIndex, style) {\n            this.styles[lineIndex][charIndex] = style;\n        },\n        _deleteStyleDeclaration: function(lineIndex, charIndex) {\n            delete this.styles[lineIndex][charIndex];\n        },\n        _getLineStyle: function(lineIndex) {\n            return this.styles[lineIndex];\n        },\n        _setLineStyle: function(lineIndex, style) {\n            this.styles[lineIndex] = style;\n        },\n        _deleteLineStyle: function(lineIndex) {\n            delete this.styles[lineIndex];\n        }\n    });\n})();\n\n(function() {\n    function parseDecoration(object) {\n        if (object.textDecoration) {\n            object.textDecoration.indexOf(\"underline\") > -1 && (object.underline = true);\n            object.textDecoration.indexOf(\"line-through\") > -1 && (object.linethrough = true);\n            object.textDecoration.indexOf(\"overline\") > -1 && (object.overline = true);\n            delete object.textDecoration;\n        }\n    }\n    fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, {\n        type: \"i-text\",\n        selectionStart: 0,\n        selectionEnd: 0,\n        selectionColor: \"rgba(17,119,255,0.3)\",\n        isEditing: false,\n        editable: true,\n        editingBorderColor: \"rgba(102,153,255,0.25)\",\n        cursorWidth: 2,\n        cursorColor: \"#333\",\n        cursorDelay: 1e3,\n        cursorDuration: 600,\n        caching: true,\n        _reSpace: /\\s|\\n/,\n        _currentCursorOpacity: 0,\n        _selectionDirection: null,\n        _abortCursorAnimation: false,\n        __widthOfSpace: [],\n        inCompositionMode: false,\n        initialize: function(text, options) {\n            this.callSuper(\"initialize\", text, options);\n            this.initBehavior();\n        },\n        setSelectionStart: function(index) {\n            index = Math.max(index, 0);\n            this._updateAndFire(\"selectionStart\", index);\n        },\n        setSelectionEnd: function(index) {\n            index = Math.min(index, this.text.length);\n            this._updateAndFire(\"selectionEnd\", index);\n        },\n        _updateAndFire: function(property, index) {\n            if (this[property] !== index) {\n                this._fireSelectionChanged();\n                this[property] = index;\n            }\n            this._updateTextarea();\n        },\n        _fireSelectionChanged: function() {\n            this.fire(\"selection:changed\");\n            this.canvas && this.canvas.fire(\"text:selection:changed\", {\n                target: this\n            });\n        },\n        initDimensions: function() {\n            this.isEditing && this.initDelayedCursor();\n            this.clearContextTop();\n            this.callSuper(\"initDimensions\");\n        },\n        render: function(ctx) {\n            this.clearContextTop();\n            this.callSuper(\"render\", ctx);\n            this.cursorOffsetCache = {};\n            this.renderCursorOrSelection();\n        },\n        _render: function(ctx) {\n            this.callSuper(\"_render\", ctx);\n        },\n        clearContextTop: function(skipRestore) {\n            if (!this.isEditing) {\n                return;\n            }\n            if (this.canvas && this.canvas.contextTop) {\n                var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n                ctx.save();\n                ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n                this.transform(ctx);\n                this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n                this._clearTextArea(ctx);\n                skipRestore || ctx.restore();\n            }\n        },\n        renderCursorOrSelection: function() {\n            if (!this.isEditing || !this.canvas) {\n                return;\n            }\n            var boundaries = this._getCursorBoundaries(), ctx;\n            if (this.canvas && this.canvas.contextTop) {\n                ctx = this.canvas.contextTop;\n                this.clearContextTop(true);\n            } else {\n                ctx = this.canvas.contextContainer;\n                ctx.save();\n            }\n            if (this.selectionStart === this.selectionEnd) {\n                this.renderCursor(boundaries, ctx);\n            } else {\n                this.renderSelection(boundaries, ctx);\n            }\n            ctx.restore();\n        },\n        _clearTextArea: function(ctx) {\n            var width = this.width + 4, height = this.height + 4;\n            ctx.clearRect(-width / 2, -height / 2, width, height);\n        },\n        _getCursorBoundaries: function(position) {\n            if (typeof position === \"undefined\") {\n                position = this.selectionStart;\n            }\n            var left = this._getLeftOffset(), top = this._getTopOffset(), offsets = this._getCursorBoundariesOffsets(position);\n            return {\n                left: left,\n                top: top,\n                leftOffset: offsets.left,\n                topOffset: offsets.top\n            };\n        },\n        _getCursorBoundariesOffsets: function(position) {\n            if (this.cursorOffsetCache && \"top\" in this.cursorOffsetCache) {\n                return this.cursorOffsetCache;\n            }\n            var lineLeftOffset, lineIndex = 0, charIndex = 0, topOffset = 0, leftOffset = 0, boundaries, cursorPosition = this.get2DCursorLocation(position);\n            for (var i = 0; i < cursorPosition.lineIndex; i++) {\n                topOffset += this.getHeightOfLine(i);\n            }\n            lineLeftOffset = this._getLineLeftOffset(cursorPosition.lineIndex);\n            var bound = this.__charBounds[cursorPosition.lineIndex][cursorPosition.charIndex];\n            bound && (leftOffset = bound.left);\n            if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n                leftOffset -= this._getWidthOfCharSpacing();\n            }\n            boundaries = {\n                top: topOffset,\n                left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0)\n            };\n            this.cursorOffsetCache = boundaries;\n            return this.cursorOffsetCache;\n        },\n        renderCursor: function(boundaries, ctx) {\n            var cursorLocation = this.get2DCursorLocation(), lineIndex = cursorLocation.lineIndex, charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0, charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, \"fontSize\"), multiplier = this.scaleX * this.canvas.getZoom(), cursorWidth = this.cursorWidth / multiplier, topOffset = boundaries.topOffset, dy = this.getValueOfPropertyAt(lineIndex, charIndex, \"deltaY\");\n            topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight - charHeight * (1 - this._fontSizeFraction);\n            if (this.inCompositionMode) {\n                this.renderSelection(boundaries, ctx);\n            }\n            ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, \"fill\");\n            ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n            ctx.fillRect(boundaries.left + boundaries.leftOffset - cursorWidth / 2, topOffset + boundaries.top + dy, cursorWidth, charHeight);\n        },\n        renderSelection: function(boundaries, ctx) {\n            var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart, selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd, isJustify = this.textAlign.indexOf(\"justify\") !== -1, start = this.get2DCursorLocation(selectionStart), end = this.get2DCursorLocation(selectionEnd), startLine = start.lineIndex, endLine = end.lineIndex, startChar = start.charIndex < 0 ? 0 : start.charIndex, endChar = end.charIndex < 0 ? 0 : end.charIndex;\n            for (var i = startLine; i <= endLine; i++) {\n                var lineOffset = this._getLineLeftOffset(i) || 0, lineHeight = this.getHeightOfLine(i), realLineHeight = 0, boxStart = 0, boxEnd = 0;\n                if (i === startLine) {\n                    boxStart = this.__charBounds[startLine][startChar].left;\n                }\n                if (i >= startLine && i < endLine) {\n                    boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5;\n                } else if (i === endLine) {\n                    if (endChar === 0) {\n                        boxEnd = this.__charBounds[endLine][endChar].left;\n                    } else {\n                        boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width;\n                    }\n                }\n                realLineHeight = lineHeight;\n                if (this.lineHeight < 1 || i === endLine && this.lineHeight > 1) {\n                    lineHeight /= this.lineHeight;\n                }\n                if (this.inCompositionMode) {\n                    ctx.fillStyle = this.compositionColor || \"black\";\n                    ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset + lineHeight, boxEnd - boxStart, 1);\n                } else {\n                    ctx.fillStyle = this.selectionColor;\n                    ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset, boxEnd - boxStart, lineHeight);\n                }\n                boundaries.topOffset += realLineHeight;\n            }\n        },\n        getCurrentCharFontSize: function() {\n            var cp = this._getCurrentCharIndex();\n            return this.getValueOfPropertyAt(cp.l, cp.c, \"fontSize\");\n        },\n        getCurrentCharColor: function() {\n            var cp = this._getCurrentCharIndex();\n            return this.getValueOfPropertyAt(cp.l, cp.c, \"fill\");\n        },\n        _getCurrentCharIndex: function() {\n            var cursorPosition = this.get2DCursorLocation(this.selectionStart, true), charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n            return {\n                l: cursorPosition.lineIndex,\n                c: charIndex\n            };\n        }\n    });\n    fabric.IText.fromObject = function(object, callback) {\n        parseDecoration(object);\n        if (object.styles) {\n            for (var i in object.styles) {\n                for (var j in object.styles[i]) {\n                    parseDecoration(object.styles[i][j]);\n                }\n            }\n        }\n        fabric.Object._fromObject(\"IText\", object, callback, \"text\");\n    };\n})();\n\n(function() {\n    var clone = fabric.util.object.clone;\n    fabric.util.object.extend(fabric.IText.prototype, {\n        initBehavior: function() {\n            this.initAddedHandler();\n            this.initRemovedHandler();\n            this.initCursorSelectionHandlers();\n            this.initDoubleClickSimulation();\n            this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n        },\n        onDeselect: function(options) {\n            this.isEditing && this.exitEditing();\n            this.selected = false;\n            fabric.Object.prototype.onDeselect.call(this, options);\n        },\n        initAddedHandler: function() {\n            var _this = this;\n            this.on(\"added\", function() {\n                var canvas = _this.canvas;\n                if (canvas) {\n                    if (!canvas._hasITextHandlers) {\n                        canvas._hasITextHandlers = true;\n                        _this._initCanvasHandlers(canvas);\n                    }\n                    canvas._iTextInstances = canvas._iTextInstances || [];\n                    canvas._iTextInstances.push(_this);\n                }\n            });\n        },\n        initRemovedHandler: function() {\n            var _this = this;\n            this.on(\"removed\", function() {\n                var canvas = _this.canvas;\n                if (canvas) {\n                    canvas._iTextInstances = canvas._iTextInstances || [];\n                    fabric.util.removeFromArray(canvas._iTextInstances, _this);\n                    if (canvas._iTextInstances.length === 0) {\n                        canvas._hasITextHandlers = false;\n                        _this._removeCanvasHandlers(canvas);\n                    }\n                }\n            });\n        },\n        _initCanvasHandlers: function(canvas) {\n            canvas._mouseUpITextHandler = function() {\n                if (canvas._iTextInstances) {\n                    canvas._iTextInstances.forEach(function(obj) {\n                        obj.__isMousedown = false;\n                    });\n                }\n            }.bind(this);\n            canvas.on(\"mouse:up\", canvas._mouseUpITextHandler);\n        },\n        _removeCanvasHandlers: function(canvas) {\n            canvas.off(\"mouse:up\", canvas._mouseUpITextHandler);\n        },\n        _tick: function() {\n            this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, \"_onTickComplete\");\n        },\n        _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n            var tickState;\n            tickState = {\n                isAborted: false,\n                abort: function() {\n                    this.isAborted = true;\n                }\n            };\n            obj.animate(\"_currentCursorOpacity\", targetOpacity, {\n                duration: duration,\n                onComplete: function() {\n                    if (!tickState.isAborted) {\n                        obj[completeMethod]();\n                    }\n                },\n                onChange: function() {\n                    if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n                        obj.renderCursorOrSelection();\n                    }\n                },\n                abort: function() {\n                    return tickState.isAborted;\n                }\n            });\n            return tickState;\n        },\n        _onTickComplete: function() {\n            var _this = this;\n            if (this._cursorTimeout1) {\n                clearTimeout(this._cursorTimeout1);\n            }\n            this._cursorTimeout1 = setTimeout(function() {\n                _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, \"_tick\");\n            }, 100);\n        },\n        initDelayedCursor: function(restart) {\n            var _this = this, delay = restart ? 0 : this.cursorDelay;\n            this.abortCursorAnimation();\n            this._currentCursorOpacity = 1;\n            this._cursorTimeout2 = setTimeout(function() {\n                _this._tick();\n            }, delay);\n        },\n        abortCursorAnimation: function() {\n            var shouldClear = this._currentTickState || this._currentTickCompleteState, canvas = this.canvas;\n            this._currentTickState && this._currentTickState.abort();\n            this._currentTickCompleteState && this._currentTickCompleteState.abort();\n            clearTimeout(this._cursorTimeout1);\n            clearTimeout(this._cursorTimeout2);\n            this._currentCursorOpacity = 0;\n            if (shouldClear && canvas) {\n                canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n            }\n        },\n        selectAll: function() {\n            this.selectionStart = 0;\n            this.selectionEnd = this._text.length;\n            this._fireSelectionChanged();\n            this._updateTextarea();\n            return this;\n        },\n        getSelectedText: function() {\n            return this._text.slice(this.selectionStart, this.selectionEnd).join(\"\");\n        },\n        findWordBoundaryLeft: function(startFrom) {\n            var offset = 0, index = startFrom - 1;\n            if (this._reSpace.test(this._text[index])) {\n                while (this._reSpace.test(this._text[index])) {\n                    offset++;\n                    index--;\n                }\n            }\n            while (/\\S/.test(this._text[index]) && index > -1) {\n                offset++;\n                index--;\n            }\n            return startFrom - offset;\n        },\n        findWordBoundaryRight: function(startFrom) {\n            var offset = 0, index = startFrom;\n            if (this._reSpace.test(this._text[index])) {\n                while (this._reSpace.test(this._text[index])) {\n                    offset++;\n                    index++;\n                }\n            }\n            while (/\\S/.test(this._text[index]) && index < this.text.length) {\n                offset++;\n                index++;\n            }\n            return startFrom + offset;\n        },\n        findLineBoundaryLeft: function(startFrom) {\n            var offset = 0, index = startFrom - 1;\n            while (!/\\n/.test(this._text[index]) && index > -1) {\n                offset++;\n                index--;\n            }\n            return startFrom - offset;\n        },\n        findLineBoundaryRight: function(startFrom) {\n            var offset = 0, index = startFrom;\n            while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n                offset++;\n                index++;\n            }\n            return startFrom + offset;\n        },\n        searchWordBoundary: function(selectionStart, direction) {\n            var index = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart, _char = this.text.charAt(index), reNonWord = /[ \\n\\.,;!\\?\\-]/;\n            while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n                index += direction;\n                _char = this.text.charAt(index);\n            }\n            if (reNonWord.test(_char) && _char !== \"\\n\") {\n                index += direction === 1 ? 0 : 1;\n            }\n            return index;\n        },\n        selectWord: function(selectionStart) {\n            selectionStart = selectionStart || this.selectionStart;\n            var newSelectionStart = this.searchWordBoundary(selectionStart, -1), newSelectionEnd = this.searchWordBoundary(selectionStart, 1);\n            this.selectionStart = newSelectionStart;\n            this.selectionEnd = newSelectionEnd;\n            this._fireSelectionChanged();\n            this._updateTextarea();\n            this.renderCursorOrSelection();\n        },\n        selectLine: function(selectionStart) {\n            selectionStart = selectionStart || this.selectionStart;\n            var newSelectionStart = this.findLineBoundaryLeft(selectionStart), newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n            this.selectionStart = newSelectionStart;\n            this.selectionEnd = newSelectionEnd;\n            this._fireSelectionChanged();\n            this._updateTextarea();\n            return this;\n        },\n        enterEditing: function(e) {\n            if (this.isEditing || !this.editable) {\n                return;\n            }\n            if (this.canvas) {\n                this.canvas.calcOffset();\n                this.exitEditingOnOthers(this.canvas);\n            }\n            this.isEditing = true;\n            this.initHiddenTextarea(e);\n            this.hiddenTextarea.focus();\n            this.hiddenTextarea.value = this.text;\n            this._updateTextarea();\n            this._saveEditingProps();\n            this._setEditingProps();\n            this._textBeforeEdit = this.text;\n            this._tick();\n            this.fire(\"editing:entered\");\n            this._fireSelectionChanged();\n            if (!this.canvas) {\n                return this;\n            }\n            this.canvas.fire(\"text:editing:entered\", {\n                target: this\n            });\n            this.initMouseMoveHandler();\n            this.canvas.requestRenderAll();\n            return this;\n        },\n        exitEditingOnOthers: function(canvas) {\n            if (canvas._iTextInstances) {\n                canvas._iTextInstances.forEach(function(obj) {\n                    obj.selected = false;\n                    if (obj.isEditing) {\n                        obj.exitEditing();\n                    }\n                });\n            }\n        },\n        initMouseMoveHandler: function() {\n            this.canvas.on(\"mouse:move\", this.mouseMoveHandler);\n        },\n        mouseMoveHandler: function(options) {\n            if (!this.__isMousedown || !this.isEditing) {\n                return;\n            }\n            var newSelectionStart = this.getSelectionStartFromPointer(options.e), currentStart = this.selectionStart, currentEnd = this.selectionEnd;\n            if ((newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd) && (currentStart === newSelectionStart || currentEnd === newSelectionStart)) {\n                return;\n            }\n            if (newSelectionStart > this.__selectionStartOnMouseDown) {\n                this.selectionStart = this.__selectionStartOnMouseDown;\n                this.selectionEnd = newSelectionStart;\n            } else {\n                this.selectionStart = newSelectionStart;\n                this.selectionEnd = this.__selectionStartOnMouseDown;\n            }\n            if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n                this.restartCursorIfNeeded();\n                this._fireSelectionChanged();\n                this._updateTextarea();\n                this.renderCursorOrSelection();\n            }\n        },\n        _setEditingProps: function() {\n            this.hoverCursor = \"text\";\n            if (this.canvas) {\n                this.canvas.defaultCursor = this.canvas.moveCursor = \"text\";\n            }\n            this.borderColor = this.editingBorderColor;\n            this.hasControls = this.selectable = false;\n            this.lockMovementX = this.lockMovementY = true;\n        },\n        fromStringToGraphemeSelection: function(start, end, text) {\n            var smallerTextStart = text.slice(0, start), graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n            if (start === end) {\n                return {\n                    selectionStart: graphemeStart,\n                    selectionEnd: graphemeStart\n                };\n            }\n            var smallerTextEnd = text.slice(start, end), graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n            return {\n                selectionStart: graphemeStart,\n                selectionEnd: graphemeStart + graphemeEnd\n            };\n        },\n        fromGraphemeToStringSelection: function(start, end, _text) {\n            var smallerTextStart = _text.slice(0, start), graphemeStart = smallerTextStart.join(\"\").length;\n            if (start === end) {\n                return {\n                    selectionStart: graphemeStart,\n                    selectionEnd: graphemeStart\n                };\n            }\n            var smallerTextEnd = _text.slice(start, end), graphemeEnd = smallerTextEnd.join(\"\").length;\n            return {\n                selectionStart: graphemeStart,\n                selectionEnd: graphemeStart + graphemeEnd\n            };\n        },\n        _updateTextarea: function() {\n            this.cursorOffsetCache = {};\n            if (!this.hiddenTextarea) {\n                return;\n            }\n            if (!this.inCompositionMode) {\n                var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n                this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n                this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n            }\n            this.updateTextareaPosition();\n        },\n        updateFromTextArea: function() {\n            if (!this.hiddenTextarea) {\n                return;\n            }\n            this.cursorOffsetCache = {};\n            this.text = this.hiddenTextarea.value;\n            if (this._shouldClearDimensionCache()) {\n                this.initDimensions();\n                this.setCoords();\n            }\n            var newSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n            this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n            if (!this.inCompositionMode) {\n                this.selectionStart = newSelection.selectionStart;\n            }\n            this.updateTextareaPosition();\n        },\n        updateTextareaPosition: function() {\n            if (this.selectionStart === this.selectionEnd) {\n                var style = this._calcTextareaPosition();\n                this.hiddenTextarea.style.left = style.left;\n                this.hiddenTextarea.style.top = style.top;\n            }\n        },\n        _calcTextareaPosition: function() {\n            if (!this.canvas) {\n                return {\n                    x: 1,\n                    y: 1\n                };\n            }\n            var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart, boundaries = this._getCursorBoundaries(desiredPostion), cursorLocation = this.get2DCursorLocation(desiredPostion), lineIndex = cursorLocation.lineIndex, charIndex = cursorLocation.charIndex, charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, \"fontSize\") * this.lineHeight, leftOffset = boundaries.leftOffset, m = this.calcTransformMatrix(), p = {\n                x: boundaries.left + leftOffset,\n                y: boundaries.top + boundaries.topOffset + charHeight\n            }, upperCanvas = this.canvas.upperCanvasEl, upperCanvasWidth = upperCanvas.width, upperCanvasHeight = upperCanvas.height, maxWidth = upperCanvasWidth - charHeight, maxHeight = upperCanvasHeight - charHeight, scaleX = upperCanvas.clientWidth / upperCanvasWidth, scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n            p = fabric.util.transformPoint(p, m);\n            p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n            p.x *= scaleX;\n            p.y *= scaleY;\n            if (p.x < 0) {\n                p.x = 0;\n            }\n            if (p.x > maxWidth) {\n                p.x = maxWidth;\n            }\n            if (p.y < 0) {\n                p.y = 0;\n            }\n            if (p.y > maxHeight) {\n                p.y = maxHeight;\n            }\n            p.x += this.canvas._offset.left;\n            p.y += this.canvas._offset.top;\n            return {\n                left: p.x + \"px\",\n                top: p.y + \"px\",\n                fontSize: charHeight + \"px\",\n                charHeight: charHeight\n            };\n        },\n        _saveEditingProps: function() {\n            this._savedProps = {\n                hasControls: this.hasControls,\n                borderColor: this.borderColor,\n                lockMovementX: this.lockMovementX,\n                lockMovementY: this.lockMovementY,\n                hoverCursor: this.hoverCursor,\n                defaultCursor: this.canvas && this.canvas.defaultCursor,\n                moveCursor: this.canvas && this.canvas.moveCursor\n            };\n        },\n        _restoreEditingProps: function() {\n            if (!this._savedProps) {\n                return;\n            }\n            this.hoverCursor = this._savedProps.hoverCursor;\n            this.hasControls = this._savedProps.hasControls;\n            this.borderColor = this._savedProps.borderColor;\n            this.lockMovementX = this._savedProps.lockMovementX;\n            this.lockMovementY = this._savedProps.lockMovementY;\n            if (this.canvas) {\n                this.canvas.defaultCursor = this._savedProps.defaultCursor;\n                this.canvas.moveCursor = this._savedProps.moveCursor;\n            }\n        },\n        exitEditing: function() {\n            var isTextChanged = this._textBeforeEdit !== this.text;\n            this.selected = false;\n            this.isEditing = false;\n            this.selectable = true;\n            this.selectionEnd = this.selectionStart;\n            if (this.hiddenTextarea) {\n                this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n                this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n                this.hiddenTextarea = null;\n            }\n            this.abortCursorAnimation();\n            this._restoreEditingProps();\n            this._currentCursorOpacity = 0;\n            if (this._shouldClearDimensionCache()) {\n                this.initDimensions();\n                this.setCoords();\n            }\n            this.fire(\"editing:exited\");\n            isTextChanged && this.fire(\"modified\");\n            if (this.canvas) {\n                this.canvas.off(\"mouse:move\", this.mouseMoveHandler);\n                this.canvas.fire(\"text:editing:exited\", {\n                    target: this\n                });\n                isTextChanged && this.canvas.fire(\"object:modified\", {\n                    target: this\n                });\n            }\n            return this;\n        },\n        _removeExtraneousStyles: function() {\n            for (var prop in this.styles) {\n                if (!this._textLines[prop]) {\n                    delete this.styles[prop];\n                }\n            }\n        },\n        removeStyleFromTo: function(start, end) {\n            var cursorStart = this.get2DCursorLocation(start, true), cursorEnd = this.get2DCursorLocation(end, true), lineStart = cursorStart.lineIndex, charStart = cursorStart.charIndex, lineEnd = cursorEnd.lineIndex, charEnd = cursorEnd.charIndex, i, styleObj;\n            if (lineStart !== lineEnd) {\n                if (this.styles[lineStart]) {\n                    for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n                        delete this.styles[lineStart][i];\n                    }\n                }\n                if (this.styles[lineEnd]) {\n                    for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n                        styleObj = this.styles[lineEnd][i];\n                        if (styleObj) {\n                            this.styles[lineStart] || (this.styles[lineStart] = {});\n                            this.styles[lineStart][charStart + i - charEnd] = styleObj;\n                        }\n                    }\n                }\n                for (i = lineStart + 1; i <= lineEnd; i++) {\n                    delete this.styles[i];\n                }\n                this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n            } else {\n                if (this.styles[lineStart]) {\n                    styleObj = this.styles[lineStart];\n                    var diff = charEnd - charStart, numericChar, _char;\n                    for (i = charStart; i < charEnd; i++) {\n                        delete styleObj[i];\n                    }\n                    for (_char in this.styles[lineStart]) {\n                        numericChar = parseInt(_char, 10);\n                        if (numericChar >= charEnd) {\n                            styleObj[numericChar - diff] = styleObj[_char];\n                            delete styleObj[_char];\n                        }\n                    }\n                }\n            }\n        },\n        shiftLineStyles: function(lineIndex, offset) {\n            var clonedStyles = clone(this.styles);\n            for (var line in this.styles) {\n                var numericLine = parseInt(line, 10);\n                if (numericLine > lineIndex) {\n                    this.styles[numericLine + offset] = clonedStyles[numericLine];\n                    if (!clonedStyles[numericLine - offset]) {\n                        delete this.styles[numericLine];\n                    }\n                }\n            }\n        },\n        restartCursorIfNeeded: function() {\n            if (!this._currentTickState || this._currentTickState.isAborted || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted) {\n                this.initDelayedCursor();\n            }\n        },\n        insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n            var currentCharStyle, newLineStyles = {}, somethingAdded = false;\n            qty || (qty = 1);\n            this.shiftLineStyles(lineIndex, qty);\n            if (this.styles[lineIndex]) {\n                currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n            }\n            for (var index in this.styles[lineIndex]) {\n                var numIndex = parseInt(index, 10);\n                if (numIndex >= charIndex) {\n                    somethingAdded = true;\n                    newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n                    delete this.styles[lineIndex][index];\n                }\n            }\n            if (somethingAdded) {\n                this.styles[lineIndex + qty] = newLineStyles;\n            } else {\n                delete this.styles[lineIndex + qty];\n            }\n            while (qty > 1) {\n                qty--;\n                if (copiedStyle && copiedStyle[qty]) {\n                    this.styles[lineIndex + qty] = {\n                        0: clone(copiedStyle[qty])\n                    };\n                } else if (currentCharStyle) {\n                    this.styles[lineIndex + qty] = {\n                        0: clone(currentCharStyle)\n                    };\n                } else {\n                    delete this.styles[lineIndex + qty];\n                }\n            }\n            this._forceClearCache = true;\n        },\n        insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n            if (!this.styles) {\n                this.styles = {};\n            }\n            var currentLineStyles = this.styles[lineIndex], currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n            quantity || (quantity = 1);\n            for (var index in currentLineStylesCloned) {\n                var numericIndex = parseInt(index, 10);\n                if (numericIndex >= charIndex) {\n                    currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n                    if (!currentLineStylesCloned[numericIndex - quantity]) {\n                        delete currentLineStyles[numericIndex];\n                    }\n                }\n            }\n            this._forceClearCache = true;\n            if (copiedStyle) {\n                while (quantity--) {\n                    if (!Object.keys(copiedStyle[quantity]).length) {\n                        continue;\n                    }\n                    if (!this.styles[lineIndex]) {\n                        this.styles[lineIndex] = {};\n                    }\n                    this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n                }\n                return;\n            }\n            if (!currentLineStyles) {\n                return;\n            }\n            var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n            while (newStyle && quantity--) {\n                this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n            }\n        },\n        insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n            var cursorLoc = this.get2DCursorLocation(start, true), addedLines = [ 0 ], linesLenght = 0;\n            for (var i = 0; i < insertedText.length; i++) {\n                if (insertedText[i] === \"\\n\") {\n                    linesLenght++;\n                    addedLines[linesLenght] = 0;\n                } else {\n                    addedLines[linesLenght]++;\n                }\n            }\n            if (addedLines[0] > 0) {\n                this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n                copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n            }\n            linesLenght && this.insertNewlineStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n            for (var i = 1; i < linesLenght; i++) {\n                if (addedLines[i] > 0) {\n                    this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n                } else if (copiedStyle) {\n                    this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n                }\n                copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n            }\n            if (addedLines[i] > 0) {\n                this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n            }\n        },\n        setSelectionStartEndWithShift: function(start, end, newSelection) {\n            if (newSelection <= start) {\n                if (end === start) {\n                    this._selectionDirection = \"left\";\n                } else if (this._selectionDirection === \"right\") {\n                    this._selectionDirection = \"left\";\n                    this.selectionEnd = start;\n                }\n                this.selectionStart = newSelection;\n            } else if (newSelection > start && newSelection < end) {\n                if (this._selectionDirection === \"right\") {\n                    this.selectionEnd = newSelection;\n                } else {\n                    this.selectionStart = newSelection;\n                }\n            } else {\n                if (end === start) {\n                    this._selectionDirection = \"right\";\n                } else if (this._selectionDirection === \"left\") {\n                    this._selectionDirection = \"right\";\n                    this.selectionStart = end;\n                }\n                this.selectionEnd = newSelection;\n            }\n        },\n        setSelectionInBoundaries: function() {\n            var length = this.text.length;\n            if (this.selectionStart > length) {\n                this.selectionStart = length;\n            } else if (this.selectionStart < 0) {\n                this.selectionStart = 0;\n            }\n            if (this.selectionEnd > length) {\n                this.selectionEnd = length;\n            } else if (this.selectionEnd < 0) {\n                this.selectionEnd = 0;\n            }\n        }\n    });\n})();\n\nfabric.util.object.extend(fabric.IText.prototype, {\n    initDoubleClickSimulation: function() {\n        this.__lastClickTime = +new Date();\n        this.__lastLastClickTime = +new Date();\n        this.__lastPointer = {};\n        this.on(\"mousedown\", this.onMouseDown.bind(this));\n    },\n    onMouseDown: function(options) {\n        if (!this.canvas) {\n            return;\n        }\n        this.__newClickTime = +new Date();\n        var newPointer = this.canvas.getPointer(options.e);\n        if (this.isTripleClick(newPointer)) {\n            this.fire(\"tripleclick\", options);\n            this._stopEvent(options.e);\n        }\n        this.__lastLastClickTime = this.__lastClickTime;\n        this.__lastClickTime = this.__newClickTime;\n        this.__lastPointer = newPointer;\n        this.__lastIsEditing = this.isEditing;\n        this.__lastSelected = this.selected;\n    },\n    isTripleClick: function(newPointer) {\n        return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === newPointer.x && this.__lastPointer.y === newPointer.y;\n    },\n    _stopEvent: function(e) {\n        e.preventDefault && e.preventDefault();\n        e.stopPropagation && e.stopPropagation();\n    },\n    initCursorSelectionHandlers: function() {\n        this.initMousedownHandler();\n        this.initMouseupHandler();\n        this.initClicks();\n    },\n    initClicks: function() {\n        this.on(\"mousedblclick\", function(options) {\n            this.selectWord(this.getSelectionStartFromPointer(options.e));\n        });\n        this.on(\"tripleclick\", function(options) {\n            this.selectLine(this.getSelectionStartFromPointer(options.e));\n        });\n    },\n    _mouseDownHandler: function(options) {\n        if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n            return;\n        }\n        var pointer = this.canvas.getPointer(options.e);\n        this.__mousedownX = pointer.x;\n        this.__mousedownY = pointer.y;\n        this.__isMousedown = true;\n        if (this.selected) {\n            this.setCursorByClick(options.e);\n        }\n        if (this.isEditing) {\n            this.__selectionStartOnMouseDown = this.selectionStart;\n            if (this.selectionStart === this.selectionEnd) {\n                this.abortCursorAnimation();\n            }\n            this.renderCursorOrSelection();\n        }\n    },\n    initMousedownHandler: function() {\n        this.on(\"mousedown\", this._mouseDownHandler);\n    },\n    _isObjectMoved: function(e) {\n        var pointer = this.canvas.getPointer(e);\n        return this.__mousedownX !== pointer.x || this.__mousedownY !== pointer.y;\n    },\n    initMouseupHandler: function() {\n        this.on(\"mouseup\", this.mouseUpHandler);\n    },\n    mouseUpHandler: function(options) {\n        this.__isMousedown = false;\n        if (!this.editable || this._isObjectMoved(options.e) || options.e.button && options.e.button !== 1) {\n            return;\n        }\n        if (this.__lastSelected && !this.__corner) {\n            this.enterEditing(options.e);\n            if (this.selectionStart === this.selectionEnd) {\n                this.initDelayedCursor(true);\n            } else {\n                this.renderCursorOrSelection();\n            }\n        }\n        this.selected = true;\n    },\n    setCursorByClick: function(e) {\n        var newSelection = this.getSelectionStartFromPointer(e), start = this.selectionStart, end = this.selectionEnd;\n        if (e.shiftKey) {\n            this.setSelectionStartEndWithShift(start, end, newSelection);\n        } else {\n            this.selectionStart = newSelection;\n            this.selectionEnd = newSelection;\n        }\n        if (this.isEditing) {\n            this._fireSelectionChanged();\n            this._updateTextarea();\n        }\n    },\n    getSelectionStartFromPointer: function(e) {\n        var mouseOffset = this.getLocalPointer(e), prevWidth = 0, width = 0, height = 0, charIndex = 0, lineIndex = 0, lineLeftOffset, line;\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\n            if (height <= mouseOffset.y) {\n                height += this.getHeightOfLine(i) * this.scaleY;\n                lineIndex = i;\n                if (i > 0) {\n                    charIndex += this._textLines[i - 1].length + 1;\n                }\n            } else {\n                break;\n            }\n        }\n        lineLeftOffset = this._getLineLeftOffset(lineIndex);\n        width = lineLeftOffset * this.scaleX;\n        line = this._textLines[lineIndex];\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n            prevWidth = width;\n            width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n            if (width <= mouseOffset.x) {\n                charIndex++;\n            } else {\n                break;\n            }\n        }\n        return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n    },\n    _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n        var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth, distanceBtwNextCharAndCursor = width - mouseOffset.x, offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor || distanceBtwNextCharAndCursor < 0 ? 0 : 1, newSelectionStart = index + offset;\n        if (this.flipX) {\n            newSelectionStart = jlen - newSelectionStart;\n        }\n        if (newSelectionStart > this._text.length) {\n            newSelectionStart = this._text.length;\n        }\n        return newSelectionStart;\n    }\n});\n\nfabric.util.object.extend(fabric.IText.prototype, {\n    initHiddenTextarea: function() {\n        this.hiddenTextarea = fabric.document.createElement(\"textarea\");\n        this.hiddenTextarea.setAttribute(\"autocapitalize\", \"off\");\n        this.hiddenTextarea.setAttribute(\"autocorrect\", \"off\");\n        this.hiddenTextarea.setAttribute(\"autocomplete\", \"off\");\n        this.hiddenTextarea.setAttribute(\"spellcheck\", \"false\");\n        this.hiddenTextarea.setAttribute(\"data-fabric-hiddentextarea\", \"\");\n        this.hiddenTextarea.setAttribute(\"wrap\", \"off\");\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.cssText = \"position: absolute; top: \" + style.top + \"; left: \" + style.left + \"; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;\" + \" line-height: 1px; paddingｰtop: \" + style.fontSize + \";\";\n        fabric.document.body.appendChild(this.hiddenTextarea);\n        fabric.util.addListener(this.hiddenTextarea, \"keydown\", this.onKeyDown.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"keyup\", this.onKeyUp.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"input\", this.onInput.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"copy\", this.copy.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"cut\", this.copy.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"paste\", this.paste.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"compositionstart\", this.onCompositionStart.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"compositionupdate\", this.onCompositionUpdate.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"compositionend\", this.onCompositionEnd.bind(this));\n        if (!this._clickHandlerInitialized && this.canvas) {\n            fabric.util.addListener(this.canvas.upperCanvasEl, \"click\", this.onClick.bind(this));\n            this._clickHandlerInitialized = true;\n        }\n    },\n    keysMap: {\n        9: \"exitEditing\",\n        27: \"exitEditing\",\n        33: \"moveCursorUp\",\n        34: \"moveCursorDown\",\n        35: \"moveCursorRight\",\n        36: \"moveCursorLeft\",\n        37: \"moveCursorLeft\",\n        38: \"moveCursorUp\",\n        39: \"moveCursorRight\",\n        40: \"moveCursorDown\"\n    },\n    ctrlKeysMapUp: {\n        67: \"copy\",\n        88: \"cut\"\n    },\n    ctrlKeysMapDown: {\n        65: \"selectAll\"\n    },\n    onClick: function() {\n        this.hiddenTextarea && this.hiddenTextarea.focus();\n    },\n    onKeyDown: function(e) {\n        if (!this.isEditing || this.inCompositionMode) {\n            return;\n        }\n        if (e.keyCode in this.keysMap) {\n            this[this.keysMap[e.keyCode]](e);\n        } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n            this[this.ctrlKeysMapDown[e.keyCode]](e);\n        } else {\n            return;\n        }\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        if (e.keyCode >= 33 && e.keyCode <= 40) {\n            this.clearContextTop();\n            this.renderCursorOrSelection();\n        } else {\n            this.canvas && this.canvas.requestRenderAll();\n        }\n    },\n    onKeyUp: function(e) {\n        if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n            this._copyDone = false;\n            return;\n        }\n        if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n            this[this.ctrlKeysMapUp[e.keyCode]](e);\n        } else {\n            return;\n        }\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.canvas && this.canvas.requestRenderAll();\n    },\n    onInput: function(e) {\n        var fromPaste = this.fromPaste;\n        this.fromPaste = false;\n        e && e.stopPropagation();\n        if (!this.isEditing) {\n            return;\n        }\n        var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText, charCount = this._text.length, nextCharCount = nextText.length, removedText, insertedText, charDiff = nextCharCount - charCount;\n        if (this.hiddenTextarea.value === \"\") {\n            this.styles = {};\n            this.updateFromTextArea();\n            this.fire(\"changed\");\n            if (this.canvas) {\n                this.canvas.fire(\"text:changed\", {\n                    target: this\n                });\n                this.canvas.requestRenderAll();\n            }\n            return;\n        }\n        var textareaSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n        var backDelete = this.selectionStart > textareaSelection.selectionStart;\n        if (this.selectionStart !== this.selectionEnd) {\n            removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n            charDiff += this.selectionEnd - this.selectionStart;\n        } else if (nextCharCount < charCount) {\n            if (backDelete) {\n                removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n            } else {\n                removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n            }\n        }\n        insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n        if (removedText && removedText.length) {\n            if (this.selectionStart !== this.selectionEnd) {\n                this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n            } else if (backDelete) {\n                this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n            } else {\n                this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n            }\n        }\n        if (insertedText.length) {\n            if (fromPaste && insertedText.join(\"\") === fabric.copiedText) {\n                this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n            } else {\n                this.insertNewStyleBlock(insertedText, this.selectionStart);\n            }\n        }\n        this.updateFromTextArea();\n        this.fire(\"changed\");\n        if (this.canvas) {\n            this.canvas.fire(\"text:changed\", {\n                target: this\n            });\n            this.canvas.requestRenderAll();\n        }\n    },\n    onCompositionStart: function() {\n        this.inCompositionMode = true;\n    },\n    onCompositionEnd: function() {\n        this.inCompositionMode = false;\n    },\n    onCompositionUpdate: function(e) {\n        this.compositionStart = e.target.selectionStart;\n        this.compositionEnd = e.target.selectionEnd;\n        this.updateTextareaPosition();\n    },\n    copy: function() {\n        if (this.selectionStart === this.selectionEnd) {\n            return;\n        }\n        fabric.copiedText = this.getSelectedText();\n        fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n        this._copyDone = true;\n    },\n    paste: function() {\n        this.fromPaste = true;\n    },\n    _getClipboardData: function(e) {\n        return e && e.clipboardData || fabric.window.clipboardData;\n    },\n    _getWidthBeforeCursor: function(lineIndex, charIndex) {\n        var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n        if (charIndex > 0) {\n            bound = this.__charBounds[lineIndex][charIndex - 1];\n            widthBeforeCursor += bound.left + bound.width;\n        }\n        return widthBeforeCursor;\n    },\n    getDownCursorOffset: function(e, isRight) {\n        var selectionProp = this._getSelectionForOffset(e, isRight), cursorLocation = this.get2DCursorLocation(selectionProp), lineIndex = cursorLocation.lineIndex;\n        if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n            return this._text.length - selectionProp;\n        }\n        var charIndex = cursorLocation.charIndex, widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex), indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor), textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n        return textAfterCursor.length + indexOnOtherLine + 2;\n    },\n    _getSelectionForOffset: function(e, isRight) {\n        if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n            return this.selectionEnd;\n        } else {\n            return this.selectionStart;\n        }\n    },\n    getUpCursorOffset: function(e, isRight) {\n        var selectionProp = this._getSelectionForOffset(e, isRight), cursorLocation = this.get2DCursorLocation(selectionProp), lineIndex = cursorLocation.lineIndex;\n        if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n            return -selectionProp;\n        }\n        var charIndex = cursorLocation.charIndex, widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex), indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor), textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n        return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n    },\n    _getIndexOnLine: function(lineIndex, width) {\n        var line = this._textLines[lineIndex], lineLeftOffset = this._getLineLeftOffset(lineIndex), widthOfCharsOnLine = lineLeftOffset, indexOnLine = 0, charWidth, foundMatch;\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n            charWidth = this.__charBounds[lineIndex][j].width;\n            widthOfCharsOnLine += charWidth;\n            if (widthOfCharsOnLine > width) {\n                foundMatch = true;\n                var leftEdge = widthOfCharsOnLine - charWidth, rightEdge = widthOfCharsOnLine, offsetFromLeftEdge = Math.abs(leftEdge - width), offsetFromRightEdge = Math.abs(rightEdge - width);\n                indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n                break;\n            }\n        }\n        if (!foundMatch) {\n            indexOnLine = line.length - 1;\n        }\n        return indexOnLine;\n    },\n    moveCursorDown: function(e) {\n        if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n            return;\n        }\n        this._moveCursorUpOrDown(\"Down\", e);\n    },\n    moveCursorUp: function(e) {\n        if (this.selectionStart === 0 && this.selectionEnd === 0) {\n            return;\n        }\n        this._moveCursorUpOrDown(\"Up\", e);\n    },\n    _moveCursorUpOrDown: function(direction, e) {\n        var action = \"get\" + direction + \"CursorOffset\", offset = this[action](e, this._selectionDirection === \"right\");\n        if (e.shiftKey) {\n            this.moveCursorWithShift(offset);\n        } else {\n            this.moveCursorWithoutShift(offset);\n        }\n        if (offset !== 0) {\n            this.setSelectionInBoundaries();\n            this.abortCursorAnimation();\n            this._currentCursorOpacity = 1;\n            this.initDelayedCursor();\n            this._fireSelectionChanged();\n            this._updateTextarea();\n        }\n    },\n    moveCursorWithShift: function(offset) {\n        var newSelection = this._selectionDirection === \"left\" ? this.selectionStart + offset : this.selectionEnd + offset;\n        this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n        return offset !== 0;\n    },\n    moveCursorWithoutShift: function(offset) {\n        if (offset < 0) {\n            this.selectionStart += offset;\n            this.selectionEnd = this.selectionStart;\n        } else {\n            this.selectionEnd += offset;\n            this.selectionStart = this.selectionEnd;\n        }\n        return offset !== 0;\n    },\n    moveCursorLeft: function(e) {\n        if (this.selectionStart === 0 && this.selectionEnd === 0) {\n            return;\n        }\n        this._moveCursorLeftOrRight(\"Left\", e);\n    },\n    _move: function(e, prop, direction) {\n        var newValue;\n        if (e.altKey) {\n            newValue = this[\"findWordBoundary\" + direction](this[prop]);\n        } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n            newValue = this[\"findLineBoundary\" + direction](this[prop]);\n        } else {\n            this[prop] += direction === \"Left\" ? -1 : 1;\n            return true;\n        }\n        if (typeof newValue !== undefined && this[prop] !== newValue) {\n            this[prop] = newValue;\n            return true;\n        }\n    },\n    _moveLeft: function(e, prop) {\n        return this._move(e, prop, \"Left\");\n    },\n    _moveRight: function(e, prop) {\n        return this._move(e, prop, \"Right\");\n    },\n    moveCursorLeftWithoutShift: function(e) {\n        var change = true;\n        this._selectionDirection = \"left\";\n        if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n            change = this._moveLeft(e, \"selectionStart\");\n        }\n        this.selectionEnd = this.selectionStart;\n        return change;\n    },\n    moveCursorLeftWithShift: function(e) {\n        if (this._selectionDirection === \"right\" && this.selectionStart !== this.selectionEnd) {\n            return this._moveLeft(e, \"selectionEnd\");\n        } else if (this.selectionStart !== 0) {\n            this._selectionDirection = \"left\";\n            return this._moveLeft(e, \"selectionStart\");\n        }\n    },\n    moveCursorRight: function(e) {\n        if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n            return;\n        }\n        this._moveCursorLeftOrRight(\"Right\", e);\n    },\n    _moveCursorLeftOrRight: function(direction, e) {\n        var actionName = \"moveCursor\" + direction + \"With\";\n        this._currentCursorOpacity = 1;\n        if (e.shiftKey) {\n            actionName += \"Shift\";\n        } else {\n            actionName += \"outShift\";\n        }\n        if (this[actionName](e)) {\n            this.abortCursorAnimation();\n            this.initDelayedCursor();\n            this._fireSelectionChanged();\n            this._updateTextarea();\n        }\n    },\n    moveCursorRightWithShift: function(e) {\n        if (this._selectionDirection === \"left\" && this.selectionStart !== this.selectionEnd) {\n            return this._moveRight(e, \"selectionStart\");\n        } else if (this.selectionEnd !== this._text.length) {\n            this._selectionDirection = \"right\";\n            return this._moveRight(e, \"selectionEnd\");\n        }\n    },\n    moveCursorRightWithoutShift: function(e) {\n        var changed = true;\n        this._selectionDirection = \"right\";\n        if (this.selectionStart === this.selectionEnd) {\n            changed = this._moveRight(e, \"selectionStart\");\n            this.selectionEnd = this.selectionStart;\n        } else {\n            this.selectionStart = this.selectionEnd;\n        }\n        return changed;\n    },\n    removeChars: function(start, end) {\n        if (typeof end === \"undefined\") {\n            end = start + 1;\n        }\n        this.removeStyleFromTo(start, end);\n        this._text.splice(start, end - start);\n        this.text = this._text.join(\"\");\n        this.set(\"dirty\", true);\n        if (this._shouldClearDimensionCache()) {\n            this.initDimensions();\n            this.setCoords();\n        }\n        this._removeExtraneousStyles();\n    },\n    insertChars: function(text, style, start, end) {\n        if (typeof end === \"undefined\") {\n            end = start;\n        }\n        if (end > start) {\n            this.removeStyleFromTo(start, end);\n        }\n        var graphemes = fabric.util.string.graphemeSplit(text);\n        this.insertNewStyleBlock(graphemes, start, style);\n        this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n        this.text = this._text.join(\"\");\n        this.set(\"dirty\", true);\n        if (this._shouldClearDimensionCache()) {\n            this.initDimensions();\n            this.setCoords();\n        }\n        this._removeExtraneousStyles();\n    }\n});\n\n(function() {\n    var toFixed = fabric.util.toFixed, multipleSpacesRegex = /  +/g;\n    fabric.util.object.extend(fabric.Text.prototype, {\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), offsets = this._getSVGLeftTopOffsets(), textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n            this._wrapSVGTextAndBg(markup, textAndBg);\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        _getSVGLeftTopOffsets: function() {\n            return {\n                textLeft: -this.width / 2,\n                textTop: -this.height / 2,\n                lineTop: this.getHeightOfLine(0)\n            };\n        },\n        _wrapSVGTextAndBg: function(markup, textAndBg) {\n            var noShadow = true, filter = this.getSvgFilter(), style = filter === \"\" ? \"\" : ' style=\"' + filter + '\"', textDecoration = this.getSvgTextDecoration(this);\n            markup.push(\"\\t<g \", this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"', style, \">\\n\", textAndBg.textBgRects.join(\"\"), '\\t\\t<text xml:space=\"preserve\" ', this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, \"'\") + '\" ' : \"\", this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : \"\", this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : \"\", this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : \"\", textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : \"\", 'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), \" >\", textAndBg.textSpans.join(\"\"), \"</text>\\n\", \"\\t</g>\\n\");\n        },\n        _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n            var textSpans = [], textBgRects = [], height = textTopOffset, lineOffset;\n            this._setSVGBg(textBgRects);\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                lineOffset = this._getLineLeftOffset(i);\n                if (this.textBackgroundColor || this.styleHas(\"textBackgroundColor\", i)) {\n                    this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n                }\n                this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n                height += this.getHeightOfLine(i);\n            }\n            return {\n                textSpans: textSpans,\n                textBgRects: textBgRects\n            };\n        },\n        _createTextCharSpan: function(_char, styleDecl, left, top) {\n            var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex), styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace), fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : \"\", dy = styleDecl.deltaY, dySpan = \"\", NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n            if (dy) {\n                dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n            }\n            return [ '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan, fillStyles, \">\", fabric.util.string.escapeXml(_char), \"</tspan>\" ].join(\"\");\n        },\n        _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n            var lineHeight = this.getHeightOfLine(lineIndex), isJustify = this.textAlign.indexOf(\"justify\") !== -1, actualStyle, nextStyle, charsToRender = \"\", charBox, style, boxWidth = 0, line = this._textLines[lineIndex], timeToRender;\n            textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n            for (var i = 0, len = line.length - 1; i <= len; i++) {\n                timeToRender = i === len || this.charSpacing;\n                charsToRender += line[i];\n                charBox = this.__charBounds[lineIndex][i];\n                if (boxWidth === 0) {\n                    textLeftOffset += charBox.kernedWidth - charBox.width;\n                    boxWidth += charBox.width;\n                } else {\n                    boxWidth += charBox.kernedWidth;\n                }\n                if (isJustify && !timeToRender) {\n                    if (this._reSpaceAndTab.test(line[i])) {\n                        timeToRender = true;\n                    }\n                }\n                if (!timeToRender) {\n                    actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n                    nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n                    timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n                }\n                if (timeToRender) {\n                    style = this._getStyleDeclaration(lineIndex, i) || {};\n                    textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n                    charsToRender = \"\";\n                    actualStyle = nextStyle;\n                    textLeftOffset += boxWidth;\n                    boxWidth = 0;\n                }\n            }\n        },\n        _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n            var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n            textBgRects.push(\"\\t\\t<rect \", this._getFillAttributes(color), ' x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n        },\n        _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n            var line = this._textLines[i], heightOfLine = this.getHeightOfLine(i) / this.lineHeight, boxWidth = 0, boxStart = 0, charBox, currentColor, lastColor = this.getValueOfPropertyAt(i, 0, \"textBackgroundColor\");\n            for (var j = 0, jlen = line.length; j < jlen; j++) {\n                charBox = this.__charBounds[i][j];\n                currentColor = this.getValueOfPropertyAt(i, j, \"textBackgroundColor\");\n                if (currentColor !== lastColor) {\n                    lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n                    boxStart = charBox.left;\n                    boxWidth = charBox.width;\n                    lastColor = currentColor;\n                } else {\n                    boxWidth += charBox.kernedWidth;\n                }\n            }\n            currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n        },\n        _getFillAttributes: function(value) {\n            var fillColor = value && typeof value === \"string\" ? new fabric.Color(value) : \"\";\n            if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n                return 'fill=\"' + value + '\"';\n            }\n            return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n        },\n        _getSVGLineTopOffset: function(lineIndex) {\n            var lineTopOffset = 0, lastHeight = 0;\n            for (var j = 0; j < lineIndex; j++) {\n                lineTopOffset += this.getHeightOfLine(j);\n            }\n            lastHeight = this.getHeightOfLine(j);\n            return {\n                lineTop: lineTopOffset,\n                offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n            };\n        },\n        getSvgStyles: function(skipShadow) {\n            var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n            return svgStyle + \" white-space: pre;\";\n        }\n    });\n})();\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n        type: \"textbox\",\n        minWidth: 20,\n        dynamicMinWidth: 2,\n        __cachedLines: null,\n        lockScalingFlip: true,\n        noScaleCache: false,\n        _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat(\"width\"),\n        initDimensions: function() {\n            if (this.__skipDimension) {\n                return;\n            }\n            this.isEditing && this.initDelayedCursor();\n            this.clearContextTop();\n            this._clearCache();\n            this.dynamicMinWidth = 0;\n            this._styleMap = this._generateStyleMap(this._splitText());\n            if (this.dynamicMinWidth > this.width) {\n                this._set(\"width\", this.dynamicMinWidth);\n            }\n            if (this.textAlign.indexOf(\"justify\") !== -1) {\n                this.enlargeSpaces();\n            }\n            this.height = this.calcTextHeight();\n            this.saveState({\n                propertySet: \"_dimensionAffectingProps\"\n            });\n        },\n        _generateStyleMap: function(textInfo) {\n            var realLineCount = 0, realLineCharCount = 0, charCount = 0, map = {};\n            for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n                if (textInfo.graphemeText[charCount] === \"\\n\" && i > 0) {\n                    realLineCharCount = 0;\n                    charCount++;\n                    realLineCount++;\n                } else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n                    realLineCharCount++;\n                    charCount++;\n                }\n                map[i] = {\n                    line: realLineCount,\n                    offset: realLineCharCount\n                };\n                charCount += textInfo.graphemeLines[i].length;\n                realLineCharCount += textInfo.graphemeLines[i].length;\n            }\n            return map;\n        },\n        styleHas: function(property, lineIndex) {\n            if (this._styleMap && !this.isWrapping) {\n                var map = this._styleMap[lineIndex];\n                if (map) {\n                    lineIndex = map.line;\n                }\n            }\n            return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n        },\n        isEmptyStyles: function(lineIndex) {\n            var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n            var map = this._styleMap[lineIndex];\n            var mapNextLine = this._styleMap[lineIndex + 1];\n            if (map) {\n                lineIndex = map.line;\n                offset = map.offset;\n            }\n            if (mapNextLine) {\n                nextLineIndex = mapNextLine.line;\n                shouldLimit = nextLineIndex === lineIndex;\n                nextOffset = mapNextLine.offset;\n            }\n            obj = typeof lineIndex === \"undefined\" ? this.styles : {\n                line: this.styles[lineIndex]\n            };\n            for (var p1 in obj) {\n                for (var p2 in obj[p1]) {\n                    if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n                        for (var p3 in obj[p1][p2]) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n        _getStyleDeclaration: function(lineIndex, charIndex) {\n            if (this._styleMap && !this.isWrapping) {\n                var map = this._styleMap[lineIndex];\n                if (!map) {\n                    return null;\n                }\n                lineIndex = map.line;\n                charIndex = map.offset + charIndex;\n            }\n            return this.callSuper(\"_getStyleDeclaration\", lineIndex, charIndex);\n        },\n        _setStyleDeclaration: function(lineIndex, charIndex, style) {\n            var map = this._styleMap[lineIndex];\n            lineIndex = map.line;\n            charIndex = map.offset + charIndex;\n            this.styles[lineIndex][charIndex] = style;\n        },\n        _deleteStyleDeclaration: function(lineIndex, charIndex) {\n            var map = this._styleMap[lineIndex];\n            lineIndex = map.line;\n            charIndex = map.offset + charIndex;\n            delete this.styles[lineIndex][charIndex];\n        },\n        _getLineStyle: function(lineIndex) {\n            var map = this._styleMap[lineIndex];\n            return this.styles[map.line];\n        },\n        _setLineStyle: function(lineIndex, style) {\n            var map = this._styleMap[lineIndex];\n            this.styles[map.line] = style;\n        },\n        _deleteLineStyle: function(lineIndex) {\n            var map = this._styleMap[lineIndex];\n            delete this.styles[map.line];\n        },\n        _wrapText: function(lines, desiredWidth) {\n            var wrapped = [], i;\n            this.isWrapping = true;\n            for (i = 0; i < lines.length; i++) {\n                wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n            }\n            this.isWrapping = false;\n            return wrapped;\n        },\n        _measureWord: function(word, lineIndex, charOffset) {\n            var width = 0, prevGrapheme, skipLeft = true;\n            charOffset = charOffset || 0;\n            for (var i = 0, len = word.length; i < len; i++) {\n                var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n                width += box.kernedWidth;\n                prevGrapheme = word[i];\n            }\n            return width;\n        },\n        _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n            var lineWidth = 0, graphemeLines = [], line = [], words = _line.split(this._reSpaceAndTab), word = \"\", offset = 0, infix = \" \", wordWidth = 0, infixWidth = 0, largestWordWidth = 0, lineJustStarted = true, additionalSpace = this._getWidthOfCharSpacing(), reservedSpace = reservedSpace || 0;\n            desiredWidth -= reservedSpace;\n            for (var i = 0; i < words.length; i++) {\n                word = fabric.util.string.graphemeSplit(words[i]);\n                wordWidth = this._measureWord(word, lineIndex, offset);\n                offset += word.length;\n                lineWidth += infixWidth + wordWidth - additionalSpace;\n                if (lineWidth >= desiredWidth && !lineJustStarted) {\n                    graphemeLines.push(line);\n                    line = [];\n                    lineWidth = wordWidth;\n                    lineJustStarted = true;\n                } else {\n                    lineWidth += additionalSpace;\n                }\n                if (!lineJustStarted) {\n                    line.push(infix);\n                }\n                line = line.concat(word);\n                infixWidth = this._measureWord([ infix ], lineIndex, offset);\n                offset++;\n                lineJustStarted = false;\n                if (wordWidth > largestWordWidth) {\n                    largestWordWidth = wordWidth;\n                }\n            }\n            i && graphemeLines.push(line);\n            if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n                this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n            }\n            return graphemeLines;\n        },\n        isEndOfWrapping: function(lineIndex) {\n            if (!this._styleMap[lineIndex + 1]) {\n                return true;\n            }\n            if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n                return true;\n            }\n            return false;\n        },\n        _splitTextIntoLines: function(text) {\n            var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text), graphemeLines = this._wrapText(newText.lines, this.width), lines = new Array(graphemeLines.length);\n            for (var i = 0; i < graphemeLines.length; i++) {\n                lines[i] = graphemeLines[i].join(\"\");\n            }\n            newText.lines = lines;\n            newText.graphemeLines = graphemeLines;\n            return newText;\n        },\n        getMinWidth: function() {\n            return Math.max(this.minWidth, this.dynamicMinWidth);\n        },\n        toObject: function(propertiesToInclude) {\n            return this.callSuper(\"toObject\", [ \"minWidth\" ].concat(propertiesToInclude));\n        }\n    });\n    fabric.Textbox.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Textbox\", object, callback, \"text\");\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n    fabric.Canvas.prototype._setObjectScale = function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n        var t = transform.target;\n        if (by === \"x\" && t instanceof fabric.Textbox) {\n            var tw = t._getTransformedDimensions().x;\n            var w = t.width * (localMouse.x / tw);\n            if (w >= t.getMinWidth()) {\n                t.set(\"width\", w);\n                return true;\n            }\n        } else {\n            return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n        }\n    };\n    fabric.util.object.extend(fabric.Textbox.prototype, {\n        _removeExtraneousStyles: function() {\n            for (var prop in this._styleMap) {\n                if (!this._textLines[prop]) {\n                    delete this.styles[this._styleMap[prop].line];\n                }\n            }\n        }\n    });\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../es2015/.internal/fabric/fabric.js\n// module id = 588\n// module chunks = 2","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/buffer/index.js\n// module id = 595\n// module chunks = 1 2","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 596\n// module chunks = 1 2","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/base64-js/index.js\n// module id = 597\n// module chunks = 1 2","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/ieee754/index.js\n// module id = 598\n// module chunks = 1 2","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/isarray/index.js\n// module id = 599\n// module chunks = 1 2"],"sourceRoot":""}